;@/Volumes/cusp.jhuapl.edu/project/dmsp/cal/get_sat_facts;@~/research/dmsp/calib/get_sat_facts  ;***************************************************************************************************pro read_facts_tom, sat_in, year_in, facts;***************************************************************************************************sat  =  sat_inif sat gt 18 then begin    print, 'using F18 conversion factors for sat ', sat        sat  =  18    endifyear  =  year_inif year_in lt 1980 then stop, 'year_in lt 1980'    ;***************************************************************************************************;if      year_in lt  80 then  year = year_in + 2000 $;else if year_in lt 100 then  year = year_in + 1900;***************************************************************************************************;factors_fname = '/project/dmsp/cal/ssj_factors.dat';corrections_fname = '/project/dmsp/cal/j4_yearly_corrections.dat';path = '/project/dmsp/ssj4/cal_factors/';***************************************************************************************************;cal_path           =  '/Volumes/cusp.jhuapl.edu/project/dmsp/cal/'cal_path           =  '~/research/dmsp/calib/';cal_path           =  '/project/dmsp/cal/'factors_fname      =  cal_path + 'ssj_factors.dat'corrections_fname  =  cal_path + 'j4_yearly_corrections.dat'get_sat_facts, sat, fact, year ;, path = cal_path;***************************************************************************************************;       k1e(i) = ewidth(i) /2.0 /egf(i) /0.098     ;Jne;       k2e(i) = k1e(i) * een(i)v   =   transpose(fltarr(19))z   =   0.0f0  =  {fact_t $       , eeng:v,   ieng:v $       , ewid:v,   iwid:v $       , gfe:v,    gfi:v  $       , k1e:v,    k1i:v  $       , k2e:v,    k2i:v  $       , jne:v,    jni:v  $       , jee:v,    jei:v  $       , edef:v,   idef:v $;       , eeng9:z,  ieng10:z $;       , gfe9:z,   gfi10:z  $;       , edef9:z,  idef10:z $       }facts = f0if sat le 15 then begin                              ;*** SSJ4 ***    facts.eeng = [fact.eeng[0:8], fact.eeng[10:19]]    facts.ieng = [fact.ieng[0:9], fact.ieng[11:19]]    facts.ewid = [fact.ewid[0:8], fact.ewid[10:19]]    facts.iwid = [fact.iwid[0:9], fact.iwid[11:19]]    facts.gfe = [fact.gfe[0:8], fact.gfe[10:19]]    facts.gfi = [fact.gfi[0:9], fact.gfi[11:19]]    facts.k1e = [fact.k1e[0:8], fact.k1e[10:19]]    facts.k1i = [fact.k1i[0:9], fact.k1i[11:19]]    facts.k2e = [fact.k2e[0:8], fact.k2e[10:19]]    facts.k2i = [fact.k2i[0:9], fact.k2i[11:19]]    facts.jne = facts.k1e    facts.jni = facts.k1i    facts.jee = 1000.*facts.k2e    facts.jei = 1000.*facts.k2i    facts.edef = (facts.eeng/facts.gfe)/0.098    facts.idef = (facts.ieng/facts.gfi)/0.098;    facts.eeng9     =   fact.eeng[9];    facts.ieng10    =   fact.ieng[10];    facts.gfe9      =   fact.gfe[9];    facts.gfi10     =   fact.gfi[10];    facts.edef9     =   facts.eeng9  / facts.gfe9  / 0.098;    facts.idef10    =   facts.ieng10 / facts.gfi10 / 0.098    endif else begin                                   ;*** SSJ5 ***    facts.eeng = [fact.eeng[0:8], fact.eeng[10:19]]    facts.ieng = [fact.ieng[0:8], fact.ieng[10:19]]    facts.ewid = [fact.ewid[0:8], fact.ewid[10:19]]    facts.iwid = [fact.iwid[0:8], fact.iwid[10:19]]    facts.gfe = [fact.gfe[0:8], fact.gfe[10:19]]    facts.gfi = [fact.gfi[0:8], fact.gfi[10:19]]    facts.k1e = [fact.k1e[0:8], fact.k1e[10:19]]    facts.k1i = [fact.k1i[0:8], fact.k1i[10:19]]    facts.k2e = [fact.k2e[0:8], fact.k2e[10:19]]    facts.k2i = [fact.k2i[0:8], fact.k2i[10:19]]    facts.jne = facts.k1e    facts.jni = facts.k1i    facts.jee = 1000.*facts.k2e    facts.jei = 1000.*facts.k2i    facts.edef = (facts.eeng/facts.gfe)/0.05    facts.idef = (facts.ieng/facts.gfi)/0.05    endelsereturnend;*******************************************************************************pro tom_facts, sat, year, facts, fact_ptr;*******************************************************************************if  (sat gt 18) || (year gt 2010) then stop, 'tom_facts: (year gt 2010) || (sat gt 18)'if not keyword_set(fact_ptrs) then  fact_ptrs = ptrarr(18-6+1, 2010-1983+1)if not ptr_valid(fact_ptrs[sat-6, year-1983]) then begin    read_facts_tom, sat, year, fact    fact_ptrs[sat-6, year-1983]  =  ptr_new(fact)endiffact_ptr    =   fact_ptrs[sat-6, year-1983]facts       =  *fact_ptrreturnend