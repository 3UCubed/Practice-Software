
LED-Blink.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008ff8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000055c  080090b8  080090b8  000190b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009614  08009614  000201e0  2**0
                  CONTENTS
  4 .ARM          00000000  08009614  08009614  000201e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08009614  08009614  000201e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009614  08009614  00019614  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009618  08009618  00019618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e0  20000000  0800961c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000118  200001e0  080097fc  000201e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200002f8  080097fc  000202f8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000091d8  00000000  00000000  00020208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001756  00000000  00000000  000293e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000798  00000000  00000000  0002ab38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000006f0  00000000  00000000  0002b2d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012ac0  00000000  00000000  0002b9c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a045  00000000  00000000  0003e480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0006ce47  00000000  00000000  000484c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b530c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002ee0  00000000  00000000  000b535c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001e0 	.word	0x200001e0
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080090a0 	.word	0x080090a0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e4 	.word	0x200001e4
 8000104:	080090a0 	.word	0x080090a0

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff7d 	bl	800133c <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fecd 	bl	80011ec <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 ff6f 	bl	800133c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ff65 	bl	800133c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fef5 	bl	8001270 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 feeb 	bl	8001270 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_d2uiz>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	2200      	movs	r2, #0
 80004ac:	4b0c      	ldr	r3, [pc, #48]	; (80004e0 <__aeabi_d2uiz+0x38>)
 80004ae:	0004      	movs	r4, r0
 80004b0:	000d      	movs	r5, r1
 80004b2:	f7ff ffef 	bl	8000494 <__aeabi_dcmpge>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d104      	bne.n	80004c4 <__aeabi_d2uiz+0x1c>
 80004ba:	0020      	movs	r0, r4
 80004bc:	0029      	movs	r1, r5
 80004be:	f001 fdbd 	bl	800203c <__aeabi_d2iz>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	4b06      	ldr	r3, [pc, #24]	; (80004e0 <__aeabi_d2uiz+0x38>)
 80004c6:	2200      	movs	r2, #0
 80004c8:	0020      	movs	r0, r4
 80004ca:	0029      	movs	r1, r5
 80004cc:	f001 fa06 	bl	80018dc <__aeabi_dsub>
 80004d0:	f001 fdb4 	bl	800203c <__aeabi_d2iz>
 80004d4:	2380      	movs	r3, #128	; 0x80
 80004d6:	061b      	lsls	r3, r3, #24
 80004d8:	469c      	mov	ip, r3
 80004da:	4460      	add	r0, ip
 80004dc:	e7f1      	b.n	80004c2 <__aeabi_d2uiz+0x1a>
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	41e00000 	.word	0x41e00000

080004e4 <__aeabi_d2lz>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	0005      	movs	r5, r0
 80004e8:	000c      	movs	r4, r1
 80004ea:	2200      	movs	r2, #0
 80004ec:	2300      	movs	r3, #0
 80004ee:	0028      	movs	r0, r5
 80004f0:	0021      	movs	r1, r4
 80004f2:	f7ff ffb1 	bl	8000458 <__aeabi_dcmplt>
 80004f6:	2800      	cmp	r0, #0
 80004f8:	d108      	bne.n	800050c <__aeabi_d2lz+0x28>
 80004fa:	0028      	movs	r0, r5
 80004fc:	0021      	movs	r1, r4
 80004fe:	f000 f80f 	bl	8000520 <__aeabi_d2ulz>
 8000502:	0002      	movs	r2, r0
 8000504:	000b      	movs	r3, r1
 8000506:	0010      	movs	r0, r2
 8000508:	0019      	movs	r1, r3
 800050a:	bd70      	pop	{r4, r5, r6, pc}
 800050c:	2380      	movs	r3, #128	; 0x80
 800050e:	061b      	lsls	r3, r3, #24
 8000510:	18e1      	adds	r1, r4, r3
 8000512:	0028      	movs	r0, r5
 8000514:	f000 f804 	bl	8000520 <__aeabi_d2ulz>
 8000518:	2300      	movs	r3, #0
 800051a:	4242      	negs	r2, r0
 800051c:	418b      	sbcs	r3, r1
 800051e:	e7f2      	b.n	8000506 <__aeabi_d2lz+0x22>

08000520 <__aeabi_d2ulz>:
 8000520:	b570      	push	{r4, r5, r6, lr}
 8000522:	2200      	movs	r2, #0
 8000524:	4b0b      	ldr	r3, [pc, #44]	; (8000554 <__aeabi_d2ulz+0x34>)
 8000526:	000d      	movs	r5, r1
 8000528:	0004      	movs	r4, r0
 800052a:	f000 ff6b 	bl	8001404 <__aeabi_dmul>
 800052e:	f7ff ffbb 	bl	80004a8 <__aeabi_d2uiz>
 8000532:	0006      	movs	r6, r0
 8000534:	f001 fde8 	bl	8002108 <__aeabi_ui2d>
 8000538:	2200      	movs	r2, #0
 800053a:	4b07      	ldr	r3, [pc, #28]	; (8000558 <__aeabi_d2ulz+0x38>)
 800053c:	f000 ff62 	bl	8001404 <__aeabi_dmul>
 8000540:	0002      	movs	r2, r0
 8000542:	000b      	movs	r3, r1
 8000544:	0020      	movs	r0, r4
 8000546:	0029      	movs	r1, r5
 8000548:	f001 f9c8 	bl	80018dc <__aeabi_dsub>
 800054c:	f7ff ffac 	bl	80004a8 <__aeabi_d2uiz>
 8000550:	0031      	movs	r1, r6
 8000552:	bd70      	pop	{r4, r5, r6, pc}
 8000554:	3df00000 	.word	0x3df00000
 8000558:	41f00000 	.word	0x41f00000

0800055c <__aeabi_l2d>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	0006      	movs	r6, r0
 8000560:	0008      	movs	r0, r1
 8000562:	f001 fda1 	bl	80020a8 <__aeabi_i2d>
 8000566:	2200      	movs	r2, #0
 8000568:	4b06      	ldr	r3, [pc, #24]	; (8000584 <__aeabi_l2d+0x28>)
 800056a:	f000 ff4b 	bl	8001404 <__aeabi_dmul>
 800056e:	000d      	movs	r5, r1
 8000570:	0004      	movs	r4, r0
 8000572:	0030      	movs	r0, r6
 8000574:	f001 fdc8 	bl	8002108 <__aeabi_ui2d>
 8000578:	002b      	movs	r3, r5
 800057a:	0022      	movs	r2, r4
 800057c:	f000 f804 	bl	8000588 <__aeabi_dadd>
 8000580:	bd70      	pop	{r4, r5, r6, pc}
 8000582:	46c0      	nop			; (mov r8, r8)
 8000584:	41f00000 	.word	0x41f00000

08000588 <__aeabi_dadd>:
 8000588:	b5f0      	push	{r4, r5, r6, r7, lr}
 800058a:	464f      	mov	r7, r9
 800058c:	4646      	mov	r6, r8
 800058e:	46d6      	mov	lr, sl
 8000590:	000d      	movs	r5, r1
 8000592:	0004      	movs	r4, r0
 8000594:	b5c0      	push	{r6, r7, lr}
 8000596:	001f      	movs	r7, r3
 8000598:	0011      	movs	r1, r2
 800059a:	0328      	lsls	r0, r5, #12
 800059c:	0f62      	lsrs	r2, r4, #29
 800059e:	0a40      	lsrs	r0, r0, #9
 80005a0:	4310      	orrs	r0, r2
 80005a2:	007a      	lsls	r2, r7, #1
 80005a4:	0d52      	lsrs	r2, r2, #21
 80005a6:	00e3      	lsls	r3, r4, #3
 80005a8:	033c      	lsls	r4, r7, #12
 80005aa:	4691      	mov	r9, r2
 80005ac:	0a64      	lsrs	r4, r4, #9
 80005ae:	0ffa      	lsrs	r2, r7, #31
 80005b0:	0f4f      	lsrs	r7, r1, #29
 80005b2:	006e      	lsls	r6, r5, #1
 80005b4:	4327      	orrs	r7, r4
 80005b6:	4692      	mov	sl, r2
 80005b8:	46b8      	mov	r8, r7
 80005ba:	0d76      	lsrs	r6, r6, #21
 80005bc:	0fed      	lsrs	r5, r5, #31
 80005be:	00c9      	lsls	r1, r1, #3
 80005c0:	4295      	cmp	r5, r2
 80005c2:	d100      	bne.n	80005c6 <__aeabi_dadd+0x3e>
 80005c4:	e099      	b.n	80006fa <__aeabi_dadd+0x172>
 80005c6:	464c      	mov	r4, r9
 80005c8:	1b34      	subs	r4, r6, r4
 80005ca:	46a4      	mov	ip, r4
 80005cc:	2c00      	cmp	r4, #0
 80005ce:	dc00      	bgt.n	80005d2 <__aeabi_dadd+0x4a>
 80005d0:	e07c      	b.n	80006cc <__aeabi_dadd+0x144>
 80005d2:	464a      	mov	r2, r9
 80005d4:	2a00      	cmp	r2, #0
 80005d6:	d100      	bne.n	80005da <__aeabi_dadd+0x52>
 80005d8:	e0b8      	b.n	800074c <__aeabi_dadd+0x1c4>
 80005da:	4ac5      	ldr	r2, [pc, #788]	; (80008f0 <__aeabi_dadd+0x368>)
 80005dc:	4296      	cmp	r6, r2
 80005de:	d100      	bne.n	80005e2 <__aeabi_dadd+0x5a>
 80005e0:	e11c      	b.n	800081c <__aeabi_dadd+0x294>
 80005e2:	2280      	movs	r2, #128	; 0x80
 80005e4:	003c      	movs	r4, r7
 80005e6:	0412      	lsls	r2, r2, #16
 80005e8:	4314      	orrs	r4, r2
 80005ea:	46a0      	mov	r8, r4
 80005ec:	4662      	mov	r2, ip
 80005ee:	2a38      	cmp	r2, #56	; 0x38
 80005f0:	dd00      	ble.n	80005f4 <__aeabi_dadd+0x6c>
 80005f2:	e161      	b.n	80008b8 <__aeabi_dadd+0x330>
 80005f4:	2a1f      	cmp	r2, #31
 80005f6:	dd00      	ble.n	80005fa <__aeabi_dadd+0x72>
 80005f8:	e1cc      	b.n	8000994 <__aeabi_dadd+0x40c>
 80005fa:	4664      	mov	r4, ip
 80005fc:	2220      	movs	r2, #32
 80005fe:	1b12      	subs	r2, r2, r4
 8000600:	4644      	mov	r4, r8
 8000602:	4094      	lsls	r4, r2
 8000604:	000f      	movs	r7, r1
 8000606:	46a1      	mov	r9, r4
 8000608:	4664      	mov	r4, ip
 800060a:	4091      	lsls	r1, r2
 800060c:	40e7      	lsrs	r7, r4
 800060e:	464c      	mov	r4, r9
 8000610:	1e4a      	subs	r2, r1, #1
 8000612:	4191      	sbcs	r1, r2
 8000614:	433c      	orrs	r4, r7
 8000616:	4642      	mov	r2, r8
 8000618:	4321      	orrs	r1, r4
 800061a:	4664      	mov	r4, ip
 800061c:	40e2      	lsrs	r2, r4
 800061e:	1a80      	subs	r0, r0, r2
 8000620:	1a5c      	subs	r4, r3, r1
 8000622:	42a3      	cmp	r3, r4
 8000624:	419b      	sbcs	r3, r3
 8000626:	425f      	negs	r7, r3
 8000628:	1bc7      	subs	r7, r0, r7
 800062a:	023b      	lsls	r3, r7, #8
 800062c:	d400      	bmi.n	8000630 <__aeabi_dadd+0xa8>
 800062e:	e0d0      	b.n	80007d2 <__aeabi_dadd+0x24a>
 8000630:	027f      	lsls	r7, r7, #9
 8000632:	0a7f      	lsrs	r7, r7, #9
 8000634:	2f00      	cmp	r7, #0
 8000636:	d100      	bne.n	800063a <__aeabi_dadd+0xb2>
 8000638:	e0ff      	b.n	800083a <__aeabi_dadd+0x2b2>
 800063a:	0038      	movs	r0, r7
 800063c:	f001 fe12 	bl	8002264 <__clzsi2>
 8000640:	0001      	movs	r1, r0
 8000642:	3908      	subs	r1, #8
 8000644:	2320      	movs	r3, #32
 8000646:	0022      	movs	r2, r4
 8000648:	1a5b      	subs	r3, r3, r1
 800064a:	408f      	lsls	r7, r1
 800064c:	40da      	lsrs	r2, r3
 800064e:	408c      	lsls	r4, r1
 8000650:	4317      	orrs	r7, r2
 8000652:	42b1      	cmp	r1, r6
 8000654:	da00      	bge.n	8000658 <__aeabi_dadd+0xd0>
 8000656:	e0ff      	b.n	8000858 <__aeabi_dadd+0x2d0>
 8000658:	1b89      	subs	r1, r1, r6
 800065a:	1c4b      	adds	r3, r1, #1
 800065c:	2b1f      	cmp	r3, #31
 800065e:	dd00      	ble.n	8000662 <__aeabi_dadd+0xda>
 8000660:	e0a8      	b.n	80007b4 <__aeabi_dadd+0x22c>
 8000662:	2220      	movs	r2, #32
 8000664:	0039      	movs	r1, r7
 8000666:	1ad2      	subs	r2, r2, r3
 8000668:	0020      	movs	r0, r4
 800066a:	4094      	lsls	r4, r2
 800066c:	4091      	lsls	r1, r2
 800066e:	40d8      	lsrs	r0, r3
 8000670:	1e62      	subs	r2, r4, #1
 8000672:	4194      	sbcs	r4, r2
 8000674:	40df      	lsrs	r7, r3
 8000676:	2600      	movs	r6, #0
 8000678:	4301      	orrs	r1, r0
 800067a:	430c      	orrs	r4, r1
 800067c:	0763      	lsls	r3, r4, #29
 800067e:	d009      	beq.n	8000694 <__aeabi_dadd+0x10c>
 8000680:	230f      	movs	r3, #15
 8000682:	4023      	ands	r3, r4
 8000684:	2b04      	cmp	r3, #4
 8000686:	d005      	beq.n	8000694 <__aeabi_dadd+0x10c>
 8000688:	1d23      	adds	r3, r4, #4
 800068a:	42a3      	cmp	r3, r4
 800068c:	41a4      	sbcs	r4, r4
 800068e:	4264      	negs	r4, r4
 8000690:	193f      	adds	r7, r7, r4
 8000692:	001c      	movs	r4, r3
 8000694:	023b      	lsls	r3, r7, #8
 8000696:	d400      	bmi.n	800069a <__aeabi_dadd+0x112>
 8000698:	e09e      	b.n	80007d8 <__aeabi_dadd+0x250>
 800069a:	4b95      	ldr	r3, [pc, #596]	; (80008f0 <__aeabi_dadd+0x368>)
 800069c:	3601      	adds	r6, #1
 800069e:	429e      	cmp	r6, r3
 80006a0:	d100      	bne.n	80006a4 <__aeabi_dadd+0x11c>
 80006a2:	e0b7      	b.n	8000814 <__aeabi_dadd+0x28c>
 80006a4:	4a93      	ldr	r2, [pc, #588]	; (80008f4 <__aeabi_dadd+0x36c>)
 80006a6:	08e4      	lsrs	r4, r4, #3
 80006a8:	4017      	ands	r7, r2
 80006aa:	077b      	lsls	r3, r7, #29
 80006ac:	0571      	lsls	r1, r6, #21
 80006ae:	027f      	lsls	r7, r7, #9
 80006b0:	4323      	orrs	r3, r4
 80006b2:	0b3f      	lsrs	r7, r7, #12
 80006b4:	0d4a      	lsrs	r2, r1, #21
 80006b6:	0512      	lsls	r2, r2, #20
 80006b8:	433a      	orrs	r2, r7
 80006ba:	07ed      	lsls	r5, r5, #31
 80006bc:	432a      	orrs	r2, r5
 80006be:	0018      	movs	r0, r3
 80006c0:	0011      	movs	r1, r2
 80006c2:	bce0      	pop	{r5, r6, r7}
 80006c4:	46ba      	mov	sl, r7
 80006c6:	46b1      	mov	r9, r6
 80006c8:	46a8      	mov	r8, r5
 80006ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006cc:	2c00      	cmp	r4, #0
 80006ce:	d04b      	beq.n	8000768 <__aeabi_dadd+0x1e0>
 80006d0:	464c      	mov	r4, r9
 80006d2:	1ba4      	subs	r4, r4, r6
 80006d4:	46a4      	mov	ip, r4
 80006d6:	2e00      	cmp	r6, #0
 80006d8:	d000      	beq.n	80006dc <__aeabi_dadd+0x154>
 80006da:	e123      	b.n	8000924 <__aeabi_dadd+0x39c>
 80006dc:	0004      	movs	r4, r0
 80006de:	431c      	orrs	r4, r3
 80006e0:	d100      	bne.n	80006e4 <__aeabi_dadd+0x15c>
 80006e2:	e1af      	b.n	8000a44 <__aeabi_dadd+0x4bc>
 80006e4:	4662      	mov	r2, ip
 80006e6:	1e54      	subs	r4, r2, #1
 80006e8:	2a01      	cmp	r2, #1
 80006ea:	d100      	bne.n	80006ee <__aeabi_dadd+0x166>
 80006ec:	e215      	b.n	8000b1a <__aeabi_dadd+0x592>
 80006ee:	4d80      	ldr	r5, [pc, #512]	; (80008f0 <__aeabi_dadd+0x368>)
 80006f0:	45ac      	cmp	ip, r5
 80006f2:	d100      	bne.n	80006f6 <__aeabi_dadd+0x16e>
 80006f4:	e1c8      	b.n	8000a88 <__aeabi_dadd+0x500>
 80006f6:	46a4      	mov	ip, r4
 80006f8:	e11b      	b.n	8000932 <__aeabi_dadd+0x3aa>
 80006fa:	464a      	mov	r2, r9
 80006fc:	1ab2      	subs	r2, r6, r2
 80006fe:	4694      	mov	ip, r2
 8000700:	2a00      	cmp	r2, #0
 8000702:	dc00      	bgt.n	8000706 <__aeabi_dadd+0x17e>
 8000704:	e0ac      	b.n	8000860 <__aeabi_dadd+0x2d8>
 8000706:	464a      	mov	r2, r9
 8000708:	2a00      	cmp	r2, #0
 800070a:	d043      	beq.n	8000794 <__aeabi_dadd+0x20c>
 800070c:	4a78      	ldr	r2, [pc, #480]	; (80008f0 <__aeabi_dadd+0x368>)
 800070e:	4296      	cmp	r6, r2
 8000710:	d100      	bne.n	8000714 <__aeabi_dadd+0x18c>
 8000712:	e1af      	b.n	8000a74 <__aeabi_dadd+0x4ec>
 8000714:	2280      	movs	r2, #128	; 0x80
 8000716:	003c      	movs	r4, r7
 8000718:	0412      	lsls	r2, r2, #16
 800071a:	4314      	orrs	r4, r2
 800071c:	46a0      	mov	r8, r4
 800071e:	4662      	mov	r2, ip
 8000720:	2a38      	cmp	r2, #56	; 0x38
 8000722:	dc67      	bgt.n	80007f4 <__aeabi_dadd+0x26c>
 8000724:	2a1f      	cmp	r2, #31
 8000726:	dc00      	bgt.n	800072a <__aeabi_dadd+0x1a2>
 8000728:	e15f      	b.n	80009ea <__aeabi_dadd+0x462>
 800072a:	4647      	mov	r7, r8
 800072c:	3a20      	subs	r2, #32
 800072e:	40d7      	lsrs	r7, r2
 8000730:	4662      	mov	r2, ip
 8000732:	2a20      	cmp	r2, #32
 8000734:	d005      	beq.n	8000742 <__aeabi_dadd+0x1ba>
 8000736:	4664      	mov	r4, ip
 8000738:	2240      	movs	r2, #64	; 0x40
 800073a:	1b12      	subs	r2, r2, r4
 800073c:	4644      	mov	r4, r8
 800073e:	4094      	lsls	r4, r2
 8000740:	4321      	orrs	r1, r4
 8000742:	1e4a      	subs	r2, r1, #1
 8000744:	4191      	sbcs	r1, r2
 8000746:	000c      	movs	r4, r1
 8000748:	433c      	orrs	r4, r7
 800074a:	e057      	b.n	80007fc <__aeabi_dadd+0x274>
 800074c:	003a      	movs	r2, r7
 800074e:	430a      	orrs	r2, r1
 8000750:	d100      	bne.n	8000754 <__aeabi_dadd+0x1cc>
 8000752:	e105      	b.n	8000960 <__aeabi_dadd+0x3d8>
 8000754:	0022      	movs	r2, r4
 8000756:	3a01      	subs	r2, #1
 8000758:	2c01      	cmp	r4, #1
 800075a:	d100      	bne.n	800075e <__aeabi_dadd+0x1d6>
 800075c:	e182      	b.n	8000a64 <__aeabi_dadd+0x4dc>
 800075e:	4c64      	ldr	r4, [pc, #400]	; (80008f0 <__aeabi_dadd+0x368>)
 8000760:	45a4      	cmp	ip, r4
 8000762:	d05b      	beq.n	800081c <__aeabi_dadd+0x294>
 8000764:	4694      	mov	ip, r2
 8000766:	e741      	b.n	80005ec <__aeabi_dadd+0x64>
 8000768:	4c63      	ldr	r4, [pc, #396]	; (80008f8 <__aeabi_dadd+0x370>)
 800076a:	1c77      	adds	r7, r6, #1
 800076c:	4227      	tst	r7, r4
 800076e:	d000      	beq.n	8000772 <__aeabi_dadd+0x1ea>
 8000770:	e0c4      	b.n	80008fc <__aeabi_dadd+0x374>
 8000772:	0004      	movs	r4, r0
 8000774:	431c      	orrs	r4, r3
 8000776:	2e00      	cmp	r6, #0
 8000778:	d000      	beq.n	800077c <__aeabi_dadd+0x1f4>
 800077a:	e169      	b.n	8000a50 <__aeabi_dadd+0x4c8>
 800077c:	2c00      	cmp	r4, #0
 800077e:	d100      	bne.n	8000782 <__aeabi_dadd+0x1fa>
 8000780:	e1bf      	b.n	8000b02 <__aeabi_dadd+0x57a>
 8000782:	4644      	mov	r4, r8
 8000784:	430c      	orrs	r4, r1
 8000786:	d000      	beq.n	800078a <__aeabi_dadd+0x202>
 8000788:	e1d0      	b.n	8000b2c <__aeabi_dadd+0x5a4>
 800078a:	0742      	lsls	r2, r0, #29
 800078c:	08db      	lsrs	r3, r3, #3
 800078e:	4313      	orrs	r3, r2
 8000790:	08c0      	lsrs	r0, r0, #3
 8000792:	e029      	b.n	80007e8 <__aeabi_dadd+0x260>
 8000794:	003a      	movs	r2, r7
 8000796:	430a      	orrs	r2, r1
 8000798:	d100      	bne.n	800079c <__aeabi_dadd+0x214>
 800079a:	e170      	b.n	8000a7e <__aeabi_dadd+0x4f6>
 800079c:	4662      	mov	r2, ip
 800079e:	4664      	mov	r4, ip
 80007a0:	3a01      	subs	r2, #1
 80007a2:	2c01      	cmp	r4, #1
 80007a4:	d100      	bne.n	80007a8 <__aeabi_dadd+0x220>
 80007a6:	e0e0      	b.n	800096a <__aeabi_dadd+0x3e2>
 80007a8:	4c51      	ldr	r4, [pc, #324]	; (80008f0 <__aeabi_dadd+0x368>)
 80007aa:	45a4      	cmp	ip, r4
 80007ac:	d100      	bne.n	80007b0 <__aeabi_dadd+0x228>
 80007ae:	e161      	b.n	8000a74 <__aeabi_dadd+0x4ec>
 80007b0:	4694      	mov	ip, r2
 80007b2:	e7b4      	b.n	800071e <__aeabi_dadd+0x196>
 80007b4:	003a      	movs	r2, r7
 80007b6:	391f      	subs	r1, #31
 80007b8:	40ca      	lsrs	r2, r1
 80007ba:	0011      	movs	r1, r2
 80007bc:	2b20      	cmp	r3, #32
 80007be:	d003      	beq.n	80007c8 <__aeabi_dadd+0x240>
 80007c0:	2240      	movs	r2, #64	; 0x40
 80007c2:	1ad3      	subs	r3, r2, r3
 80007c4:	409f      	lsls	r7, r3
 80007c6:	433c      	orrs	r4, r7
 80007c8:	1e63      	subs	r3, r4, #1
 80007ca:	419c      	sbcs	r4, r3
 80007cc:	2700      	movs	r7, #0
 80007ce:	2600      	movs	r6, #0
 80007d0:	430c      	orrs	r4, r1
 80007d2:	0763      	lsls	r3, r4, #29
 80007d4:	d000      	beq.n	80007d8 <__aeabi_dadd+0x250>
 80007d6:	e753      	b.n	8000680 <__aeabi_dadd+0xf8>
 80007d8:	46b4      	mov	ip, r6
 80007da:	08e4      	lsrs	r4, r4, #3
 80007dc:	077b      	lsls	r3, r7, #29
 80007de:	4323      	orrs	r3, r4
 80007e0:	08f8      	lsrs	r0, r7, #3
 80007e2:	4a43      	ldr	r2, [pc, #268]	; (80008f0 <__aeabi_dadd+0x368>)
 80007e4:	4594      	cmp	ip, r2
 80007e6:	d01d      	beq.n	8000824 <__aeabi_dadd+0x29c>
 80007e8:	4662      	mov	r2, ip
 80007ea:	0307      	lsls	r7, r0, #12
 80007ec:	0552      	lsls	r2, r2, #21
 80007ee:	0b3f      	lsrs	r7, r7, #12
 80007f0:	0d52      	lsrs	r2, r2, #21
 80007f2:	e760      	b.n	80006b6 <__aeabi_dadd+0x12e>
 80007f4:	4644      	mov	r4, r8
 80007f6:	430c      	orrs	r4, r1
 80007f8:	1e62      	subs	r2, r4, #1
 80007fa:	4194      	sbcs	r4, r2
 80007fc:	18e4      	adds	r4, r4, r3
 80007fe:	429c      	cmp	r4, r3
 8000800:	419b      	sbcs	r3, r3
 8000802:	425f      	negs	r7, r3
 8000804:	183f      	adds	r7, r7, r0
 8000806:	023b      	lsls	r3, r7, #8
 8000808:	d5e3      	bpl.n	80007d2 <__aeabi_dadd+0x24a>
 800080a:	4b39      	ldr	r3, [pc, #228]	; (80008f0 <__aeabi_dadd+0x368>)
 800080c:	3601      	adds	r6, #1
 800080e:	429e      	cmp	r6, r3
 8000810:	d000      	beq.n	8000814 <__aeabi_dadd+0x28c>
 8000812:	e0b5      	b.n	8000980 <__aeabi_dadd+0x3f8>
 8000814:	0032      	movs	r2, r6
 8000816:	2700      	movs	r7, #0
 8000818:	2300      	movs	r3, #0
 800081a:	e74c      	b.n	80006b6 <__aeabi_dadd+0x12e>
 800081c:	0742      	lsls	r2, r0, #29
 800081e:	08db      	lsrs	r3, r3, #3
 8000820:	4313      	orrs	r3, r2
 8000822:	08c0      	lsrs	r0, r0, #3
 8000824:	001a      	movs	r2, r3
 8000826:	4302      	orrs	r2, r0
 8000828:	d100      	bne.n	800082c <__aeabi_dadd+0x2a4>
 800082a:	e1e1      	b.n	8000bf0 <__aeabi_dadd+0x668>
 800082c:	2780      	movs	r7, #128	; 0x80
 800082e:	033f      	lsls	r7, r7, #12
 8000830:	4307      	orrs	r7, r0
 8000832:	033f      	lsls	r7, r7, #12
 8000834:	4a2e      	ldr	r2, [pc, #184]	; (80008f0 <__aeabi_dadd+0x368>)
 8000836:	0b3f      	lsrs	r7, r7, #12
 8000838:	e73d      	b.n	80006b6 <__aeabi_dadd+0x12e>
 800083a:	0020      	movs	r0, r4
 800083c:	f001 fd12 	bl	8002264 <__clzsi2>
 8000840:	0001      	movs	r1, r0
 8000842:	3118      	adds	r1, #24
 8000844:	291f      	cmp	r1, #31
 8000846:	dc00      	bgt.n	800084a <__aeabi_dadd+0x2c2>
 8000848:	e6fc      	b.n	8000644 <__aeabi_dadd+0xbc>
 800084a:	3808      	subs	r0, #8
 800084c:	4084      	lsls	r4, r0
 800084e:	0027      	movs	r7, r4
 8000850:	2400      	movs	r4, #0
 8000852:	42b1      	cmp	r1, r6
 8000854:	db00      	blt.n	8000858 <__aeabi_dadd+0x2d0>
 8000856:	e6ff      	b.n	8000658 <__aeabi_dadd+0xd0>
 8000858:	4a26      	ldr	r2, [pc, #152]	; (80008f4 <__aeabi_dadd+0x36c>)
 800085a:	1a76      	subs	r6, r6, r1
 800085c:	4017      	ands	r7, r2
 800085e:	e70d      	b.n	800067c <__aeabi_dadd+0xf4>
 8000860:	2a00      	cmp	r2, #0
 8000862:	d02f      	beq.n	80008c4 <__aeabi_dadd+0x33c>
 8000864:	464a      	mov	r2, r9
 8000866:	1b92      	subs	r2, r2, r6
 8000868:	4694      	mov	ip, r2
 800086a:	2e00      	cmp	r6, #0
 800086c:	d100      	bne.n	8000870 <__aeabi_dadd+0x2e8>
 800086e:	e0ad      	b.n	80009cc <__aeabi_dadd+0x444>
 8000870:	4a1f      	ldr	r2, [pc, #124]	; (80008f0 <__aeabi_dadd+0x368>)
 8000872:	4591      	cmp	r9, r2
 8000874:	d100      	bne.n	8000878 <__aeabi_dadd+0x2f0>
 8000876:	e10f      	b.n	8000a98 <__aeabi_dadd+0x510>
 8000878:	2280      	movs	r2, #128	; 0x80
 800087a:	0412      	lsls	r2, r2, #16
 800087c:	4310      	orrs	r0, r2
 800087e:	4662      	mov	r2, ip
 8000880:	2a38      	cmp	r2, #56	; 0x38
 8000882:	dd00      	ble.n	8000886 <__aeabi_dadd+0x2fe>
 8000884:	e10f      	b.n	8000aa6 <__aeabi_dadd+0x51e>
 8000886:	2a1f      	cmp	r2, #31
 8000888:	dd00      	ble.n	800088c <__aeabi_dadd+0x304>
 800088a:	e180      	b.n	8000b8e <__aeabi_dadd+0x606>
 800088c:	4664      	mov	r4, ip
 800088e:	2220      	movs	r2, #32
 8000890:	001e      	movs	r6, r3
 8000892:	1b12      	subs	r2, r2, r4
 8000894:	4667      	mov	r7, ip
 8000896:	0004      	movs	r4, r0
 8000898:	4093      	lsls	r3, r2
 800089a:	4094      	lsls	r4, r2
 800089c:	40fe      	lsrs	r6, r7
 800089e:	1e5a      	subs	r2, r3, #1
 80008a0:	4193      	sbcs	r3, r2
 80008a2:	40f8      	lsrs	r0, r7
 80008a4:	4334      	orrs	r4, r6
 80008a6:	431c      	orrs	r4, r3
 80008a8:	4480      	add	r8, r0
 80008aa:	1864      	adds	r4, r4, r1
 80008ac:	428c      	cmp	r4, r1
 80008ae:	41bf      	sbcs	r7, r7
 80008b0:	427f      	negs	r7, r7
 80008b2:	464e      	mov	r6, r9
 80008b4:	4447      	add	r7, r8
 80008b6:	e7a6      	b.n	8000806 <__aeabi_dadd+0x27e>
 80008b8:	4642      	mov	r2, r8
 80008ba:	430a      	orrs	r2, r1
 80008bc:	0011      	movs	r1, r2
 80008be:	1e4a      	subs	r2, r1, #1
 80008c0:	4191      	sbcs	r1, r2
 80008c2:	e6ad      	b.n	8000620 <__aeabi_dadd+0x98>
 80008c4:	4c0c      	ldr	r4, [pc, #48]	; (80008f8 <__aeabi_dadd+0x370>)
 80008c6:	1c72      	adds	r2, r6, #1
 80008c8:	4222      	tst	r2, r4
 80008ca:	d000      	beq.n	80008ce <__aeabi_dadd+0x346>
 80008cc:	e0a1      	b.n	8000a12 <__aeabi_dadd+0x48a>
 80008ce:	0002      	movs	r2, r0
 80008d0:	431a      	orrs	r2, r3
 80008d2:	2e00      	cmp	r6, #0
 80008d4:	d000      	beq.n	80008d8 <__aeabi_dadd+0x350>
 80008d6:	e0fa      	b.n	8000ace <__aeabi_dadd+0x546>
 80008d8:	2a00      	cmp	r2, #0
 80008da:	d100      	bne.n	80008de <__aeabi_dadd+0x356>
 80008dc:	e145      	b.n	8000b6a <__aeabi_dadd+0x5e2>
 80008de:	003a      	movs	r2, r7
 80008e0:	430a      	orrs	r2, r1
 80008e2:	d000      	beq.n	80008e6 <__aeabi_dadd+0x35e>
 80008e4:	e146      	b.n	8000b74 <__aeabi_dadd+0x5ec>
 80008e6:	0742      	lsls	r2, r0, #29
 80008e8:	08db      	lsrs	r3, r3, #3
 80008ea:	4313      	orrs	r3, r2
 80008ec:	08c0      	lsrs	r0, r0, #3
 80008ee:	e77b      	b.n	80007e8 <__aeabi_dadd+0x260>
 80008f0:	000007ff 	.word	0x000007ff
 80008f4:	ff7fffff 	.word	0xff7fffff
 80008f8:	000007fe 	.word	0x000007fe
 80008fc:	4647      	mov	r7, r8
 80008fe:	1a5c      	subs	r4, r3, r1
 8000900:	1bc2      	subs	r2, r0, r7
 8000902:	42a3      	cmp	r3, r4
 8000904:	41bf      	sbcs	r7, r7
 8000906:	427f      	negs	r7, r7
 8000908:	46b9      	mov	r9, r7
 800090a:	0017      	movs	r7, r2
 800090c:	464a      	mov	r2, r9
 800090e:	1abf      	subs	r7, r7, r2
 8000910:	023a      	lsls	r2, r7, #8
 8000912:	d500      	bpl.n	8000916 <__aeabi_dadd+0x38e>
 8000914:	e08d      	b.n	8000a32 <__aeabi_dadd+0x4aa>
 8000916:	0023      	movs	r3, r4
 8000918:	433b      	orrs	r3, r7
 800091a:	d000      	beq.n	800091e <__aeabi_dadd+0x396>
 800091c:	e68a      	b.n	8000634 <__aeabi_dadd+0xac>
 800091e:	2000      	movs	r0, #0
 8000920:	2500      	movs	r5, #0
 8000922:	e761      	b.n	80007e8 <__aeabi_dadd+0x260>
 8000924:	4cb4      	ldr	r4, [pc, #720]	; (8000bf8 <__aeabi_dadd+0x670>)
 8000926:	45a1      	cmp	r9, r4
 8000928:	d100      	bne.n	800092c <__aeabi_dadd+0x3a4>
 800092a:	e0ad      	b.n	8000a88 <__aeabi_dadd+0x500>
 800092c:	2480      	movs	r4, #128	; 0x80
 800092e:	0424      	lsls	r4, r4, #16
 8000930:	4320      	orrs	r0, r4
 8000932:	4664      	mov	r4, ip
 8000934:	2c38      	cmp	r4, #56	; 0x38
 8000936:	dc3d      	bgt.n	80009b4 <__aeabi_dadd+0x42c>
 8000938:	4662      	mov	r2, ip
 800093a:	2c1f      	cmp	r4, #31
 800093c:	dd00      	ble.n	8000940 <__aeabi_dadd+0x3b8>
 800093e:	e0b7      	b.n	8000ab0 <__aeabi_dadd+0x528>
 8000940:	2520      	movs	r5, #32
 8000942:	001e      	movs	r6, r3
 8000944:	1b2d      	subs	r5, r5, r4
 8000946:	0004      	movs	r4, r0
 8000948:	40ab      	lsls	r3, r5
 800094a:	40ac      	lsls	r4, r5
 800094c:	40d6      	lsrs	r6, r2
 800094e:	40d0      	lsrs	r0, r2
 8000950:	4642      	mov	r2, r8
 8000952:	1e5d      	subs	r5, r3, #1
 8000954:	41ab      	sbcs	r3, r5
 8000956:	4334      	orrs	r4, r6
 8000958:	1a12      	subs	r2, r2, r0
 800095a:	4690      	mov	r8, r2
 800095c:	4323      	orrs	r3, r4
 800095e:	e02c      	b.n	80009ba <__aeabi_dadd+0x432>
 8000960:	0742      	lsls	r2, r0, #29
 8000962:	08db      	lsrs	r3, r3, #3
 8000964:	4313      	orrs	r3, r2
 8000966:	08c0      	lsrs	r0, r0, #3
 8000968:	e73b      	b.n	80007e2 <__aeabi_dadd+0x25a>
 800096a:	185c      	adds	r4, r3, r1
 800096c:	429c      	cmp	r4, r3
 800096e:	419b      	sbcs	r3, r3
 8000970:	4440      	add	r0, r8
 8000972:	425b      	negs	r3, r3
 8000974:	18c7      	adds	r7, r0, r3
 8000976:	2601      	movs	r6, #1
 8000978:	023b      	lsls	r3, r7, #8
 800097a:	d400      	bmi.n	800097e <__aeabi_dadd+0x3f6>
 800097c:	e729      	b.n	80007d2 <__aeabi_dadd+0x24a>
 800097e:	2602      	movs	r6, #2
 8000980:	4a9e      	ldr	r2, [pc, #632]	; (8000bfc <__aeabi_dadd+0x674>)
 8000982:	0863      	lsrs	r3, r4, #1
 8000984:	4017      	ands	r7, r2
 8000986:	2201      	movs	r2, #1
 8000988:	4014      	ands	r4, r2
 800098a:	431c      	orrs	r4, r3
 800098c:	07fb      	lsls	r3, r7, #31
 800098e:	431c      	orrs	r4, r3
 8000990:	087f      	lsrs	r7, r7, #1
 8000992:	e673      	b.n	800067c <__aeabi_dadd+0xf4>
 8000994:	4644      	mov	r4, r8
 8000996:	3a20      	subs	r2, #32
 8000998:	40d4      	lsrs	r4, r2
 800099a:	4662      	mov	r2, ip
 800099c:	2a20      	cmp	r2, #32
 800099e:	d005      	beq.n	80009ac <__aeabi_dadd+0x424>
 80009a0:	4667      	mov	r7, ip
 80009a2:	2240      	movs	r2, #64	; 0x40
 80009a4:	1bd2      	subs	r2, r2, r7
 80009a6:	4647      	mov	r7, r8
 80009a8:	4097      	lsls	r7, r2
 80009aa:	4339      	orrs	r1, r7
 80009ac:	1e4a      	subs	r2, r1, #1
 80009ae:	4191      	sbcs	r1, r2
 80009b0:	4321      	orrs	r1, r4
 80009b2:	e635      	b.n	8000620 <__aeabi_dadd+0x98>
 80009b4:	4303      	orrs	r3, r0
 80009b6:	1e58      	subs	r0, r3, #1
 80009b8:	4183      	sbcs	r3, r0
 80009ba:	1acc      	subs	r4, r1, r3
 80009bc:	42a1      	cmp	r1, r4
 80009be:	41bf      	sbcs	r7, r7
 80009c0:	4643      	mov	r3, r8
 80009c2:	427f      	negs	r7, r7
 80009c4:	4655      	mov	r5, sl
 80009c6:	464e      	mov	r6, r9
 80009c8:	1bdf      	subs	r7, r3, r7
 80009ca:	e62e      	b.n	800062a <__aeabi_dadd+0xa2>
 80009cc:	0002      	movs	r2, r0
 80009ce:	431a      	orrs	r2, r3
 80009d0:	d100      	bne.n	80009d4 <__aeabi_dadd+0x44c>
 80009d2:	e0bd      	b.n	8000b50 <__aeabi_dadd+0x5c8>
 80009d4:	4662      	mov	r2, ip
 80009d6:	4664      	mov	r4, ip
 80009d8:	3a01      	subs	r2, #1
 80009da:	2c01      	cmp	r4, #1
 80009dc:	d100      	bne.n	80009e0 <__aeabi_dadd+0x458>
 80009de:	e0e5      	b.n	8000bac <__aeabi_dadd+0x624>
 80009e0:	4c85      	ldr	r4, [pc, #532]	; (8000bf8 <__aeabi_dadd+0x670>)
 80009e2:	45a4      	cmp	ip, r4
 80009e4:	d058      	beq.n	8000a98 <__aeabi_dadd+0x510>
 80009e6:	4694      	mov	ip, r2
 80009e8:	e749      	b.n	800087e <__aeabi_dadd+0x2f6>
 80009ea:	4664      	mov	r4, ip
 80009ec:	2220      	movs	r2, #32
 80009ee:	1b12      	subs	r2, r2, r4
 80009f0:	4644      	mov	r4, r8
 80009f2:	4094      	lsls	r4, r2
 80009f4:	000f      	movs	r7, r1
 80009f6:	46a1      	mov	r9, r4
 80009f8:	4664      	mov	r4, ip
 80009fa:	4091      	lsls	r1, r2
 80009fc:	40e7      	lsrs	r7, r4
 80009fe:	464c      	mov	r4, r9
 8000a00:	1e4a      	subs	r2, r1, #1
 8000a02:	4191      	sbcs	r1, r2
 8000a04:	433c      	orrs	r4, r7
 8000a06:	4642      	mov	r2, r8
 8000a08:	430c      	orrs	r4, r1
 8000a0a:	4661      	mov	r1, ip
 8000a0c:	40ca      	lsrs	r2, r1
 8000a0e:	1880      	adds	r0, r0, r2
 8000a10:	e6f4      	b.n	80007fc <__aeabi_dadd+0x274>
 8000a12:	4c79      	ldr	r4, [pc, #484]	; (8000bf8 <__aeabi_dadd+0x670>)
 8000a14:	42a2      	cmp	r2, r4
 8000a16:	d100      	bne.n	8000a1a <__aeabi_dadd+0x492>
 8000a18:	e6fd      	b.n	8000816 <__aeabi_dadd+0x28e>
 8000a1a:	1859      	adds	r1, r3, r1
 8000a1c:	4299      	cmp	r1, r3
 8000a1e:	419b      	sbcs	r3, r3
 8000a20:	4440      	add	r0, r8
 8000a22:	425f      	negs	r7, r3
 8000a24:	19c7      	adds	r7, r0, r7
 8000a26:	07fc      	lsls	r4, r7, #31
 8000a28:	0849      	lsrs	r1, r1, #1
 8000a2a:	0016      	movs	r6, r2
 8000a2c:	430c      	orrs	r4, r1
 8000a2e:	087f      	lsrs	r7, r7, #1
 8000a30:	e6cf      	b.n	80007d2 <__aeabi_dadd+0x24a>
 8000a32:	1acc      	subs	r4, r1, r3
 8000a34:	42a1      	cmp	r1, r4
 8000a36:	41bf      	sbcs	r7, r7
 8000a38:	4643      	mov	r3, r8
 8000a3a:	427f      	negs	r7, r7
 8000a3c:	1a18      	subs	r0, r3, r0
 8000a3e:	4655      	mov	r5, sl
 8000a40:	1bc7      	subs	r7, r0, r7
 8000a42:	e5f7      	b.n	8000634 <__aeabi_dadd+0xac>
 8000a44:	08c9      	lsrs	r1, r1, #3
 8000a46:	077b      	lsls	r3, r7, #29
 8000a48:	4655      	mov	r5, sl
 8000a4a:	430b      	orrs	r3, r1
 8000a4c:	08f8      	lsrs	r0, r7, #3
 8000a4e:	e6c8      	b.n	80007e2 <__aeabi_dadd+0x25a>
 8000a50:	2c00      	cmp	r4, #0
 8000a52:	d000      	beq.n	8000a56 <__aeabi_dadd+0x4ce>
 8000a54:	e081      	b.n	8000b5a <__aeabi_dadd+0x5d2>
 8000a56:	4643      	mov	r3, r8
 8000a58:	430b      	orrs	r3, r1
 8000a5a:	d115      	bne.n	8000a88 <__aeabi_dadd+0x500>
 8000a5c:	2080      	movs	r0, #128	; 0x80
 8000a5e:	2500      	movs	r5, #0
 8000a60:	0300      	lsls	r0, r0, #12
 8000a62:	e6e3      	b.n	800082c <__aeabi_dadd+0x2a4>
 8000a64:	1a5c      	subs	r4, r3, r1
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	419b      	sbcs	r3, r3
 8000a6a:	1bc7      	subs	r7, r0, r7
 8000a6c:	425b      	negs	r3, r3
 8000a6e:	2601      	movs	r6, #1
 8000a70:	1aff      	subs	r7, r7, r3
 8000a72:	e5da      	b.n	800062a <__aeabi_dadd+0xa2>
 8000a74:	0742      	lsls	r2, r0, #29
 8000a76:	08db      	lsrs	r3, r3, #3
 8000a78:	4313      	orrs	r3, r2
 8000a7a:	08c0      	lsrs	r0, r0, #3
 8000a7c:	e6d2      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000a7e:	0742      	lsls	r2, r0, #29
 8000a80:	08db      	lsrs	r3, r3, #3
 8000a82:	4313      	orrs	r3, r2
 8000a84:	08c0      	lsrs	r0, r0, #3
 8000a86:	e6ac      	b.n	80007e2 <__aeabi_dadd+0x25a>
 8000a88:	4643      	mov	r3, r8
 8000a8a:	4642      	mov	r2, r8
 8000a8c:	08c9      	lsrs	r1, r1, #3
 8000a8e:	075b      	lsls	r3, r3, #29
 8000a90:	4655      	mov	r5, sl
 8000a92:	430b      	orrs	r3, r1
 8000a94:	08d0      	lsrs	r0, r2, #3
 8000a96:	e6c5      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000a98:	4643      	mov	r3, r8
 8000a9a:	4642      	mov	r2, r8
 8000a9c:	075b      	lsls	r3, r3, #29
 8000a9e:	08c9      	lsrs	r1, r1, #3
 8000aa0:	430b      	orrs	r3, r1
 8000aa2:	08d0      	lsrs	r0, r2, #3
 8000aa4:	e6be      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000aa6:	4303      	orrs	r3, r0
 8000aa8:	001c      	movs	r4, r3
 8000aaa:	1e63      	subs	r3, r4, #1
 8000aac:	419c      	sbcs	r4, r3
 8000aae:	e6fc      	b.n	80008aa <__aeabi_dadd+0x322>
 8000ab0:	0002      	movs	r2, r0
 8000ab2:	3c20      	subs	r4, #32
 8000ab4:	40e2      	lsrs	r2, r4
 8000ab6:	0014      	movs	r4, r2
 8000ab8:	4662      	mov	r2, ip
 8000aba:	2a20      	cmp	r2, #32
 8000abc:	d003      	beq.n	8000ac6 <__aeabi_dadd+0x53e>
 8000abe:	2540      	movs	r5, #64	; 0x40
 8000ac0:	1aad      	subs	r5, r5, r2
 8000ac2:	40a8      	lsls	r0, r5
 8000ac4:	4303      	orrs	r3, r0
 8000ac6:	1e58      	subs	r0, r3, #1
 8000ac8:	4183      	sbcs	r3, r0
 8000aca:	4323      	orrs	r3, r4
 8000acc:	e775      	b.n	80009ba <__aeabi_dadd+0x432>
 8000ace:	2a00      	cmp	r2, #0
 8000ad0:	d0e2      	beq.n	8000a98 <__aeabi_dadd+0x510>
 8000ad2:	003a      	movs	r2, r7
 8000ad4:	430a      	orrs	r2, r1
 8000ad6:	d0cd      	beq.n	8000a74 <__aeabi_dadd+0x4ec>
 8000ad8:	0742      	lsls	r2, r0, #29
 8000ada:	08db      	lsrs	r3, r3, #3
 8000adc:	4313      	orrs	r3, r2
 8000ade:	2280      	movs	r2, #128	; 0x80
 8000ae0:	08c0      	lsrs	r0, r0, #3
 8000ae2:	0312      	lsls	r2, r2, #12
 8000ae4:	4210      	tst	r0, r2
 8000ae6:	d006      	beq.n	8000af6 <__aeabi_dadd+0x56e>
 8000ae8:	08fc      	lsrs	r4, r7, #3
 8000aea:	4214      	tst	r4, r2
 8000aec:	d103      	bne.n	8000af6 <__aeabi_dadd+0x56e>
 8000aee:	0020      	movs	r0, r4
 8000af0:	08cb      	lsrs	r3, r1, #3
 8000af2:	077a      	lsls	r2, r7, #29
 8000af4:	4313      	orrs	r3, r2
 8000af6:	0f5a      	lsrs	r2, r3, #29
 8000af8:	00db      	lsls	r3, r3, #3
 8000afa:	0752      	lsls	r2, r2, #29
 8000afc:	08db      	lsrs	r3, r3, #3
 8000afe:	4313      	orrs	r3, r2
 8000b00:	e690      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000b02:	4643      	mov	r3, r8
 8000b04:	430b      	orrs	r3, r1
 8000b06:	d100      	bne.n	8000b0a <__aeabi_dadd+0x582>
 8000b08:	e709      	b.n	800091e <__aeabi_dadd+0x396>
 8000b0a:	4643      	mov	r3, r8
 8000b0c:	4642      	mov	r2, r8
 8000b0e:	08c9      	lsrs	r1, r1, #3
 8000b10:	075b      	lsls	r3, r3, #29
 8000b12:	4655      	mov	r5, sl
 8000b14:	430b      	orrs	r3, r1
 8000b16:	08d0      	lsrs	r0, r2, #3
 8000b18:	e666      	b.n	80007e8 <__aeabi_dadd+0x260>
 8000b1a:	1acc      	subs	r4, r1, r3
 8000b1c:	42a1      	cmp	r1, r4
 8000b1e:	4189      	sbcs	r1, r1
 8000b20:	1a3f      	subs	r7, r7, r0
 8000b22:	4249      	negs	r1, r1
 8000b24:	4655      	mov	r5, sl
 8000b26:	2601      	movs	r6, #1
 8000b28:	1a7f      	subs	r7, r7, r1
 8000b2a:	e57e      	b.n	800062a <__aeabi_dadd+0xa2>
 8000b2c:	4642      	mov	r2, r8
 8000b2e:	1a5c      	subs	r4, r3, r1
 8000b30:	1a87      	subs	r7, r0, r2
 8000b32:	42a3      	cmp	r3, r4
 8000b34:	4192      	sbcs	r2, r2
 8000b36:	4252      	negs	r2, r2
 8000b38:	1abf      	subs	r7, r7, r2
 8000b3a:	023a      	lsls	r2, r7, #8
 8000b3c:	d53d      	bpl.n	8000bba <__aeabi_dadd+0x632>
 8000b3e:	1acc      	subs	r4, r1, r3
 8000b40:	42a1      	cmp	r1, r4
 8000b42:	4189      	sbcs	r1, r1
 8000b44:	4643      	mov	r3, r8
 8000b46:	4249      	negs	r1, r1
 8000b48:	1a1f      	subs	r7, r3, r0
 8000b4a:	4655      	mov	r5, sl
 8000b4c:	1a7f      	subs	r7, r7, r1
 8000b4e:	e595      	b.n	800067c <__aeabi_dadd+0xf4>
 8000b50:	077b      	lsls	r3, r7, #29
 8000b52:	08c9      	lsrs	r1, r1, #3
 8000b54:	430b      	orrs	r3, r1
 8000b56:	08f8      	lsrs	r0, r7, #3
 8000b58:	e643      	b.n	80007e2 <__aeabi_dadd+0x25a>
 8000b5a:	4644      	mov	r4, r8
 8000b5c:	08db      	lsrs	r3, r3, #3
 8000b5e:	430c      	orrs	r4, r1
 8000b60:	d130      	bne.n	8000bc4 <__aeabi_dadd+0x63c>
 8000b62:	0742      	lsls	r2, r0, #29
 8000b64:	4313      	orrs	r3, r2
 8000b66:	08c0      	lsrs	r0, r0, #3
 8000b68:	e65c      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000b6a:	077b      	lsls	r3, r7, #29
 8000b6c:	08c9      	lsrs	r1, r1, #3
 8000b6e:	430b      	orrs	r3, r1
 8000b70:	08f8      	lsrs	r0, r7, #3
 8000b72:	e639      	b.n	80007e8 <__aeabi_dadd+0x260>
 8000b74:	185c      	adds	r4, r3, r1
 8000b76:	429c      	cmp	r4, r3
 8000b78:	419b      	sbcs	r3, r3
 8000b7a:	4440      	add	r0, r8
 8000b7c:	425b      	negs	r3, r3
 8000b7e:	18c7      	adds	r7, r0, r3
 8000b80:	023b      	lsls	r3, r7, #8
 8000b82:	d400      	bmi.n	8000b86 <__aeabi_dadd+0x5fe>
 8000b84:	e625      	b.n	80007d2 <__aeabi_dadd+0x24a>
 8000b86:	4b1d      	ldr	r3, [pc, #116]	; (8000bfc <__aeabi_dadd+0x674>)
 8000b88:	2601      	movs	r6, #1
 8000b8a:	401f      	ands	r7, r3
 8000b8c:	e621      	b.n	80007d2 <__aeabi_dadd+0x24a>
 8000b8e:	0004      	movs	r4, r0
 8000b90:	3a20      	subs	r2, #32
 8000b92:	40d4      	lsrs	r4, r2
 8000b94:	4662      	mov	r2, ip
 8000b96:	2a20      	cmp	r2, #32
 8000b98:	d004      	beq.n	8000ba4 <__aeabi_dadd+0x61c>
 8000b9a:	2240      	movs	r2, #64	; 0x40
 8000b9c:	4666      	mov	r6, ip
 8000b9e:	1b92      	subs	r2, r2, r6
 8000ba0:	4090      	lsls	r0, r2
 8000ba2:	4303      	orrs	r3, r0
 8000ba4:	1e5a      	subs	r2, r3, #1
 8000ba6:	4193      	sbcs	r3, r2
 8000ba8:	431c      	orrs	r4, r3
 8000baa:	e67e      	b.n	80008aa <__aeabi_dadd+0x322>
 8000bac:	185c      	adds	r4, r3, r1
 8000bae:	428c      	cmp	r4, r1
 8000bb0:	4189      	sbcs	r1, r1
 8000bb2:	4440      	add	r0, r8
 8000bb4:	4249      	negs	r1, r1
 8000bb6:	1847      	adds	r7, r0, r1
 8000bb8:	e6dd      	b.n	8000976 <__aeabi_dadd+0x3ee>
 8000bba:	0023      	movs	r3, r4
 8000bbc:	433b      	orrs	r3, r7
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_dadd+0x63a>
 8000bc0:	e6ad      	b.n	800091e <__aeabi_dadd+0x396>
 8000bc2:	e606      	b.n	80007d2 <__aeabi_dadd+0x24a>
 8000bc4:	0744      	lsls	r4, r0, #29
 8000bc6:	4323      	orrs	r3, r4
 8000bc8:	2480      	movs	r4, #128	; 0x80
 8000bca:	08c0      	lsrs	r0, r0, #3
 8000bcc:	0324      	lsls	r4, r4, #12
 8000bce:	4220      	tst	r0, r4
 8000bd0:	d008      	beq.n	8000be4 <__aeabi_dadd+0x65c>
 8000bd2:	4642      	mov	r2, r8
 8000bd4:	08d6      	lsrs	r6, r2, #3
 8000bd6:	4226      	tst	r6, r4
 8000bd8:	d104      	bne.n	8000be4 <__aeabi_dadd+0x65c>
 8000bda:	4655      	mov	r5, sl
 8000bdc:	0030      	movs	r0, r6
 8000bde:	08cb      	lsrs	r3, r1, #3
 8000be0:	0751      	lsls	r1, r2, #29
 8000be2:	430b      	orrs	r3, r1
 8000be4:	0f5a      	lsrs	r2, r3, #29
 8000be6:	00db      	lsls	r3, r3, #3
 8000be8:	08db      	lsrs	r3, r3, #3
 8000bea:	0752      	lsls	r2, r2, #29
 8000bec:	4313      	orrs	r3, r2
 8000bee:	e619      	b.n	8000824 <__aeabi_dadd+0x29c>
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	4a01      	ldr	r2, [pc, #4]	; (8000bf8 <__aeabi_dadd+0x670>)
 8000bf4:	001f      	movs	r7, r3
 8000bf6:	e55e      	b.n	80006b6 <__aeabi_dadd+0x12e>
 8000bf8:	000007ff 	.word	0x000007ff
 8000bfc:	ff7fffff 	.word	0xff7fffff

08000c00 <__aeabi_ddiv>:
 8000c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c02:	4657      	mov	r7, sl
 8000c04:	464e      	mov	r6, r9
 8000c06:	4645      	mov	r5, r8
 8000c08:	46de      	mov	lr, fp
 8000c0a:	b5e0      	push	{r5, r6, r7, lr}
 8000c0c:	4681      	mov	r9, r0
 8000c0e:	0005      	movs	r5, r0
 8000c10:	030c      	lsls	r4, r1, #12
 8000c12:	0048      	lsls	r0, r1, #1
 8000c14:	4692      	mov	sl, r2
 8000c16:	001f      	movs	r7, r3
 8000c18:	b085      	sub	sp, #20
 8000c1a:	0b24      	lsrs	r4, r4, #12
 8000c1c:	0d40      	lsrs	r0, r0, #21
 8000c1e:	0fce      	lsrs	r6, r1, #31
 8000c20:	2800      	cmp	r0, #0
 8000c22:	d100      	bne.n	8000c26 <__aeabi_ddiv+0x26>
 8000c24:	e156      	b.n	8000ed4 <__aeabi_ddiv+0x2d4>
 8000c26:	4bd4      	ldr	r3, [pc, #848]	; (8000f78 <__aeabi_ddiv+0x378>)
 8000c28:	4298      	cmp	r0, r3
 8000c2a:	d100      	bne.n	8000c2e <__aeabi_ddiv+0x2e>
 8000c2c:	e172      	b.n	8000f14 <__aeabi_ddiv+0x314>
 8000c2e:	0f6b      	lsrs	r3, r5, #29
 8000c30:	00e4      	lsls	r4, r4, #3
 8000c32:	431c      	orrs	r4, r3
 8000c34:	2380      	movs	r3, #128	; 0x80
 8000c36:	041b      	lsls	r3, r3, #16
 8000c38:	4323      	orrs	r3, r4
 8000c3a:	4698      	mov	r8, r3
 8000c3c:	4bcf      	ldr	r3, [pc, #828]	; (8000f7c <__aeabi_ddiv+0x37c>)
 8000c3e:	00ed      	lsls	r5, r5, #3
 8000c40:	469b      	mov	fp, r3
 8000c42:	2300      	movs	r3, #0
 8000c44:	4699      	mov	r9, r3
 8000c46:	4483      	add	fp, r0
 8000c48:	9300      	str	r3, [sp, #0]
 8000c4a:	033c      	lsls	r4, r7, #12
 8000c4c:	007b      	lsls	r3, r7, #1
 8000c4e:	4650      	mov	r0, sl
 8000c50:	0b24      	lsrs	r4, r4, #12
 8000c52:	0d5b      	lsrs	r3, r3, #21
 8000c54:	0fff      	lsrs	r7, r7, #31
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d100      	bne.n	8000c5c <__aeabi_ddiv+0x5c>
 8000c5a:	e11f      	b.n	8000e9c <__aeabi_ddiv+0x29c>
 8000c5c:	4ac6      	ldr	r2, [pc, #792]	; (8000f78 <__aeabi_ddiv+0x378>)
 8000c5e:	4293      	cmp	r3, r2
 8000c60:	d100      	bne.n	8000c64 <__aeabi_ddiv+0x64>
 8000c62:	e162      	b.n	8000f2a <__aeabi_ddiv+0x32a>
 8000c64:	49c5      	ldr	r1, [pc, #788]	; (8000f7c <__aeabi_ddiv+0x37c>)
 8000c66:	0f42      	lsrs	r2, r0, #29
 8000c68:	468c      	mov	ip, r1
 8000c6a:	00e4      	lsls	r4, r4, #3
 8000c6c:	4659      	mov	r1, fp
 8000c6e:	4314      	orrs	r4, r2
 8000c70:	2280      	movs	r2, #128	; 0x80
 8000c72:	4463      	add	r3, ip
 8000c74:	0412      	lsls	r2, r2, #16
 8000c76:	1acb      	subs	r3, r1, r3
 8000c78:	4314      	orrs	r4, r2
 8000c7a:	469b      	mov	fp, r3
 8000c7c:	00c2      	lsls	r2, r0, #3
 8000c7e:	2000      	movs	r0, #0
 8000c80:	0033      	movs	r3, r6
 8000c82:	407b      	eors	r3, r7
 8000c84:	469a      	mov	sl, r3
 8000c86:	464b      	mov	r3, r9
 8000c88:	2b0f      	cmp	r3, #15
 8000c8a:	d827      	bhi.n	8000cdc <__aeabi_ddiv+0xdc>
 8000c8c:	49bc      	ldr	r1, [pc, #752]	; (8000f80 <__aeabi_ddiv+0x380>)
 8000c8e:	009b      	lsls	r3, r3, #2
 8000c90:	58cb      	ldr	r3, [r1, r3]
 8000c92:	469f      	mov	pc, r3
 8000c94:	46b2      	mov	sl, r6
 8000c96:	9b00      	ldr	r3, [sp, #0]
 8000c98:	2b02      	cmp	r3, #2
 8000c9a:	d016      	beq.n	8000cca <__aeabi_ddiv+0xca>
 8000c9c:	2b03      	cmp	r3, #3
 8000c9e:	d100      	bne.n	8000ca2 <__aeabi_ddiv+0xa2>
 8000ca0:	e28e      	b.n	80011c0 <__aeabi_ddiv+0x5c0>
 8000ca2:	2b01      	cmp	r3, #1
 8000ca4:	d000      	beq.n	8000ca8 <__aeabi_ddiv+0xa8>
 8000ca6:	e0d9      	b.n	8000e5c <__aeabi_ddiv+0x25c>
 8000ca8:	2300      	movs	r3, #0
 8000caa:	2400      	movs	r4, #0
 8000cac:	2500      	movs	r5, #0
 8000cae:	4652      	mov	r2, sl
 8000cb0:	051b      	lsls	r3, r3, #20
 8000cb2:	4323      	orrs	r3, r4
 8000cb4:	07d2      	lsls	r2, r2, #31
 8000cb6:	4313      	orrs	r3, r2
 8000cb8:	0028      	movs	r0, r5
 8000cba:	0019      	movs	r1, r3
 8000cbc:	b005      	add	sp, #20
 8000cbe:	bcf0      	pop	{r4, r5, r6, r7}
 8000cc0:	46bb      	mov	fp, r7
 8000cc2:	46b2      	mov	sl, r6
 8000cc4:	46a9      	mov	r9, r5
 8000cc6:	46a0      	mov	r8, r4
 8000cc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cca:	2400      	movs	r4, #0
 8000ccc:	2500      	movs	r5, #0
 8000cce:	4baa      	ldr	r3, [pc, #680]	; (8000f78 <__aeabi_ddiv+0x378>)
 8000cd0:	e7ed      	b.n	8000cae <__aeabi_ddiv+0xae>
 8000cd2:	46ba      	mov	sl, r7
 8000cd4:	46a0      	mov	r8, r4
 8000cd6:	0015      	movs	r5, r2
 8000cd8:	9000      	str	r0, [sp, #0]
 8000cda:	e7dc      	b.n	8000c96 <__aeabi_ddiv+0x96>
 8000cdc:	4544      	cmp	r4, r8
 8000cde:	d200      	bcs.n	8000ce2 <__aeabi_ddiv+0xe2>
 8000ce0:	e1c7      	b.n	8001072 <__aeabi_ddiv+0x472>
 8000ce2:	d100      	bne.n	8000ce6 <__aeabi_ddiv+0xe6>
 8000ce4:	e1c2      	b.n	800106c <__aeabi_ddiv+0x46c>
 8000ce6:	2301      	movs	r3, #1
 8000ce8:	425b      	negs	r3, r3
 8000cea:	469c      	mov	ip, r3
 8000cec:	002e      	movs	r6, r5
 8000cee:	4640      	mov	r0, r8
 8000cf0:	2500      	movs	r5, #0
 8000cf2:	44e3      	add	fp, ip
 8000cf4:	0223      	lsls	r3, r4, #8
 8000cf6:	0e14      	lsrs	r4, r2, #24
 8000cf8:	431c      	orrs	r4, r3
 8000cfa:	0c1b      	lsrs	r3, r3, #16
 8000cfc:	4699      	mov	r9, r3
 8000cfe:	0423      	lsls	r3, r4, #16
 8000d00:	0c1f      	lsrs	r7, r3, #16
 8000d02:	0212      	lsls	r2, r2, #8
 8000d04:	4649      	mov	r1, r9
 8000d06:	9200      	str	r2, [sp, #0]
 8000d08:	9701      	str	r7, [sp, #4]
 8000d0a:	f7ff fa9f 	bl	800024c <__aeabi_uidivmod>
 8000d0e:	0002      	movs	r2, r0
 8000d10:	437a      	muls	r2, r7
 8000d12:	040b      	lsls	r3, r1, #16
 8000d14:	0c31      	lsrs	r1, r6, #16
 8000d16:	4680      	mov	r8, r0
 8000d18:	4319      	orrs	r1, r3
 8000d1a:	428a      	cmp	r2, r1
 8000d1c:	d907      	bls.n	8000d2e <__aeabi_ddiv+0x12e>
 8000d1e:	2301      	movs	r3, #1
 8000d20:	425b      	negs	r3, r3
 8000d22:	469c      	mov	ip, r3
 8000d24:	1909      	adds	r1, r1, r4
 8000d26:	44e0      	add	r8, ip
 8000d28:	428c      	cmp	r4, r1
 8000d2a:	d800      	bhi.n	8000d2e <__aeabi_ddiv+0x12e>
 8000d2c:	e207      	b.n	800113e <__aeabi_ddiv+0x53e>
 8000d2e:	1a88      	subs	r0, r1, r2
 8000d30:	4649      	mov	r1, r9
 8000d32:	f7ff fa8b 	bl	800024c <__aeabi_uidivmod>
 8000d36:	0409      	lsls	r1, r1, #16
 8000d38:	468c      	mov	ip, r1
 8000d3a:	0431      	lsls	r1, r6, #16
 8000d3c:	4666      	mov	r6, ip
 8000d3e:	9a01      	ldr	r2, [sp, #4]
 8000d40:	0c09      	lsrs	r1, r1, #16
 8000d42:	4342      	muls	r2, r0
 8000d44:	0003      	movs	r3, r0
 8000d46:	4331      	orrs	r1, r6
 8000d48:	428a      	cmp	r2, r1
 8000d4a:	d904      	bls.n	8000d56 <__aeabi_ddiv+0x156>
 8000d4c:	1909      	adds	r1, r1, r4
 8000d4e:	3b01      	subs	r3, #1
 8000d50:	428c      	cmp	r4, r1
 8000d52:	d800      	bhi.n	8000d56 <__aeabi_ddiv+0x156>
 8000d54:	e1ed      	b.n	8001132 <__aeabi_ddiv+0x532>
 8000d56:	1a88      	subs	r0, r1, r2
 8000d58:	4642      	mov	r2, r8
 8000d5a:	0412      	lsls	r2, r2, #16
 8000d5c:	431a      	orrs	r2, r3
 8000d5e:	4690      	mov	r8, r2
 8000d60:	4641      	mov	r1, r8
 8000d62:	9b00      	ldr	r3, [sp, #0]
 8000d64:	040e      	lsls	r6, r1, #16
 8000d66:	0c1b      	lsrs	r3, r3, #16
 8000d68:	001f      	movs	r7, r3
 8000d6a:	9302      	str	r3, [sp, #8]
 8000d6c:	9b00      	ldr	r3, [sp, #0]
 8000d6e:	0c36      	lsrs	r6, r6, #16
 8000d70:	041b      	lsls	r3, r3, #16
 8000d72:	0c19      	lsrs	r1, r3, #16
 8000d74:	000b      	movs	r3, r1
 8000d76:	4373      	muls	r3, r6
 8000d78:	0c12      	lsrs	r2, r2, #16
 8000d7a:	437e      	muls	r6, r7
 8000d7c:	9103      	str	r1, [sp, #12]
 8000d7e:	4351      	muls	r1, r2
 8000d80:	437a      	muls	r2, r7
 8000d82:	0c1f      	lsrs	r7, r3, #16
 8000d84:	46bc      	mov	ip, r7
 8000d86:	1876      	adds	r6, r6, r1
 8000d88:	4466      	add	r6, ip
 8000d8a:	42b1      	cmp	r1, r6
 8000d8c:	d903      	bls.n	8000d96 <__aeabi_ddiv+0x196>
 8000d8e:	2180      	movs	r1, #128	; 0x80
 8000d90:	0249      	lsls	r1, r1, #9
 8000d92:	468c      	mov	ip, r1
 8000d94:	4462      	add	r2, ip
 8000d96:	0c31      	lsrs	r1, r6, #16
 8000d98:	188a      	adds	r2, r1, r2
 8000d9a:	0431      	lsls	r1, r6, #16
 8000d9c:	041e      	lsls	r6, r3, #16
 8000d9e:	0c36      	lsrs	r6, r6, #16
 8000da0:	198e      	adds	r6, r1, r6
 8000da2:	4290      	cmp	r0, r2
 8000da4:	d302      	bcc.n	8000dac <__aeabi_ddiv+0x1ac>
 8000da6:	d112      	bne.n	8000dce <__aeabi_ddiv+0x1ce>
 8000da8:	42b5      	cmp	r5, r6
 8000daa:	d210      	bcs.n	8000dce <__aeabi_ddiv+0x1ce>
 8000dac:	4643      	mov	r3, r8
 8000dae:	1e59      	subs	r1, r3, #1
 8000db0:	9b00      	ldr	r3, [sp, #0]
 8000db2:	469c      	mov	ip, r3
 8000db4:	4465      	add	r5, ip
 8000db6:	001f      	movs	r7, r3
 8000db8:	429d      	cmp	r5, r3
 8000dba:	419b      	sbcs	r3, r3
 8000dbc:	425b      	negs	r3, r3
 8000dbe:	191b      	adds	r3, r3, r4
 8000dc0:	18c0      	adds	r0, r0, r3
 8000dc2:	4284      	cmp	r4, r0
 8000dc4:	d200      	bcs.n	8000dc8 <__aeabi_ddiv+0x1c8>
 8000dc6:	e1a0      	b.n	800110a <__aeabi_ddiv+0x50a>
 8000dc8:	d100      	bne.n	8000dcc <__aeabi_ddiv+0x1cc>
 8000dca:	e19b      	b.n	8001104 <__aeabi_ddiv+0x504>
 8000dcc:	4688      	mov	r8, r1
 8000dce:	1bae      	subs	r6, r5, r6
 8000dd0:	42b5      	cmp	r5, r6
 8000dd2:	41ad      	sbcs	r5, r5
 8000dd4:	1a80      	subs	r0, r0, r2
 8000dd6:	426d      	negs	r5, r5
 8000dd8:	1b40      	subs	r0, r0, r5
 8000dda:	4284      	cmp	r4, r0
 8000ddc:	d100      	bne.n	8000de0 <__aeabi_ddiv+0x1e0>
 8000dde:	e1d5      	b.n	800118c <__aeabi_ddiv+0x58c>
 8000de0:	4649      	mov	r1, r9
 8000de2:	f7ff fa33 	bl	800024c <__aeabi_uidivmod>
 8000de6:	9a01      	ldr	r2, [sp, #4]
 8000de8:	040b      	lsls	r3, r1, #16
 8000dea:	4342      	muls	r2, r0
 8000dec:	0c31      	lsrs	r1, r6, #16
 8000dee:	0005      	movs	r5, r0
 8000df0:	4319      	orrs	r1, r3
 8000df2:	428a      	cmp	r2, r1
 8000df4:	d900      	bls.n	8000df8 <__aeabi_ddiv+0x1f8>
 8000df6:	e16c      	b.n	80010d2 <__aeabi_ddiv+0x4d2>
 8000df8:	1a88      	subs	r0, r1, r2
 8000dfa:	4649      	mov	r1, r9
 8000dfc:	f7ff fa26 	bl	800024c <__aeabi_uidivmod>
 8000e00:	9a01      	ldr	r2, [sp, #4]
 8000e02:	0436      	lsls	r6, r6, #16
 8000e04:	4342      	muls	r2, r0
 8000e06:	0409      	lsls	r1, r1, #16
 8000e08:	0c36      	lsrs	r6, r6, #16
 8000e0a:	0003      	movs	r3, r0
 8000e0c:	430e      	orrs	r6, r1
 8000e0e:	42b2      	cmp	r2, r6
 8000e10:	d900      	bls.n	8000e14 <__aeabi_ddiv+0x214>
 8000e12:	e153      	b.n	80010bc <__aeabi_ddiv+0x4bc>
 8000e14:	9803      	ldr	r0, [sp, #12]
 8000e16:	1ab6      	subs	r6, r6, r2
 8000e18:	0002      	movs	r2, r0
 8000e1a:	042d      	lsls	r5, r5, #16
 8000e1c:	431d      	orrs	r5, r3
 8000e1e:	9f02      	ldr	r7, [sp, #8]
 8000e20:	042b      	lsls	r3, r5, #16
 8000e22:	0c1b      	lsrs	r3, r3, #16
 8000e24:	435a      	muls	r2, r3
 8000e26:	437b      	muls	r3, r7
 8000e28:	469c      	mov	ip, r3
 8000e2a:	0c29      	lsrs	r1, r5, #16
 8000e2c:	4348      	muls	r0, r1
 8000e2e:	0c13      	lsrs	r3, r2, #16
 8000e30:	4484      	add	ip, r0
 8000e32:	4463      	add	r3, ip
 8000e34:	4379      	muls	r1, r7
 8000e36:	4298      	cmp	r0, r3
 8000e38:	d903      	bls.n	8000e42 <__aeabi_ddiv+0x242>
 8000e3a:	2080      	movs	r0, #128	; 0x80
 8000e3c:	0240      	lsls	r0, r0, #9
 8000e3e:	4684      	mov	ip, r0
 8000e40:	4461      	add	r1, ip
 8000e42:	0c18      	lsrs	r0, r3, #16
 8000e44:	0412      	lsls	r2, r2, #16
 8000e46:	041b      	lsls	r3, r3, #16
 8000e48:	0c12      	lsrs	r2, r2, #16
 8000e4a:	1841      	adds	r1, r0, r1
 8000e4c:	189b      	adds	r3, r3, r2
 8000e4e:	428e      	cmp	r6, r1
 8000e50:	d200      	bcs.n	8000e54 <__aeabi_ddiv+0x254>
 8000e52:	e0ff      	b.n	8001054 <__aeabi_ddiv+0x454>
 8000e54:	d100      	bne.n	8000e58 <__aeabi_ddiv+0x258>
 8000e56:	e0fa      	b.n	800104e <__aeabi_ddiv+0x44e>
 8000e58:	2301      	movs	r3, #1
 8000e5a:	431d      	orrs	r5, r3
 8000e5c:	4a49      	ldr	r2, [pc, #292]	; (8000f84 <__aeabi_ddiv+0x384>)
 8000e5e:	445a      	add	r2, fp
 8000e60:	2a00      	cmp	r2, #0
 8000e62:	dc00      	bgt.n	8000e66 <__aeabi_ddiv+0x266>
 8000e64:	e0aa      	b.n	8000fbc <__aeabi_ddiv+0x3bc>
 8000e66:	076b      	lsls	r3, r5, #29
 8000e68:	d000      	beq.n	8000e6c <__aeabi_ddiv+0x26c>
 8000e6a:	e13d      	b.n	80010e8 <__aeabi_ddiv+0x4e8>
 8000e6c:	08ed      	lsrs	r5, r5, #3
 8000e6e:	4643      	mov	r3, r8
 8000e70:	01db      	lsls	r3, r3, #7
 8000e72:	d506      	bpl.n	8000e82 <__aeabi_ddiv+0x282>
 8000e74:	4642      	mov	r2, r8
 8000e76:	4b44      	ldr	r3, [pc, #272]	; (8000f88 <__aeabi_ddiv+0x388>)
 8000e78:	401a      	ands	r2, r3
 8000e7a:	4690      	mov	r8, r2
 8000e7c:	2280      	movs	r2, #128	; 0x80
 8000e7e:	00d2      	lsls	r2, r2, #3
 8000e80:	445a      	add	r2, fp
 8000e82:	4b42      	ldr	r3, [pc, #264]	; (8000f8c <__aeabi_ddiv+0x38c>)
 8000e84:	429a      	cmp	r2, r3
 8000e86:	dd00      	ble.n	8000e8a <__aeabi_ddiv+0x28a>
 8000e88:	e71f      	b.n	8000cca <__aeabi_ddiv+0xca>
 8000e8a:	4643      	mov	r3, r8
 8000e8c:	075b      	lsls	r3, r3, #29
 8000e8e:	431d      	orrs	r5, r3
 8000e90:	4643      	mov	r3, r8
 8000e92:	0552      	lsls	r2, r2, #21
 8000e94:	025c      	lsls	r4, r3, #9
 8000e96:	0b24      	lsrs	r4, r4, #12
 8000e98:	0d53      	lsrs	r3, r2, #21
 8000e9a:	e708      	b.n	8000cae <__aeabi_ddiv+0xae>
 8000e9c:	4652      	mov	r2, sl
 8000e9e:	4322      	orrs	r2, r4
 8000ea0:	d100      	bne.n	8000ea4 <__aeabi_ddiv+0x2a4>
 8000ea2:	e07b      	b.n	8000f9c <__aeabi_ddiv+0x39c>
 8000ea4:	2c00      	cmp	r4, #0
 8000ea6:	d100      	bne.n	8000eaa <__aeabi_ddiv+0x2aa>
 8000ea8:	e0fa      	b.n	80010a0 <__aeabi_ddiv+0x4a0>
 8000eaa:	0020      	movs	r0, r4
 8000eac:	f001 f9da 	bl	8002264 <__clzsi2>
 8000eb0:	0002      	movs	r2, r0
 8000eb2:	3a0b      	subs	r2, #11
 8000eb4:	231d      	movs	r3, #29
 8000eb6:	0001      	movs	r1, r0
 8000eb8:	1a9b      	subs	r3, r3, r2
 8000eba:	4652      	mov	r2, sl
 8000ebc:	3908      	subs	r1, #8
 8000ebe:	40da      	lsrs	r2, r3
 8000ec0:	408c      	lsls	r4, r1
 8000ec2:	4314      	orrs	r4, r2
 8000ec4:	4652      	mov	r2, sl
 8000ec6:	408a      	lsls	r2, r1
 8000ec8:	4b31      	ldr	r3, [pc, #196]	; (8000f90 <__aeabi_ddiv+0x390>)
 8000eca:	4458      	add	r0, fp
 8000ecc:	469b      	mov	fp, r3
 8000ece:	4483      	add	fp, r0
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	e6d5      	b.n	8000c80 <__aeabi_ddiv+0x80>
 8000ed4:	464b      	mov	r3, r9
 8000ed6:	4323      	orrs	r3, r4
 8000ed8:	4698      	mov	r8, r3
 8000eda:	d044      	beq.n	8000f66 <__aeabi_ddiv+0x366>
 8000edc:	2c00      	cmp	r4, #0
 8000ede:	d100      	bne.n	8000ee2 <__aeabi_ddiv+0x2e2>
 8000ee0:	e0ce      	b.n	8001080 <__aeabi_ddiv+0x480>
 8000ee2:	0020      	movs	r0, r4
 8000ee4:	f001 f9be 	bl	8002264 <__clzsi2>
 8000ee8:	0001      	movs	r1, r0
 8000eea:	0002      	movs	r2, r0
 8000eec:	390b      	subs	r1, #11
 8000eee:	231d      	movs	r3, #29
 8000ef0:	1a5b      	subs	r3, r3, r1
 8000ef2:	4649      	mov	r1, r9
 8000ef4:	0010      	movs	r0, r2
 8000ef6:	40d9      	lsrs	r1, r3
 8000ef8:	3808      	subs	r0, #8
 8000efa:	4084      	lsls	r4, r0
 8000efc:	000b      	movs	r3, r1
 8000efe:	464d      	mov	r5, r9
 8000f00:	4323      	orrs	r3, r4
 8000f02:	4698      	mov	r8, r3
 8000f04:	4085      	lsls	r5, r0
 8000f06:	4823      	ldr	r0, [pc, #140]	; (8000f94 <__aeabi_ddiv+0x394>)
 8000f08:	1a83      	subs	r3, r0, r2
 8000f0a:	469b      	mov	fp, r3
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	4699      	mov	r9, r3
 8000f10:	9300      	str	r3, [sp, #0]
 8000f12:	e69a      	b.n	8000c4a <__aeabi_ddiv+0x4a>
 8000f14:	464b      	mov	r3, r9
 8000f16:	4323      	orrs	r3, r4
 8000f18:	4698      	mov	r8, r3
 8000f1a:	d11d      	bne.n	8000f58 <__aeabi_ddiv+0x358>
 8000f1c:	2308      	movs	r3, #8
 8000f1e:	4699      	mov	r9, r3
 8000f20:	3b06      	subs	r3, #6
 8000f22:	2500      	movs	r5, #0
 8000f24:	4683      	mov	fp, r0
 8000f26:	9300      	str	r3, [sp, #0]
 8000f28:	e68f      	b.n	8000c4a <__aeabi_ddiv+0x4a>
 8000f2a:	4652      	mov	r2, sl
 8000f2c:	4322      	orrs	r2, r4
 8000f2e:	d109      	bne.n	8000f44 <__aeabi_ddiv+0x344>
 8000f30:	2302      	movs	r3, #2
 8000f32:	4649      	mov	r1, r9
 8000f34:	4319      	orrs	r1, r3
 8000f36:	4b18      	ldr	r3, [pc, #96]	; (8000f98 <__aeabi_ddiv+0x398>)
 8000f38:	4689      	mov	r9, r1
 8000f3a:	469c      	mov	ip, r3
 8000f3c:	2400      	movs	r4, #0
 8000f3e:	2002      	movs	r0, #2
 8000f40:	44e3      	add	fp, ip
 8000f42:	e69d      	b.n	8000c80 <__aeabi_ddiv+0x80>
 8000f44:	2303      	movs	r3, #3
 8000f46:	464a      	mov	r2, r9
 8000f48:	431a      	orrs	r2, r3
 8000f4a:	4b13      	ldr	r3, [pc, #76]	; (8000f98 <__aeabi_ddiv+0x398>)
 8000f4c:	4691      	mov	r9, r2
 8000f4e:	469c      	mov	ip, r3
 8000f50:	4652      	mov	r2, sl
 8000f52:	2003      	movs	r0, #3
 8000f54:	44e3      	add	fp, ip
 8000f56:	e693      	b.n	8000c80 <__aeabi_ddiv+0x80>
 8000f58:	230c      	movs	r3, #12
 8000f5a:	4699      	mov	r9, r3
 8000f5c:	3b09      	subs	r3, #9
 8000f5e:	46a0      	mov	r8, r4
 8000f60:	4683      	mov	fp, r0
 8000f62:	9300      	str	r3, [sp, #0]
 8000f64:	e671      	b.n	8000c4a <__aeabi_ddiv+0x4a>
 8000f66:	2304      	movs	r3, #4
 8000f68:	4699      	mov	r9, r3
 8000f6a:	2300      	movs	r3, #0
 8000f6c:	469b      	mov	fp, r3
 8000f6e:	3301      	adds	r3, #1
 8000f70:	2500      	movs	r5, #0
 8000f72:	9300      	str	r3, [sp, #0]
 8000f74:	e669      	b.n	8000c4a <__aeabi_ddiv+0x4a>
 8000f76:	46c0      	nop			; (mov r8, r8)
 8000f78:	000007ff 	.word	0x000007ff
 8000f7c:	fffffc01 	.word	0xfffffc01
 8000f80:	080090d8 	.word	0x080090d8
 8000f84:	000003ff 	.word	0x000003ff
 8000f88:	feffffff 	.word	0xfeffffff
 8000f8c:	000007fe 	.word	0x000007fe
 8000f90:	000003f3 	.word	0x000003f3
 8000f94:	fffffc0d 	.word	0xfffffc0d
 8000f98:	fffff801 	.word	0xfffff801
 8000f9c:	4649      	mov	r1, r9
 8000f9e:	2301      	movs	r3, #1
 8000fa0:	4319      	orrs	r1, r3
 8000fa2:	4689      	mov	r9, r1
 8000fa4:	2400      	movs	r4, #0
 8000fa6:	2001      	movs	r0, #1
 8000fa8:	e66a      	b.n	8000c80 <__aeabi_ddiv+0x80>
 8000faa:	2300      	movs	r3, #0
 8000fac:	2480      	movs	r4, #128	; 0x80
 8000fae:	469a      	mov	sl, r3
 8000fb0:	2500      	movs	r5, #0
 8000fb2:	4b8a      	ldr	r3, [pc, #552]	; (80011dc <__aeabi_ddiv+0x5dc>)
 8000fb4:	0324      	lsls	r4, r4, #12
 8000fb6:	e67a      	b.n	8000cae <__aeabi_ddiv+0xae>
 8000fb8:	2501      	movs	r5, #1
 8000fba:	426d      	negs	r5, r5
 8000fbc:	2301      	movs	r3, #1
 8000fbe:	1a9b      	subs	r3, r3, r2
 8000fc0:	2b38      	cmp	r3, #56	; 0x38
 8000fc2:	dd00      	ble.n	8000fc6 <__aeabi_ddiv+0x3c6>
 8000fc4:	e670      	b.n	8000ca8 <__aeabi_ddiv+0xa8>
 8000fc6:	2b1f      	cmp	r3, #31
 8000fc8:	dc00      	bgt.n	8000fcc <__aeabi_ddiv+0x3cc>
 8000fca:	e0bf      	b.n	800114c <__aeabi_ddiv+0x54c>
 8000fcc:	211f      	movs	r1, #31
 8000fce:	4249      	negs	r1, r1
 8000fd0:	1a8a      	subs	r2, r1, r2
 8000fd2:	4641      	mov	r1, r8
 8000fd4:	40d1      	lsrs	r1, r2
 8000fd6:	000a      	movs	r2, r1
 8000fd8:	2b20      	cmp	r3, #32
 8000fda:	d004      	beq.n	8000fe6 <__aeabi_ddiv+0x3e6>
 8000fdc:	4641      	mov	r1, r8
 8000fde:	4b80      	ldr	r3, [pc, #512]	; (80011e0 <__aeabi_ddiv+0x5e0>)
 8000fe0:	445b      	add	r3, fp
 8000fe2:	4099      	lsls	r1, r3
 8000fe4:	430d      	orrs	r5, r1
 8000fe6:	1e6b      	subs	r3, r5, #1
 8000fe8:	419d      	sbcs	r5, r3
 8000fea:	2307      	movs	r3, #7
 8000fec:	432a      	orrs	r2, r5
 8000fee:	001d      	movs	r5, r3
 8000ff0:	2400      	movs	r4, #0
 8000ff2:	4015      	ands	r5, r2
 8000ff4:	4213      	tst	r3, r2
 8000ff6:	d100      	bne.n	8000ffa <__aeabi_ddiv+0x3fa>
 8000ff8:	e0d4      	b.n	80011a4 <__aeabi_ddiv+0x5a4>
 8000ffa:	210f      	movs	r1, #15
 8000ffc:	2300      	movs	r3, #0
 8000ffe:	4011      	ands	r1, r2
 8001000:	2904      	cmp	r1, #4
 8001002:	d100      	bne.n	8001006 <__aeabi_ddiv+0x406>
 8001004:	e0cb      	b.n	800119e <__aeabi_ddiv+0x59e>
 8001006:	1d11      	adds	r1, r2, #4
 8001008:	4291      	cmp	r1, r2
 800100a:	4192      	sbcs	r2, r2
 800100c:	4252      	negs	r2, r2
 800100e:	189b      	adds	r3, r3, r2
 8001010:	000a      	movs	r2, r1
 8001012:	0219      	lsls	r1, r3, #8
 8001014:	d400      	bmi.n	8001018 <__aeabi_ddiv+0x418>
 8001016:	e0c2      	b.n	800119e <__aeabi_ddiv+0x59e>
 8001018:	2301      	movs	r3, #1
 800101a:	2400      	movs	r4, #0
 800101c:	2500      	movs	r5, #0
 800101e:	e646      	b.n	8000cae <__aeabi_ddiv+0xae>
 8001020:	2380      	movs	r3, #128	; 0x80
 8001022:	4641      	mov	r1, r8
 8001024:	031b      	lsls	r3, r3, #12
 8001026:	4219      	tst	r1, r3
 8001028:	d008      	beq.n	800103c <__aeabi_ddiv+0x43c>
 800102a:	421c      	tst	r4, r3
 800102c:	d106      	bne.n	800103c <__aeabi_ddiv+0x43c>
 800102e:	431c      	orrs	r4, r3
 8001030:	0324      	lsls	r4, r4, #12
 8001032:	46ba      	mov	sl, r7
 8001034:	0015      	movs	r5, r2
 8001036:	4b69      	ldr	r3, [pc, #420]	; (80011dc <__aeabi_ddiv+0x5dc>)
 8001038:	0b24      	lsrs	r4, r4, #12
 800103a:	e638      	b.n	8000cae <__aeabi_ddiv+0xae>
 800103c:	2480      	movs	r4, #128	; 0x80
 800103e:	4643      	mov	r3, r8
 8001040:	0324      	lsls	r4, r4, #12
 8001042:	431c      	orrs	r4, r3
 8001044:	0324      	lsls	r4, r4, #12
 8001046:	46b2      	mov	sl, r6
 8001048:	4b64      	ldr	r3, [pc, #400]	; (80011dc <__aeabi_ddiv+0x5dc>)
 800104a:	0b24      	lsrs	r4, r4, #12
 800104c:	e62f      	b.n	8000cae <__aeabi_ddiv+0xae>
 800104e:	2b00      	cmp	r3, #0
 8001050:	d100      	bne.n	8001054 <__aeabi_ddiv+0x454>
 8001052:	e703      	b.n	8000e5c <__aeabi_ddiv+0x25c>
 8001054:	19a6      	adds	r6, r4, r6
 8001056:	1e68      	subs	r0, r5, #1
 8001058:	42a6      	cmp	r6, r4
 800105a:	d200      	bcs.n	800105e <__aeabi_ddiv+0x45e>
 800105c:	e08d      	b.n	800117a <__aeabi_ddiv+0x57a>
 800105e:	428e      	cmp	r6, r1
 8001060:	d200      	bcs.n	8001064 <__aeabi_ddiv+0x464>
 8001062:	e0a3      	b.n	80011ac <__aeabi_ddiv+0x5ac>
 8001064:	d100      	bne.n	8001068 <__aeabi_ddiv+0x468>
 8001066:	e0b3      	b.n	80011d0 <__aeabi_ddiv+0x5d0>
 8001068:	0005      	movs	r5, r0
 800106a:	e6f5      	b.n	8000e58 <__aeabi_ddiv+0x258>
 800106c:	42aa      	cmp	r2, r5
 800106e:	d900      	bls.n	8001072 <__aeabi_ddiv+0x472>
 8001070:	e639      	b.n	8000ce6 <__aeabi_ddiv+0xe6>
 8001072:	4643      	mov	r3, r8
 8001074:	07de      	lsls	r6, r3, #31
 8001076:	0858      	lsrs	r0, r3, #1
 8001078:	086b      	lsrs	r3, r5, #1
 800107a:	431e      	orrs	r6, r3
 800107c:	07ed      	lsls	r5, r5, #31
 800107e:	e639      	b.n	8000cf4 <__aeabi_ddiv+0xf4>
 8001080:	4648      	mov	r0, r9
 8001082:	f001 f8ef 	bl	8002264 <__clzsi2>
 8001086:	0001      	movs	r1, r0
 8001088:	0002      	movs	r2, r0
 800108a:	3115      	adds	r1, #21
 800108c:	3220      	adds	r2, #32
 800108e:	291c      	cmp	r1, #28
 8001090:	dc00      	bgt.n	8001094 <__aeabi_ddiv+0x494>
 8001092:	e72c      	b.n	8000eee <__aeabi_ddiv+0x2ee>
 8001094:	464b      	mov	r3, r9
 8001096:	3808      	subs	r0, #8
 8001098:	4083      	lsls	r3, r0
 800109a:	2500      	movs	r5, #0
 800109c:	4698      	mov	r8, r3
 800109e:	e732      	b.n	8000f06 <__aeabi_ddiv+0x306>
 80010a0:	f001 f8e0 	bl	8002264 <__clzsi2>
 80010a4:	0003      	movs	r3, r0
 80010a6:	001a      	movs	r2, r3
 80010a8:	3215      	adds	r2, #21
 80010aa:	3020      	adds	r0, #32
 80010ac:	2a1c      	cmp	r2, #28
 80010ae:	dc00      	bgt.n	80010b2 <__aeabi_ddiv+0x4b2>
 80010b0:	e700      	b.n	8000eb4 <__aeabi_ddiv+0x2b4>
 80010b2:	4654      	mov	r4, sl
 80010b4:	3b08      	subs	r3, #8
 80010b6:	2200      	movs	r2, #0
 80010b8:	409c      	lsls	r4, r3
 80010ba:	e705      	b.n	8000ec8 <__aeabi_ddiv+0x2c8>
 80010bc:	1936      	adds	r6, r6, r4
 80010be:	3b01      	subs	r3, #1
 80010c0:	42b4      	cmp	r4, r6
 80010c2:	d900      	bls.n	80010c6 <__aeabi_ddiv+0x4c6>
 80010c4:	e6a6      	b.n	8000e14 <__aeabi_ddiv+0x214>
 80010c6:	42b2      	cmp	r2, r6
 80010c8:	d800      	bhi.n	80010cc <__aeabi_ddiv+0x4cc>
 80010ca:	e6a3      	b.n	8000e14 <__aeabi_ddiv+0x214>
 80010cc:	1e83      	subs	r3, r0, #2
 80010ce:	1936      	adds	r6, r6, r4
 80010d0:	e6a0      	b.n	8000e14 <__aeabi_ddiv+0x214>
 80010d2:	1909      	adds	r1, r1, r4
 80010d4:	3d01      	subs	r5, #1
 80010d6:	428c      	cmp	r4, r1
 80010d8:	d900      	bls.n	80010dc <__aeabi_ddiv+0x4dc>
 80010da:	e68d      	b.n	8000df8 <__aeabi_ddiv+0x1f8>
 80010dc:	428a      	cmp	r2, r1
 80010de:	d800      	bhi.n	80010e2 <__aeabi_ddiv+0x4e2>
 80010e0:	e68a      	b.n	8000df8 <__aeabi_ddiv+0x1f8>
 80010e2:	1e85      	subs	r5, r0, #2
 80010e4:	1909      	adds	r1, r1, r4
 80010e6:	e687      	b.n	8000df8 <__aeabi_ddiv+0x1f8>
 80010e8:	230f      	movs	r3, #15
 80010ea:	402b      	ands	r3, r5
 80010ec:	2b04      	cmp	r3, #4
 80010ee:	d100      	bne.n	80010f2 <__aeabi_ddiv+0x4f2>
 80010f0:	e6bc      	b.n	8000e6c <__aeabi_ddiv+0x26c>
 80010f2:	2305      	movs	r3, #5
 80010f4:	425b      	negs	r3, r3
 80010f6:	42ab      	cmp	r3, r5
 80010f8:	419b      	sbcs	r3, r3
 80010fa:	3504      	adds	r5, #4
 80010fc:	425b      	negs	r3, r3
 80010fe:	08ed      	lsrs	r5, r5, #3
 8001100:	4498      	add	r8, r3
 8001102:	e6b4      	b.n	8000e6e <__aeabi_ddiv+0x26e>
 8001104:	42af      	cmp	r7, r5
 8001106:	d900      	bls.n	800110a <__aeabi_ddiv+0x50a>
 8001108:	e660      	b.n	8000dcc <__aeabi_ddiv+0x1cc>
 800110a:	4282      	cmp	r2, r0
 800110c:	d804      	bhi.n	8001118 <__aeabi_ddiv+0x518>
 800110e:	d000      	beq.n	8001112 <__aeabi_ddiv+0x512>
 8001110:	e65c      	b.n	8000dcc <__aeabi_ddiv+0x1cc>
 8001112:	42ae      	cmp	r6, r5
 8001114:	d800      	bhi.n	8001118 <__aeabi_ddiv+0x518>
 8001116:	e659      	b.n	8000dcc <__aeabi_ddiv+0x1cc>
 8001118:	2302      	movs	r3, #2
 800111a:	425b      	negs	r3, r3
 800111c:	469c      	mov	ip, r3
 800111e:	9b00      	ldr	r3, [sp, #0]
 8001120:	44e0      	add	r8, ip
 8001122:	469c      	mov	ip, r3
 8001124:	4465      	add	r5, ip
 8001126:	429d      	cmp	r5, r3
 8001128:	419b      	sbcs	r3, r3
 800112a:	425b      	negs	r3, r3
 800112c:	191b      	adds	r3, r3, r4
 800112e:	18c0      	adds	r0, r0, r3
 8001130:	e64d      	b.n	8000dce <__aeabi_ddiv+0x1ce>
 8001132:	428a      	cmp	r2, r1
 8001134:	d800      	bhi.n	8001138 <__aeabi_ddiv+0x538>
 8001136:	e60e      	b.n	8000d56 <__aeabi_ddiv+0x156>
 8001138:	1e83      	subs	r3, r0, #2
 800113a:	1909      	adds	r1, r1, r4
 800113c:	e60b      	b.n	8000d56 <__aeabi_ddiv+0x156>
 800113e:	428a      	cmp	r2, r1
 8001140:	d800      	bhi.n	8001144 <__aeabi_ddiv+0x544>
 8001142:	e5f4      	b.n	8000d2e <__aeabi_ddiv+0x12e>
 8001144:	1e83      	subs	r3, r0, #2
 8001146:	4698      	mov	r8, r3
 8001148:	1909      	adds	r1, r1, r4
 800114a:	e5f0      	b.n	8000d2e <__aeabi_ddiv+0x12e>
 800114c:	4925      	ldr	r1, [pc, #148]	; (80011e4 <__aeabi_ddiv+0x5e4>)
 800114e:	0028      	movs	r0, r5
 8001150:	4459      	add	r1, fp
 8001152:	408d      	lsls	r5, r1
 8001154:	4642      	mov	r2, r8
 8001156:	408a      	lsls	r2, r1
 8001158:	1e69      	subs	r1, r5, #1
 800115a:	418d      	sbcs	r5, r1
 800115c:	4641      	mov	r1, r8
 800115e:	40d8      	lsrs	r0, r3
 8001160:	40d9      	lsrs	r1, r3
 8001162:	4302      	orrs	r2, r0
 8001164:	432a      	orrs	r2, r5
 8001166:	000b      	movs	r3, r1
 8001168:	0751      	lsls	r1, r2, #29
 800116a:	d100      	bne.n	800116e <__aeabi_ddiv+0x56e>
 800116c:	e751      	b.n	8001012 <__aeabi_ddiv+0x412>
 800116e:	210f      	movs	r1, #15
 8001170:	4011      	ands	r1, r2
 8001172:	2904      	cmp	r1, #4
 8001174:	d000      	beq.n	8001178 <__aeabi_ddiv+0x578>
 8001176:	e746      	b.n	8001006 <__aeabi_ddiv+0x406>
 8001178:	e74b      	b.n	8001012 <__aeabi_ddiv+0x412>
 800117a:	0005      	movs	r5, r0
 800117c:	428e      	cmp	r6, r1
 800117e:	d000      	beq.n	8001182 <__aeabi_ddiv+0x582>
 8001180:	e66a      	b.n	8000e58 <__aeabi_ddiv+0x258>
 8001182:	9a00      	ldr	r2, [sp, #0]
 8001184:	4293      	cmp	r3, r2
 8001186:	d000      	beq.n	800118a <__aeabi_ddiv+0x58a>
 8001188:	e666      	b.n	8000e58 <__aeabi_ddiv+0x258>
 800118a:	e667      	b.n	8000e5c <__aeabi_ddiv+0x25c>
 800118c:	4a16      	ldr	r2, [pc, #88]	; (80011e8 <__aeabi_ddiv+0x5e8>)
 800118e:	445a      	add	r2, fp
 8001190:	2a00      	cmp	r2, #0
 8001192:	dc00      	bgt.n	8001196 <__aeabi_ddiv+0x596>
 8001194:	e710      	b.n	8000fb8 <__aeabi_ddiv+0x3b8>
 8001196:	2301      	movs	r3, #1
 8001198:	2500      	movs	r5, #0
 800119a:	4498      	add	r8, r3
 800119c:	e667      	b.n	8000e6e <__aeabi_ddiv+0x26e>
 800119e:	075d      	lsls	r5, r3, #29
 80011a0:	025b      	lsls	r3, r3, #9
 80011a2:	0b1c      	lsrs	r4, r3, #12
 80011a4:	08d2      	lsrs	r2, r2, #3
 80011a6:	2300      	movs	r3, #0
 80011a8:	4315      	orrs	r5, r2
 80011aa:	e580      	b.n	8000cae <__aeabi_ddiv+0xae>
 80011ac:	9800      	ldr	r0, [sp, #0]
 80011ae:	3d02      	subs	r5, #2
 80011b0:	0042      	lsls	r2, r0, #1
 80011b2:	4282      	cmp	r2, r0
 80011b4:	41bf      	sbcs	r7, r7
 80011b6:	427f      	negs	r7, r7
 80011b8:	193c      	adds	r4, r7, r4
 80011ba:	1936      	adds	r6, r6, r4
 80011bc:	9200      	str	r2, [sp, #0]
 80011be:	e7dd      	b.n	800117c <__aeabi_ddiv+0x57c>
 80011c0:	2480      	movs	r4, #128	; 0x80
 80011c2:	4643      	mov	r3, r8
 80011c4:	0324      	lsls	r4, r4, #12
 80011c6:	431c      	orrs	r4, r3
 80011c8:	0324      	lsls	r4, r4, #12
 80011ca:	4b04      	ldr	r3, [pc, #16]	; (80011dc <__aeabi_ddiv+0x5dc>)
 80011cc:	0b24      	lsrs	r4, r4, #12
 80011ce:	e56e      	b.n	8000cae <__aeabi_ddiv+0xae>
 80011d0:	9a00      	ldr	r2, [sp, #0]
 80011d2:	429a      	cmp	r2, r3
 80011d4:	d3ea      	bcc.n	80011ac <__aeabi_ddiv+0x5ac>
 80011d6:	0005      	movs	r5, r0
 80011d8:	e7d3      	b.n	8001182 <__aeabi_ddiv+0x582>
 80011da:	46c0      	nop			; (mov r8, r8)
 80011dc:	000007ff 	.word	0x000007ff
 80011e0:	0000043e 	.word	0x0000043e
 80011e4:	0000041e 	.word	0x0000041e
 80011e8:	000003ff 	.word	0x000003ff

080011ec <__eqdf2>:
 80011ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011ee:	464e      	mov	r6, r9
 80011f0:	4645      	mov	r5, r8
 80011f2:	46de      	mov	lr, fp
 80011f4:	4657      	mov	r7, sl
 80011f6:	4690      	mov	r8, r2
 80011f8:	b5e0      	push	{r5, r6, r7, lr}
 80011fa:	0017      	movs	r7, r2
 80011fc:	031a      	lsls	r2, r3, #12
 80011fe:	0b12      	lsrs	r2, r2, #12
 8001200:	0005      	movs	r5, r0
 8001202:	4684      	mov	ip, r0
 8001204:	4819      	ldr	r0, [pc, #100]	; (800126c <__eqdf2+0x80>)
 8001206:	030e      	lsls	r6, r1, #12
 8001208:	004c      	lsls	r4, r1, #1
 800120a:	4691      	mov	r9, r2
 800120c:	005a      	lsls	r2, r3, #1
 800120e:	0fdb      	lsrs	r3, r3, #31
 8001210:	469b      	mov	fp, r3
 8001212:	0b36      	lsrs	r6, r6, #12
 8001214:	0d64      	lsrs	r4, r4, #21
 8001216:	0fc9      	lsrs	r1, r1, #31
 8001218:	0d52      	lsrs	r2, r2, #21
 800121a:	4284      	cmp	r4, r0
 800121c:	d019      	beq.n	8001252 <__eqdf2+0x66>
 800121e:	4282      	cmp	r2, r0
 8001220:	d010      	beq.n	8001244 <__eqdf2+0x58>
 8001222:	2001      	movs	r0, #1
 8001224:	4294      	cmp	r4, r2
 8001226:	d10e      	bne.n	8001246 <__eqdf2+0x5a>
 8001228:	454e      	cmp	r6, r9
 800122a:	d10c      	bne.n	8001246 <__eqdf2+0x5a>
 800122c:	2001      	movs	r0, #1
 800122e:	45c4      	cmp	ip, r8
 8001230:	d109      	bne.n	8001246 <__eqdf2+0x5a>
 8001232:	4559      	cmp	r1, fp
 8001234:	d017      	beq.n	8001266 <__eqdf2+0x7a>
 8001236:	2c00      	cmp	r4, #0
 8001238:	d105      	bne.n	8001246 <__eqdf2+0x5a>
 800123a:	0030      	movs	r0, r6
 800123c:	4328      	orrs	r0, r5
 800123e:	1e43      	subs	r3, r0, #1
 8001240:	4198      	sbcs	r0, r3
 8001242:	e000      	b.n	8001246 <__eqdf2+0x5a>
 8001244:	2001      	movs	r0, #1
 8001246:	bcf0      	pop	{r4, r5, r6, r7}
 8001248:	46bb      	mov	fp, r7
 800124a:	46b2      	mov	sl, r6
 800124c:	46a9      	mov	r9, r5
 800124e:	46a0      	mov	r8, r4
 8001250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001252:	0033      	movs	r3, r6
 8001254:	2001      	movs	r0, #1
 8001256:	432b      	orrs	r3, r5
 8001258:	d1f5      	bne.n	8001246 <__eqdf2+0x5a>
 800125a:	42a2      	cmp	r2, r4
 800125c:	d1f3      	bne.n	8001246 <__eqdf2+0x5a>
 800125e:	464b      	mov	r3, r9
 8001260:	433b      	orrs	r3, r7
 8001262:	d1f0      	bne.n	8001246 <__eqdf2+0x5a>
 8001264:	e7e2      	b.n	800122c <__eqdf2+0x40>
 8001266:	2000      	movs	r0, #0
 8001268:	e7ed      	b.n	8001246 <__eqdf2+0x5a>
 800126a:	46c0      	nop			; (mov r8, r8)
 800126c:	000007ff 	.word	0x000007ff

08001270 <__gedf2>:
 8001270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001272:	4647      	mov	r7, r8
 8001274:	46ce      	mov	lr, r9
 8001276:	0004      	movs	r4, r0
 8001278:	0018      	movs	r0, r3
 800127a:	0016      	movs	r6, r2
 800127c:	031b      	lsls	r3, r3, #12
 800127e:	0b1b      	lsrs	r3, r3, #12
 8001280:	4d2d      	ldr	r5, [pc, #180]	; (8001338 <__gedf2+0xc8>)
 8001282:	004a      	lsls	r2, r1, #1
 8001284:	4699      	mov	r9, r3
 8001286:	b580      	push	{r7, lr}
 8001288:	0043      	lsls	r3, r0, #1
 800128a:	030f      	lsls	r7, r1, #12
 800128c:	46a4      	mov	ip, r4
 800128e:	46b0      	mov	r8, r6
 8001290:	0b3f      	lsrs	r7, r7, #12
 8001292:	0d52      	lsrs	r2, r2, #21
 8001294:	0fc9      	lsrs	r1, r1, #31
 8001296:	0d5b      	lsrs	r3, r3, #21
 8001298:	0fc0      	lsrs	r0, r0, #31
 800129a:	42aa      	cmp	r2, r5
 800129c:	d021      	beq.n	80012e2 <__gedf2+0x72>
 800129e:	42ab      	cmp	r3, r5
 80012a0:	d013      	beq.n	80012ca <__gedf2+0x5a>
 80012a2:	2a00      	cmp	r2, #0
 80012a4:	d122      	bne.n	80012ec <__gedf2+0x7c>
 80012a6:	433c      	orrs	r4, r7
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d102      	bne.n	80012b2 <__gedf2+0x42>
 80012ac:	464d      	mov	r5, r9
 80012ae:	432e      	orrs	r6, r5
 80012b0:	d022      	beq.n	80012f8 <__gedf2+0x88>
 80012b2:	2c00      	cmp	r4, #0
 80012b4:	d010      	beq.n	80012d8 <__gedf2+0x68>
 80012b6:	4281      	cmp	r1, r0
 80012b8:	d022      	beq.n	8001300 <__gedf2+0x90>
 80012ba:	2002      	movs	r0, #2
 80012bc:	3901      	subs	r1, #1
 80012be:	4008      	ands	r0, r1
 80012c0:	3801      	subs	r0, #1
 80012c2:	bcc0      	pop	{r6, r7}
 80012c4:	46b9      	mov	r9, r7
 80012c6:	46b0      	mov	r8, r6
 80012c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012ca:	464d      	mov	r5, r9
 80012cc:	432e      	orrs	r6, r5
 80012ce:	d129      	bne.n	8001324 <__gedf2+0xb4>
 80012d0:	2a00      	cmp	r2, #0
 80012d2:	d1f0      	bne.n	80012b6 <__gedf2+0x46>
 80012d4:	433c      	orrs	r4, r7
 80012d6:	d1ee      	bne.n	80012b6 <__gedf2+0x46>
 80012d8:	2800      	cmp	r0, #0
 80012da:	d1f2      	bne.n	80012c2 <__gedf2+0x52>
 80012dc:	2001      	movs	r0, #1
 80012de:	4240      	negs	r0, r0
 80012e0:	e7ef      	b.n	80012c2 <__gedf2+0x52>
 80012e2:	003d      	movs	r5, r7
 80012e4:	4325      	orrs	r5, r4
 80012e6:	d11d      	bne.n	8001324 <__gedf2+0xb4>
 80012e8:	4293      	cmp	r3, r2
 80012ea:	d0ee      	beq.n	80012ca <__gedf2+0x5a>
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d1e2      	bne.n	80012b6 <__gedf2+0x46>
 80012f0:	464c      	mov	r4, r9
 80012f2:	4326      	orrs	r6, r4
 80012f4:	d1df      	bne.n	80012b6 <__gedf2+0x46>
 80012f6:	e7e0      	b.n	80012ba <__gedf2+0x4a>
 80012f8:	2000      	movs	r0, #0
 80012fa:	2c00      	cmp	r4, #0
 80012fc:	d0e1      	beq.n	80012c2 <__gedf2+0x52>
 80012fe:	e7dc      	b.n	80012ba <__gedf2+0x4a>
 8001300:	429a      	cmp	r2, r3
 8001302:	dc0a      	bgt.n	800131a <__gedf2+0xaa>
 8001304:	dbe8      	blt.n	80012d8 <__gedf2+0x68>
 8001306:	454f      	cmp	r7, r9
 8001308:	d8d7      	bhi.n	80012ba <__gedf2+0x4a>
 800130a:	d00e      	beq.n	800132a <__gedf2+0xba>
 800130c:	2000      	movs	r0, #0
 800130e:	454f      	cmp	r7, r9
 8001310:	d2d7      	bcs.n	80012c2 <__gedf2+0x52>
 8001312:	2900      	cmp	r1, #0
 8001314:	d0e2      	beq.n	80012dc <__gedf2+0x6c>
 8001316:	0008      	movs	r0, r1
 8001318:	e7d3      	b.n	80012c2 <__gedf2+0x52>
 800131a:	4243      	negs	r3, r0
 800131c:	4158      	adcs	r0, r3
 800131e:	0040      	lsls	r0, r0, #1
 8001320:	3801      	subs	r0, #1
 8001322:	e7ce      	b.n	80012c2 <__gedf2+0x52>
 8001324:	2002      	movs	r0, #2
 8001326:	4240      	negs	r0, r0
 8001328:	e7cb      	b.n	80012c2 <__gedf2+0x52>
 800132a:	45c4      	cmp	ip, r8
 800132c:	d8c5      	bhi.n	80012ba <__gedf2+0x4a>
 800132e:	2000      	movs	r0, #0
 8001330:	45c4      	cmp	ip, r8
 8001332:	d2c6      	bcs.n	80012c2 <__gedf2+0x52>
 8001334:	e7ed      	b.n	8001312 <__gedf2+0xa2>
 8001336:	46c0      	nop			; (mov r8, r8)
 8001338:	000007ff 	.word	0x000007ff

0800133c <__ledf2>:
 800133c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800133e:	4647      	mov	r7, r8
 8001340:	46ce      	mov	lr, r9
 8001342:	0004      	movs	r4, r0
 8001344:	0018      	movs	r0, r3
 8001346:	0016      	movs	r6, r2
 8001348:	031b      	lsls	r3, r3, #12
 800134a:	0b1b      	lsrs	r3, r3, #12
 800134c:	4d2c      	ldr	r5, [pc, #176]	; (8001400 <__ledf2+0xc4>)
 800134e:	004a      	lsls	r2, r1, #1
 8001350:	4699      	mov	r9, r3
 8001352:	b580      	push	{r7, lr}
 8001354:	0043      	lsls	r3, r0, #1
 8001356:	030f      	lsls	r7, r1, #12
 8001358:	46a4      	mov	ip, r4
 800135a:	46b0      	mov	r8, r6
 800135c:	0b3f      	lsrs	r7, r7, #12
 800135e:	0d52      	lsrs	r2, r2, #21
 8001360:	0fc9      	lsrs	r1, r1, #31
 8001362:	0d5b      	lsrs	r3, r3, #21
 8001364:	0fc0      	lsrs	r0, r0, #31
 8001366:	42aa      	cmp	r2, r5
 8001368:	d00d      	beq.n	8001386 <__ledf2+0x4a>
 800136a:	42ab      	cmp	r3, r5
 800136c:	d010      	beq.n	8001390 <__ledf2+0x54>
 800136e:	2a00      	cmp	r2, #0
 8001370:	d127      	bne.n	80013c2 <__ledf2+0x86>
 8001372:	433c      	orrs	r4, r7
 8001374:	2b00      	cmp	r3, #0
 8001376:	d111      	bne.n	800139c <__ledf2+0x60>
 8001378:	464d      	mov	r5, r9
 800137a:	432e      	orrs	r6, r5
 800137c:	d10e      	bne.n	800139c <__ledf2+0x60>
 800137e:	2000      	movs	r0, #0
 8001380:	2c00      	cmp	r4, #0
 8001382:	d015      	beq.n	80013b0 <__ledf2+0x74>
 8001384:	e00e      	b.n	80013a4 <__ledf2+0x68>
 8001386:	003d      	movs	r5, r7
 8001388:	4325      	orrs	r5, r4
 800138a:	d110      	bne.n	80013ae <__ledf2+0x72>
 800138c:	4293      	cmp	r3, r2
 800138e:	d118      	bne.n	80013c2 <__ledf2+0x86>
 8001390:	464d      	mov	r5, r9
 8001392:	432e      	orrs	r6, r5
 8001394:	d10b      	bne.n	80013ae <__ledf2+0x72>
 8001396:	2a00      	cmp	r2, #0
 8001398:	d102      	bne.n	80013a0 <__ledf2+0x64>
 800139a:	433c      	orrs	r4, r7
 800139c:	2c00      	cmp	r4, #0
 800139e:	d00b      	beq.n	80013b8 <__ledf2+0x7c>
 80013a0:	4281      	cmp	r1, r0
 80013a2:	d014      	beq.n	80013ce <__ledf2+0x92>
 80013a4:	2002      	movs	r0, #2
 80013a6:	3901      	subs	r1, #1
 80013a8:	4008      	ands	r0, r1
 80013aa:	3801      	subs	r0, #1
 80013ac:	e000      	b.n	80013b0 <__ledf2+0x74>
 80013ae:	2002      	movs	r0, #2
 80013b0:	bcc0      	pop	{r6, r7}
 80013b2:	46b9      	mov	r9, r7
 80013b4:	46b0      	mov	r8, r6
 80013b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013b8:	2800      	cmp	r0, #0
 80013ba:	d1f9      	bne.n	80013b0 <__ledf2+0x74>
 80013bc:	2001      	movs	r0, #1
 80013be:	4240      	negs	r0, r0
 80013c0:	e7f6      	b.n	80013b0 <__ledf2+0x74>
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d1ec      	bne.n	80013a0 <__ledf2+0x64>
 80013c6:	464c      	mov	r4, r9
 80013c8:	4326      	orrs	r6, r4
 80013ca:	d1e9      	bne.n	80013a0 <__ledf2+0x64>
 80013cc:	e7ea      	b.n	80013a4 <__ledf2+0x68>
 80013ce:	429a      	cmp	r2, r3
 80013d0:	dd04      	ble.n	80013dc <__ledf2+0xa0>
 80013d2:	4243      	negs	r3, r0
 80013d4:	4158      	adcs	r0, r3
 80013d6:	0040      	lsls	r0, r0, #1
 80013d8:	3801      	subs	r0, #1
 80013da:	e7e9      	b.n	80013b0 <__ledf2+0x74>
 80013dc:	429a      	cmp	r2, r3
 80013de:	dbeb      	blt.n	80013b8 <__ledf2+0x7c>
 80013e0:	454f      	cmp	r7, r9
 80013e2:	d8df      	bhi.n	80013a4 <__ledf2+0x68>
 80013e4:	d006      	beq.n	80013f4 <__ledf2+0xb8>
 80013e6:	2000      	movs	r0, #0
 80013e8:	454f      	cmp	r7, r9
 80013ea:	d2e1      	bcs.n	80013b0 <__ledf2+0x74>
 80013ec:	2900      	cmp	r1, #0
 80013ee:	d0e5      	beq.n	80013bc <__ledf2+0x80>
 80013f0:	0008      	movs	r0, r1
 80013f2:	e7dd      	b.n	80013b0 <__ledf2+0x74>
 80013f4:	45c4      	cmp	ip, r8
 80013f6:	d8d5      	bhi.n	80013a4 <__ledf2+0x68>
 80013f8:	2000      	movs	r0, #0
 80013fa:	45c4      	cmp	ip, r8
 80013fc:	d2d8      	bcs.n	80013b0 <__ledf2+0x74>
 80013fe:	e7f5      	b.n	80013ec <__ledf2+0xb0>
 8001400:	000007ff 	.word	0x000007ff

08001404 <__aeabi_dmul>:
 8001404:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001406:	4657      	mov	r7, sl
 8001408:	464e      	mov	r6, r9
 800140a:	4645      	mov	r5, r8
 800140c:	46de      	mov	lr, fp
 800140e:	b5e0      	push	{r5, r6, r7, lr}
 8001410:	4698      	mov	r8, r3
 8001412:	030c      	lsls	r4, r1, #12
 8001414:	004b      	lsls	r3, r1, #1
 8001416:	0006      	movs	r6, r0
 8001418:	4692      	mov	sl, r2
 800141a:	b087      	sub	sp, #28
 800141c:	0b24      	lsrs	r4, r4, #12
 800141e:	0d5b      	lsrs	r3, r3, #21
 8001420:	0fcf      	lsrs	r7, r1, #31
 8001422:	2b00      	cmp	r3, #0
 8001424:	d100      	bne.n	8001428 <__aeabi_dmul+0x24>
 8001426:	e15c      	b.n	80016e2 <__aeabi_dmul+0x2de>
 8001428:	4ad9      	ldr	r2, [pc, #868]	; (8001790 <__aeabi_dmul+0x38c>)
 800142a:	4293      	cmp	r3, r2
 800142c:	d100      	bne.n	8001430 <__aeabi_dmul+0x2c>
 800142e:	e175      	b.n	800171c <__aeabi_dmul+0x318>
 8001430:	0f42      	lsrs	r2, r0, #29
 8001432:	00e4      	lsls	r4, r4, #3
 8001434:	4314      	orrs	r4, r2
 8001436:	2280      	movs	r2, #128	; 0x80
 8001438:	0412      	lsls	r2, r2, #16
 800143a:	4314      	orrs	r4, r2
 800143c:	4ad5      	ldr	r2, [pc, #852]	; (8001794 <__aeabi_dmul+0x390>)
 800143e:	00c5      	lsls	r5, r0, #3
 8001440:	4694      	mov	ip, r2
 8001442:	4463      	add	r3, ip
 8001444:	9300      	str	r3, [sp, #0]
 8001446:	2300      	movs	r3, #0
 8001448:	4699      	mov	r9, r3
 800144a:	469b      	mov	fp, r3
 800144c:	4643      	mov	r3, r8
 800144e:	4642      	mov	r2, r8
 8001450:	031e      	lsls	r6, r3, #12
 8001452:	0fd2      	lsrs	r2, r2, #31
 8001454:	005b      	lsls	r3, r3, #1
 8001456:	4650      	mov	r0, sl
 8001458:	4690      	mov	r8, r2
 800145a:	0b36      	lsrs	r6, r6, #12
 800145c:	0d5b      	lsrs	r3, r3, #21
 800145e:	d100      	bne.n	8001462 <__aeabi_dmul+0x5e>
 8001460:	e120      	b.n	80016a4 <__aeabi_dmul+0x2a0>
 8001462:	4acb      	ldr	r2, [pc, #812]	; (8001790 <__aeabi_dmul+0x38c>)
 8001464:	4293      	cmp	r3, r2
 8001466:	d100      	bne.n	800146a <__aeabi_dmul+0x66>
 8001468:	e162      	b.n	8001730 <__aeabi_dmul+0x32c>
 800146a:	49ca      	ldr	r1, [pc, #808]	; (8001794 <__aeabi_dmul+0x390>)
 800146c:	0f42      	lsrs	r2, r0, #29
 800146e:	468c      	mov	ip, r1
 8001470:	9900      	ldr	r1, [sp, #0]
 8001472:	4463      	add	r3, ip
 8001474:	00f6      	lsls	r6, r6, #3
 8001476:	468c      	mov	ip, r1
 8001478:	4316      	orrs	r6, r2
 800147a:	2280      	movs	r2, #128	; 0x80
 800147c:	449c      	add	ip, r3
 800147e:	0412      	lsls	r2, r2, #16
 8001480:	4663      	mov	r3, ip
 8001482:	4316      	orrs	r6, r2
 8001484:	00c2      	lsls	r2, r0, #3
 8001486:	2000      	movs	r0, #0
 8001488:	9300      	str	r3, [sp, #0]
 800148a:	9900      	ldr	r1, [sp, #0]
 800148c:	4643      	mov	r3, r8
 800148e:	3101      	adds	r1, #1
 8001490:	468c      	mov	ip, r1
 8001492:	4649      	mov	r1, r9
 8001494:	407b      	eors	r3, r7
 8001496:	9301      	str	r3, [sp, #4]
 8001498:	290f      	cmp	r1, #15
 800149a:	d826      	bhi.n	80014ea <__aeabi_dmul+0xe6>
 800149c:	4bbe      	ldr	r3, [pc, #760]	; (8001798 <__aeabi_dmul+0x394>)
 800149e:	0089      	lsls	r1, r1, #2
 80014a0:	5859      	ldr	r1, [r3, r1]
 80014a2:	468f      	mov	pc, r1
 80014a4:	4643      	mov	r3, r8
 80014a6:	9301      	str	r3, [sp, #4]
 80014a8:	0034      	movs	r4, r6
 80014aa:	0015      	movs	r5, r2
 80014ac:	4683      	mov	fp, r0
 80014ae:	465b      	mov	r3, fp
 80014b0:	2b02      	cmp	r3, #2
 80014b2:	d016      	beq.n	80014e2 <__aeabi_dmul+0xde>
 80014b4:	2b03      	cmp	r3, #3
 80014b6:	d100      	bne.n	80014ba <__aeabi_dmul+0xb6>
 80014b8:	e203      	b.n	80018c2 <__aeabi_dmul+0x4be>
 80014ba:	2b01      	cmp	r3, #1
 80014bc:	d000      	beq.n	80014c0 <__aeabi_dmul+0xbc>
 80014be:	e0cd      	b.n	800165c <__aeabi_dmul+0x258>
 80014c0:	2200      	movs	r2, #0
 80014c2:	2400      	movs	r4, #0
 80014c4:	2500      	movs	r5, #0
 80014c6:	9b01      	ldr	r3, [sp, #4]
 80014c8:	0512      	lsls	r2, r2, #20
 80014ca:	4322      	orrs	r2, r4
 80014cc:	07db      	lsls	r3, r3, #31
 80014ce:	431a      	orrs	r2, r3
 80014d0:	0028      	movs	r0, r5
 80014d2:	0011      	movs	r1, r2
 80014d4:	b007      	add	sp, #28
 80014d6:	bcf0      	pop	{r4, r5, r6, r7}
 80014d8:	46bb      	mov	fp, r7
 80014da:	46b2      	mov	sl, r6
 80014dc:	46a9      	mov	r9, r5
 80014de:	46a0      	mov	r8, r4
 80014e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014e2:	2400      	movs	r4, #0
 80014e4:	2500      	movs	r5, #0
 80014e6:	4aaa      	ldr	r2, [pc, #680]	; (8001790 <__aeabi_dmul+0x38c>)
 80014e8:	e7ed      	b.n	80014c6 <__aeabi_dmul+0xc2>
 80014ea:	0c28      	lsrs	r0, r5, #16
 80014ec:	042d      	lsls	r5, r5, #16
 80014ee:	0c2d      	lsrs	r5, r5, #16
 80014f0:	002b      	movs	r3, r5
 80014f2:	0c11      	lsrs	r1, r2, #16
 80014f4:	0412      	lsls	r2, r2, #16
 80014f6:	0c12      	lsrs	r2, r2, #16
 80014f8:	4353      	muls	r3, r2
 80014fa:	4698      	mov	r8, r3
 80014fc:	0013      	movs	r3, r2
 80014fe:	002f      	movs	r7, r5
 8001500:	4343      	muls	r3, r0
 8001502:	4699      	mov	r9, r3
 8001504:	434f      	muls	r7, r1
 8001506:	444f      	add	r7, r9
 8001508:	46bb      	mov	fp, r7
 800150a:	4647      	mov	r7, r8
 800150c:	000b      	movs	r3, r1
 800150e:	0c3f      	lsrs	r7, r7, #16
 8001510:	46ba      	mov	sl, r7
 8001512:	4343      	muls	r3, r0
 8001514:	44da      	add	sl, fp
 8001516:	9302      	str	r3, [sp, #8]
 8001518:	45d1      	cmp	r9, sl
 800151a:	d904      	bls.n	8001526 <__aeabi_dmul+0x122>
 800151c:	2780      	movs	r7, #128	; 0x80
 800151e:	027f      	lsls	r7, r7, #9
 8001520:	46b9      	mov	r9, r7
 8001522:	444b      	add	r3, r9
 8001524:	9302      	str	r3, [sp, #8]
 8001526:	4653      	mov	r3, sl
 8001528:	0c1b      	lsrs	r3, r3, #16
 800152a:	469b      	mov	fp, r3
 800152c:	4653      	mov	r3, sl
 800152e:	041f      	lsls	r7, r3, #16
 8001530:	4643      	mov	r3, r8
 8001532:	041b      	lsls	r3, r3, #16
 8001534:	0c1b      	lsrs	r3, r3, #16
 8001536:	4698      	mov	r8, r3
 8001538:	003b      	movs	r3, r7
 800153a:	4443      	add	r3, r8
 800153c:	9304      	str	r3, [sp, #16]
 800153e:	0c33      	lsrs	r3, r6, #16
 8001540:	0436      	lsls	r6, r6, #16
 8001542:	0c36      	lsrs	r6, r6, #16
 8001544:	4698      	mov	r8, r3
 8001546:	0033      	movs	r3, r6
 8001548:	4343      	muls	r3, r0
 800154a:	4699      	mov	r9, r3
 800154c:	4643      	mov	r3, r8
 800154e:	4343      	muls	r3, r0
 8001550:	002f      	movs	r7, r5
 8001552:	469a      	mov	sl, r3
 8001554:	4643      	mov	r3, r8
 8001556:	4377      	muls	r7, r6
 8001558:	435d      	muls	r5, r3
 800155a:	0c38      	lsrs	r0, r7, #16
 800155c:	444d      	add	r5, r9
 800155e:	1945      	adds	r5, r0, r5
 8001560:	45a9      	cmp	r9, r5
 8001562:	d903      	bls.n	800156c <__aeabi_dmul+0x168>
 8001564:	2380      	movs	r3, #128	; 0x80
 8001566:	025b      	lsls	r3, r3, #9
 8001568:	4699      	mov	r9, r3
 800156a:	44ca      	add	sl, r9
 800156c:	043f      	lsls	r7, r7, #16
 800156e:	0c28      	lsrs	r0, r5, #16
 8001570:	0c3f      	lsrs	r7, r7, #16
 8001572:	042d      	lsls	r5, r5, #16
 8001574:	19ed      	adds	r5, r5, r7
 8001576:	0c27      	lsrs	r7, r4, #16
 8001578:	0424      	lsls	r4, r4, #16
 800157a:	0c24      	lsrs	r4, r4, #16
 800157c:	0003      	movs	r3, r0
 800157e:	0020      	movs	r0, r4
 8001580:	4350      	muls	r0, r2
 8001582:	437a      	muls	r2, r7
 8001584:	4691      	mov	r9, r2
 8001586:	003a      	movs	r2, r7
 8001588:	4453      	add	r3, sl
 800158a:	9305      	str	r3, [sp, #20]
 800158c:	0c03      	lsrs	r3, r0, #16
 800158e:	469a      	mov	sl, r3
 8001590:	434a      	muls	r2, r1
 8001592:	4361      	muls	r1, r4
 8001594:	4449      	add	r1, r9
 8001596:	4451      	add	r1, sl
 8001598:	44ab      	add	fp, r5
 800159a:	4589      	cmp	r9, r1
 800159c:	d903      	bls.n	80015a6 <__aeabi_dmul+0x1a2>
 800159e:	2380      	movs	r3, #128	; 0x80
 80015a0:	025b      	lsls	r3, r3, #9
 80015a2:	4699      	mov	r9, r3
 80015a4:	444a      	add	r2, r9
 80015a6:	0400      	lsls	r0, r0, #16
 80015a8:	0c0b      	lsrs	r3, r1, #16
 80015aa:	0c00      	lsrs	r0, r0, #16
 80015ac:	0409      	lsls	r1, r1, #16
 80015ae:	1809      	adds	r1, r1, r0
 80015b0:	0020      	movs	r0, r4
 80015b2:	4699      	mov	r9, r3
 80015b4:	4643      	mov	r3, r8
 80015b6:	4370      	muls	r0, r6
 80015b8:	435c      	muls	r4, r3
 80015ba:	437e      	muls	r6, r7
 80015bc:	435f      	muls	r7, r3
 80015be:	0c03      	lsrs	r3, r0, #16
 80015c0:	4698      	mov	r8, r3
 80015c2:	19a4      	adds	r4, r4, r6
 80015c4:	4444      	add	r4, r8
 80015c6:	444a      	add	r2, r9
 80015c8:	9703      	str	r7, [sp, #12]
 80015ca:	42a6      	cmp	r6, r4
 80015cc:	d904      	bls.n	80015d8 <__aeabi_dmul+0x1d4>
 80015ce:	2380      	movs	r3, #128	; 0x80
 80015d0:	025b      	lsls	r3, r3, #9
 80015d2:	4698      	mov	r8, r3
 80015d4:	4447      	add	r7, r8
 80015d6:	9703      	str	r7, [sp, #12]
 80015d8:	0423      	lsls	r3, r4, #16
 80015da:	9e02      	ldr	r6, [sp, #8]
 80015dc:	469a      	mov	sl, r3
 80015de:	9b05      	ldr	r3, [sp, #20]
 80015e0:	445e      	add	r6, fp
 80015e2:	4698      	mov	r8, r3
 80015e4:	42ae      	cmp	r6, r5
 80015e6:	41ad      	sbcs	r5, r5
 80015e8:	1876      	adds	r6, r6, r1
 80015ea:	428e      	cmp	r6, r1
 80015ec:	4189      	sbcs	r1, r1
 80015ee:	0400      	lsls	r0, r0, #16
 80015f0:	0c00      	lsrs	r0, r0, #16
 80015f2:	4450      	add	r0, sl
 80015f4:	4440      	add	r0, r8
 80015f6:	426d      	negs	r5, r5
 80015f8:	1947      	adds	r7, r0, r5
 80015fa:	46b8      	mov	r8, r7
 80015fc:	4693      	mov	fp, r2
 80015fe:	4249      	negs	r1, r1
 8001600:	4689      	mov	r9, r1
 8001602:	44c3      	add	fp, r8
 8001604:	44d9      	add	r9, fp
 8001606:	4298      	cmp	r0, r3
 8001608:	4180      	sbcs	r0, r0
 800160a:	45a8      	cmp	r8, r5
 800160c:	41ad      	sbcs	r5, r5
 800160e:	4593      	cmp	fp, r2
 8001610:	4192      	sbcs	r2, r2
 8001612:	4589      	cmp	r9, r1
 8001614:	4189      	sbcs	r1, r1
 8001616:	426d      	negs	r5, r5
 8001618:	4240      	negs	r0, r0
 800161a:	4328      	orrs	r0, r5
 800161c:	0c24      	lsrs	r4, r4, #16
 800161e:	4252      	negs	r2, r2
 8001620:	4249      	negs	r1, r1
 8001622:	430a      	orrs	r2, r1
 8001624:	9b03      	ldr	r3, [sp, #12]
 8001626:	1900      	adds	r0, r0, r4
 8001628:	1880      	adds	r0, r0, r2
 800162a:	18c7      	adds	r7, r0, r3
 800162c:	464b      	mov	r3, r9
 800162e:	0ddc      	lsrs	r4, r3, #23
 8001630:	9b04      	ldr	r3, [sp, #16]
 8001632:	0275      	lsls	r5, r6, #9
 8001634:	431d      	orrs	r5, r3
 8001636:	1e6a      	subs	r2, r5, #1
 8001638:	4195      	sbcs	r5, r2
 800163a:	464b      	mov	r3, r9
 800163c:	0df6      	lsrs	r6, r6, #23
 800163e:	027f      	lsls	r7, r7, #9
 8001640:	4335      	orrs	r5, r6
 8001642:	025a      	lsls	r2, r3, #9
 8001644:	433c      	orrs	r4, r7
 8001646:	4315      	orrs	r5, r2
 8001648:	01fb      	lsls	r3, r7, #7
 800164a:	d400      	bmi.n	800164e <__aeabi_dmul+0x24a>
 800164c:	e11c      	b.n	8001888 <__aeabi_dmul+0x484>
 800164e:	2101      	movs	r1, #1
 8001650:	086a      	lsrs	r2, r5, #1
 8001652:	400d      	ands	r5, r1
 8001654:	4315      	orrs	r5, r2
 8001656:	07e2      	lsls	r2, r4, #31
 8001658:	4315      	orrs	r5, r2
 800165a:	0864      	lsrs	r4, r4, #1
 800165c:	494f      	ldr	r1, [pc, #316]	; (800179c <__aeabi_dmul+0x398>)
 800165e:	4461      	add	r1, ip
 8001660:	2900      	cmp	r1, #0
 8001662:	dc00      	bgt.n	8001666 <__aeabi_dmul+0x262>
 8001664:	e0b0      	b.n	80017c8 <__aeabi_dmul+0x3c4>
 8001666:	076b      	lsls	r3, r5, #29
 8001668:	d009      	beq.n	800167e <__aeabi_dmul+0x27a>
 800166a:	220f      	movs	r2, #15
 800166c:	402a      	ands	r2, r5
 800166e:	2a04      	cmp	r2, #4
 8001670:	d005      	beq.n	800167e <__aeabi_dmul+0x27a>
 8001672:	1d2a      	adds	r2, r5, #4
 8001674:	42aa      	cmp	r2, r5
 8001676:	41ad      	sbcs	r5, r5
 8001678:	426d      	negs	r5, r5
 800167a:	1964      	adds	r4, r4, r5
 800167c:	0015      	movs	r5, r2
 800167e:	01e3      	lsls	r3, r4, #7
 8001680:	d504      	bpl.n	800168c <__aeabi_dmul+0x288>
 8001682:	2180      	movs	r1, #128	; 0x80
 8001684:	4a46      	ldr	r2, [pc, #280]	; (80017a0 <__aeabi_dmul+0x39c>)
 8001686:	00c9      	lsls	r1, r1, #3
 8001688:	4014      	ands	r4, r2
 800168a:	4461      	add	r1, ip
 800168c:	4a45      	ldr	r2, [pc, #276]	; (80017a4 <__aeabi_dmul+0x3a0>)
 800168e:	4291      	cmp	r1, r2
 8001690:	dd00      	ble.n	8001694 <__aeabi_dmul+0x290>
 8001692:	e726      	b.n	80014e2 <__aeabi_dmul+0xde>
 8001694:	0762      	lsls	r2, r4, #29
 8001696:	08ed      	lsrs	r5, r5, #3
 8001698:	0264      	lsls	r4, r4, #9
 800169a:	0549      	lsls	r1, r1, #21
 800169c:	4315      	orrs	r5, r2
 800169e:	0b24      	lsrs	r4, r4, #12
 80016a0:	0d4a      	lsrs	r2, r1, #21
 80016a2:	e710      	b.n	80014c6 <__aeabi_dmul+0xc2>
 80016a4:	4652      	mov	r2, sl
 80016a6:	4332      	orrs	r2, r6
 80016a8:	d100      	bne.n	80016ac <__aeabi_dmul+0x2a8>
 80016aa:	e07f      	b.n	80017ac <__aeabi_dmul+0x3a8>
 80016ac:	2e00      	cmp	r6, #0
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dmul+0x2ae>
 80016b0:	e0dc      	b.n	800186c <__aeabi_dmul+0x468>
 80016b2:	0030      	movs	r0, r6
 80016b4:	f000 fdd6 	bl	8002264 <__clzsi2>
 80016b8:	0002      	movs	r2, r0
 80016ba:	3a0b      	subs	r2, #11
 80016bc:	231d      	movs	r3, #29
 80016be:	0001      	movs	r1, r0
 80016c0:	1a9b      	subs	r3, r3, r2
 80016c2:	4652      	mov	r2, sl
 80016c4:	3908      	subs	r1, #8
 80016c6:	40da      	lsrs	r2, r3
 80016c8:	408e      	lsls	r6, r1
 80016ca:	4316      	orrs	r6, r2
 80016cc:	4652      	mov	r2, sl
 80016ce:	408a      	lsls	r2, r1
 80016d0:	9b00      	ldr	r3, [sp, #0]
 80016d2:	4935      	ldr	r1, [pc, #212]	; (80017a8 <__aeabi_dmul+0x3a4>)
 80016d4:	1a18      	subs	r0, r3, r0
 80016d6:	0003      	movs	r3, r0
 80016d8:	468c      	mov	ip, r1
 80016da:	4463      	add	r3, ip
 80016dc:	2000      	movs	r0, #0
 80016de:	9300      	str	r3, [sp, #0]
 80016e0:	e6d3      	b.n	800148a <__aeabi_dmul+0x86>
 80016e2:	0025      	movs	r5, r4
 80016e4:	4305      	orrs	r5, r0
 80016e6:	d04a      	beq.n	800177e <__aeabi_dmul+0x37a>
 80016e8:	2c00      	cmp	r4, #0
 80016ea:	d100      	bne.n	80016ee <__aeabi_dmul+0x2ea>
 80016ec:	e0b0      	b.n	8001850 <__aeabi_dmul+0x44c>
 80016ee:	0020      	movs	r0, r4
 80016f0:	f000 fdb8 	bl	8002264 <__clzsi2>
 80016f4:	0001      	movs	r1, r0
 80016f6:	0002      	movs	r2, r0
 80016f8:	390b      	subs	r1, #11
 80016fa:	231d      	movs	r3, #29
 80016fc:	0010      	movs	r0, r2
 80016fe:	1a5b      	subs	r3, r3, r1
 8001700:	0031      	movs	r1, r6
 8001702:	0035      	movs	r5, r6
 8001704:	3808      	subs	r0, #8
 8001706:	4084      	lsls	r4, r0
 8001708:	40d9      	lsrs	r1, r3
 800170a:	4085      	lsls	r5, r0
 800170c:	430c      	orrs	r4, r1
 800170e:	4826      	ldr	r0, [pc, #152]	; (80017a8 <__aeabi_dmul+0x3a4>)
 8001710:	1a83      	subs	r3, r0, r2
 8001712:	9300      	str	r3, [sp, #0]
 8001714:	2300      	movs	r3, #0
 8001716:	4699      	mov	r9, r3
 8001718:	469b      	mov	fp, r3
 800171a:	e697      	b.n	800144c <__aeabi_dmul+0x48>
 800171c:	0005      	movs	r5, r0
 800171e:	4325      	orrs	r5, r4
 8001720:	d126      	bne.n	8001770 <__aeabi_dmul+0x36c>
 8001722:	2208      	movs	r2, #8
 8001724:	9300      	str	r3, [sp, #0]
 8001726:	2302      	movs	r3, #2
 8001728:	2400      	movs	r4, #0
 800172a:	4691      	mov	r9, r2
 800172c:	469b      	mov	fp, r3
 800172e:	e68d      	b.n	800144c <__aeabi_dmul+0x48>
 8001730:	4652      	mov	r2, sl
 8001732:	9b00      	ldr	r3, [sp, #0]
 8001734:	4332      	orrs	r2, r6
 8001736:	d110      	bne.n	800175a <__aeabi_dmul+0x356>
 8001738:	4915      	ldr	r1, [pc, #84]	; (8001790 <__aeabi_dmul+0x38c>)
 800173a:	2600      	movs	r6, #0
 800173c:	468c      	mov	ip, r1
 800173e:	4463      	add	r3, ip
 8001740:	4649      	mov	r1, r9
 8001742:	9300      	str	r3, [sp, #0]
 8001744:	2302      	movs	r3, #2
 8001746:	4319      	orrs	r1, r3
 8001748:	4689      	mov	r9, r1
 800174a:	2002      	movs	r0, #2
 800174c:	e69d      	b.n	800148a <__aeabi_dmul+0x86>
 800174e:	465b      	mov	r3, fp
 8001750:	9701      	str	r7, [sp, #4]
 8001752:	2b02      	cmp	r3, #2
 8001754:	d000      	beq.n	8001758 <__aeabi_dmul+0x354>
 8001756:	e6ad      	b.n	80014b4 <__aeabi_dmul+0xb0>
 8001758:	e6c3      	b.n	80014e2 <__aeabi_dmul+0xde>
 800175a:	4a0d      	ldr	r2, [pc, #52]	; (8001790 <__aeabi_dmul+0x38c>)
 800175c:	2003      	movs	r0, #3
 800175e:	4694      	mov	ip, r2
 8001760:	4463      	add	r3, ip
 8001762:	464a      	mov	r2, r9
 8001764:	9300      	str	r3, [sp, #0]
 8001766:	2303      	movs	r3, #3
 8001768:	431a      	orrs	r2, r3
 800176a:	4691      	mov	r9, r2
 800176c:	4652      	mov	r2, sl
 800176e:	e68c      	b.n	800148a <__aeabi_dmul+0x86>
 8001770:	220c      	movs	r2, #12
 8001772:	9300      	str	r3, [sp, #0]
 8001774:	2303      	movs	r3, #3
 8001776:	0005      	movs	r5, r0
 8001778:	4691      	mov	r9, r2
 800177a:	469b      	mov	fp, r3
 800177c:	e666      	b.n	800144c <__aeabi_dmul+0x48>
 800177e:	2304      	movs	r3, #4
 8001780:	4699      	mov	r9, r3
 8001782:	2300      	movs	r3, #0
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	3301      	adds	r3, #1
 8001788:	2400      	movs	r4, #0
 800178a:	469b      	mov	fp, r3
 800178c:	e65e      	b.n	800144c <__aeabi_dmul+0x48>
 800178e:	46c0      	nop			; (mov r8, r8)
 8001790:	000007ff 	.word	0x000007ff
 8001794:	fffffc01 	.word	0xfffffc01
 8001798:	08009118 	.word	0x08009118
 800179c:	000003ff 	.word	0x000003ff
 80017a0:	feffffff 	.word	0xfeffffff
 80017a4:	000007fe 	.word	0x000007fe
 80017a8:	fffffc0d 	.word	0xfffffc0d
 80017ac:	4649      	mov	r1, r9
 80017ae:	2301      	movs	r3, #1
 80017b0:	4319      	orrs	r1, r3
 80017b2:	4689      	mov	r9, r1
 80017b4:	2600      	movs	r6, #0
 80017b6:	2001      	movs	r0, #1
 80017b8:	e667      	b.n	800148a <__aeabi_dmul+0x86>
 80017ba:	2300      	movs	r3, #0
 80017bc:	2480      	movs	r4, #128	; 0x80
 80017be:	2500      	movs	r5, #0
 80017c0:	4a43      	ldr	r2, [pc, #268]	; (80018d0 <__aeabi_dmul+0x4cc>)
 80017c2:	9301      	str	r3, [sp, #4]
 80017c4:	0324      	lsls	r4, r4, #12
 80017c6:	e67e      	b.n	80014c6 <__aeabi_dmul+0xc2>
 80017c8:	2001      	movs	r0, #1
 80017ca:	1a40      	subs	r0, r0, r1
 80017cc:	2838      	cmp	r0, #56	; 0x38
 80017ce:	dd00      	ble.n	80017d2 <__aeabi_dmul+0x3ce>
 80017d0:	e676      	b.n	80014c0 <__aeabi_dmul+0xbc>
 80017d2:	281f      	cmp	r0, #31
 80017d4:	dd5b      	ble.n	800188e <__aeabi_dmul+0x48a>
 80017d6:	221f      	movs	r2, #31
 80017d8:	0023      	movs	r3, r4
 80017da:	4252      	negs	r2, r2
 80017dc:	1a51      	subs	r1, r2, r1
 80017de:	40cb      	lsrs	r3, r1
 80017e0:	0019      	movs	r1, r3
 80017e2:	2820      	cmp	r0, #32
 80017e4:	d003      	beq.n	80017ee <__aeabi_dmul+0x3ea>
 80017e6:	4a3b      	ldr	r2, [pc, #236]	; (80018d4 <__aeabi_dmul+0x4d0>)
 80017e8:	4462      	add	r2, ip
 80017ea:	4094      	lsls	r4, r2
 80017ec:	4325      	orrs	r5, r4
 80017ee:	1e6a      	subs	r2, r5, #1
 80017f0:	4195      	sbcs	r5, r2
 80017f2:	002a      	movs	r2, r5
 80017f4:	430a      	orrs	r2, r1
 80017f6:	2107      	movs	r1, #7
 80017f8:	000d      	movs	r5, r1
 80017fa:	2400      	movs	r4, #0
 80017fc:	4015      	ands	r5, r2
 80017fe:	4211      	tst	r1, r2
 8001800:	d05b      	beq.n	80018ba <__aeabi_dmul+0x4b6>
 8001802:	210f      	movs	r1, #15
 8001804:	2400      	movs	r4, #0
 8001806:	4011      	ands	r1, r2
 8001808:	2904      	cmp	r1, #4
 800180a:	d053      	beq.n	80018b4 <__aeabi_dmul+0x4b0>
 800180c:	1d11      	adds	r1, r2, #4
 800180e:	4291      	cmp	r1, r2
 8001810:	4192      	sbcs	r2, r2
 8001812:	4252      	negs	r2, r2
 8001814:	18a4      	adds	r4, r4, r2
 8001816:	000a      	movs	r2, r1
 8001818:	0223      	lsls	r3, r4, #8
 800181a:	d54b      	bpl.n	80018b4 <__aeabi_dmul+0x4b0>
 800181c:	2201      	movs	r2, #1
 800181e:	2400      	movs	r4, #0
 8001820:	2500      	movs	r5, #0
 8001822:	e650      	b.n	80014c6 <__aeabi_dmul+0xc2>
 8001824:	2380      	movs	r3, #128	; 0x80
 8001826:	031b      	lsls	r3, r3, #12
 8001828:	421c      	tst	r4, r3
 800182a:	d009      	beq.n	8001840 <__aeabi_dmul+0x43c>
 800182c:	421e      	tst	r6, r3
 800182e:	d107      	bne.n	8001840 <__aeabi_dmul+0x43c>
 8001830:	4333      	orrs	r3, r6
 8001832:	031c      	lsls	r4, r3, #12
 8001834:	4643      	mov	r3, r8
 8001836:	0015      	movs	r5, r2
 8001838:	0b24      	lsrs	r4, r4, #12
 800183a:	4a25      	ldr	r2, [pc, #148]	; (80018d0 <__aeabi_dmul+0x4cc>)
 800183c:	9301      	str	r3, [sp, #4]
 800183e:	e642      	b.n	80014c6 <__aeabi_dmul+0xc2>
 8001840:	2280      	movs	r2, #128	; 0x80
 8001842:	0312      	lsls	r2, r2, #12
 8001844:	4314      	orrs	r4, r2
 8001846:	0324      	lsls	r4, r4, #12
 8001848:	4a21      	ldr	r2, [pc, #132]	; (80018d0 <__aeabi_dmul+0x4cc>)
 800184a:	0b24      	lsrs	r4, r4, #12
 800184c:	9701      	str	r7, [sp, #4]
 800184e:	e63a      	b.n	80014c6 <__aeabi_dmul+0xc2>
 8001850:	f000 fd08 	bl	8002264 <__clzsi2>
 8001854:	0001      	movs	r1, r0
 8001856:	0002      	movs	r2, r0
 8001858:	3115      	adds	r1, #21
 800185a:	3220      	adds	r2, #32
 800185c:	291c      	cmp	r1, #28
 800185e:	dc00      	bgt.n	8001862 <__aeabi_dmul+0x45e>
 8001860:	e74b      	b.n	80016fa <__aeabi_dmul+0x2f6>
 8001862:	0034      	movs	r4, r6
 8001864:	3808      	subs	r0, #8
 8001866:	2500      	movs	r5, #0
 8001868:	4084      	lsls	r4, r0
 800186a:	e750      	b.n	800170e <__aeabi_dmul+0x30a>
 800186c:	f000 fcfa 	bl	8002264 <__clzsi2>
 8001870:	0003      	movs	r3, r0
 8001872:	001a      	movs	r2, r3
 8001874:	3215      	adds	r2, #21
 8001876:	3020      	adds	r0, #32
 8001878:	2a1c      	cmp	r2, #28
 800187a:	dc00      	bgt.n	800187e <__aeabi_dmul+0x47a>
 800187c:	e71e      	b.n	80016bc <__aeabi_dmul+0x2b8>
 800187e:	4656      	mov	r6, sl
 8001880:	3b08      	subs	r3, #8
 8001882:	2200      	movs	r2, #0
 8001884:	409e      	lsls	r6, r3
 8001886:	e723      	b.n	80016d0 <__aeabi_dmul+0x2cc>
 8001888:	9b00      	ldr	r3, [sp, #0]
 800188a:	469c      	mov	ip, r3
 800188c:	e6e6      	b.n	800165c <__aeabi_dmul+0x258>
 800188e:	4912      	ldr	r1, [pc, #72]	; (80018d8 <__aeabi_dmul+0x4d4>)
 8001890:	0022      	movs	r2, r4
 8001892:	4461      	add	r1, ip
 8001894:	002e      	movs	r6, r5
 8001896:	408d      	lsls	r5, r1
 8001898:	408a      	lsls	r2, r1
 800189a:	40c6      	lsrs	r6, r0
 800189c:	1e69      	subs	r1, r5, #1
 800189e:	418d      	sbcs	r5, r1
 80018a0:	4332      	orrs	r2, r6
 80018a2:	432a      	orrs	r2, r5
 80018a4:	40c4      	lsrs	r4, r0
 80018a6:	0753      	lsls	r3, r2, #29
 80018a8:	d0b6      	beq.n	8001818 <__aeabi_dmul+0x414>
 80018aa:	210f      	movs	r1, #15
 80018ac:	4011      	ands	r1, r2
 80018ae:	2904      	cmp	r1, #4
 80018b0:	d1ac      	bne.n	800180c <__aeabi_dmul+0x408>
 80018b2:	e7b1      	b.n	8001818 <__aeabi_dmul+0x414>
 80018b4:	0765      	lsls	r5, r4, #29
 80018b6:	0264      	lsls	r4, r4, #9
 80018b8:	0b24      	lsrs	r4, r4, #12
 80018ba:	08d2      	lsrs	r2, r2, #3
 80018bc:	4315      	orrs	r5, r2
 80018be:	2200      	movs	r2, #0
 80018c0:	e601      	b.n	80014c6 <__aeabi_dmul+0xc2>
 80018c2:	2280      	movs	r2, #128	; 0x80
 80018c4:	0312      	lsls	r2, r2, #12
 80018c6:	4314      	orrs	r4, r2
 80018c8:	0324      	lsls	r4, r4, #12
 80018ca:	4a01      	ldr	r2, [pc, #4]	; (80018d0 <__aeabi_dmul+0x4cc>)
 80018cc:	0b24      	lsrs	r4, r4, #12
 80018ce:	e5fa      	b.n	80014c6 <__aeabi_dmul+0xc2>
 80018d0:	000007ff 	.word	0x000007ff
 80018d4:	0000043e 	.word	0x0000043e
 80018d8:	0000041e 	.word	0x0000041e

080018dc <__aeabi_dsub>:
 80018dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018de:	4657      	mov	r7, sl
 80018e0:	464e      	mov	r6, r9
 80018e2:	4645      	mov	r5, r8
 80018e4:	46de      	mov	lr, fp
 80018e6:	b5e0      	push	{r5, r6, r7, lr}
 80018e8:	001e      	movs	r6, r3
 80018ea:	0017      	movs	r7, r2
 80018ec:	004a      	lsls	r2, r1, #1
 80018ee:	030b      	lsls	r3, r1, #12
 80018f0:	0d52      	lsrs	r2, r2, #21
 80018f2:	0a5b      	lsrs	r3, r3, #9
 80018f4:	4690      	mov	r8, r2
 80018f6:	0f42      	lsrs	r2, r0, #29
 80018f8:	431a      	orrs	r2, r3
 80018fa:	0fcd      	lsrs	r5, r1, #31
 80018fc:	4ccd      	ldr	r4, [pc, #820]	; (8001c34 <__aeabi_dsub+0x358>)
 80018fe:	0331      	lsls	r1, r6, #12
 8001900:	00c3      	lsls	r3, r0, #3
 8001902:	4694      	mov	ip, r2
 8001904:	0070      	lsls	r0, r6, #1
 8001906:	0f7a      	lsrs	r2, r7, #29
 8001908:	0a49      	lsrs	r1, r1, #9
 800190a:	00ff      	lsls	r7, r7, #3
 800190c:	469a      	mov	sl, r3
 800190e:	46b9      	mov	r9, r7
 8001910:	0d40      	lsrs	r0, r0, #21
 8001912:	0ff6      	lsrs	r6, r6, #31
 8001914:	4311      	orrs	r1, r2
 8001916:	42a0      	cmp	r0, r4
 8001918:	d100      	bne.n	800191c <__aeabi_dsub+0x40>
 800191a:	e0b1      	b.n	8001a80 <__aeabi_dsub+0x1a4>
 800191c:	2201      	movs	r2, #1
 800191e:	4056      	eors	r6, r2
 8001920:	46b3      	mov	fp, r6
 8001922:	42b5      	cmp	r5, r6
 8001924:	d100      	bne.n	8001928 <__aeabi_dsub+0x4c>
 8001926:	e088      	b.n	8001a3a <__aeabi_dsub+0x15e>
 8001928:	4642      	mov	r2, r8
 800192a:	1a12      	subs	r2, r2, r0
 800192c:	2a00      	cmp	r2, #0
 800192e:	dc00      	bgt.n	8001932 <__aeabi_dsub+0x56>
 8001930:	e0ae      	b.n	8001a90 <__aeabi_dsub+0x1b4>
 8001932:	2800      	cmp	r0, #0
 8001934:	d100      	bne.n	8001938 <__aeabi_dsub+0x5c>
 8001936:	e0c1      	b.n	8001abc <__aeabi_dsub+0x1e0>
 8001938:	48be      	ldr	r0, [pc, #760]	; (8001c34 <__aeabi_dsub+0x358>)
 800193a:	4580      	cmp	r8, r0
 800193c:	d100      	bne.n	8001940 <__aeabi_dsub+0x64>
 800193e:	e151      	b.n	8001be4 <__aeabi_dsub+0x308>
 8001940:	2080      	movs	r0, #128	; 0x80
 8001942:	0400      	lsls	r0, r0, #16
 8001944:	4301      	orrs	r1, r0
 8001946:	2a38      	cmp	r2, #56	; 0x38
 8001948:	dd00      	ble.n	800194c <__aeabi_dsub+0x70>
 800194a:	e17b      	b.n	8001c44 <__aeabi_dsub+0x368>
 800194c:	2a1f      	cmp	r2, #31
 800194e:	dd00      	ble.n	8001952 <__aeabi_dsub+0x76>
 8001950:	e1ee      	b.n	8001d30 <__aeabi_dsub+0x454>
 8001952:	2020      	movs	r0, #32
 8001954:	003e      	movs	r6, r7
 8001956:	1a80      	subs	r0, r0, r2
 8001958:	000c      	movs	r4, r1
 800195a:	40d6      	lsrs	r6, r2
 800195c:	40d1      	lsrs	r1, r2
 800195e:	4087      	lsls	r7, r0
 8001960:	4662      	mov	r2, ip
 8001962:	4084      	lsls	r4, r0
 8001964:	1a52      	subs	r2, r2, r1
 8001966:	1e78      	subs	r0, r7, #1
 8001968:	4187      	sbcs	r7, r0
 800196a:	4694      	mov	ip, r2
 800196c:	4334      	orrs	r4, r6
 800196e:	4327      	orrs	r7, r4
 8001970:	1bdc      	subs	r4, r3, r7
 8001972:	42a3      	cmp	r3, r4
 8001974:	419b      	sbcs	r3, r3
 8001976:	4662      	mov	r2, ip
 8001978:	425b      	negs	r3, r3
 800197a:	1ad3      	subs	r3, r2, r3
 800197c:	4699      	mov	r9, r3
 800197e:	464b      	mov	r3, r9
 8001980:	021b      	lsls	r3, r3, #8
 8001982:	d400      	bmi.n	8001986 <__aeabi_dsub+0xaa>
 8001984:	e118      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001986:	464b      	mov	r3, r9
 8001988:	0258      	lsls	r0, r3, #9
 800198a:	0a43      	lsrs	r3, r0, #9
 800198c:	4699      	mov	r9, r3
 800198e:	464b      	mov	r3, r9
 8001990:	2b00      	cmp	r3, #0
 8001992:	d100      	bne.n	8001996 <__aeabi_dsub+0xba>
 8001994:	e137      	b.n	8001c06 <__aeabi_dsub+0x32a>
 8001996:	4648      	mov	r0, r9
 8001998:	f000 fc64 	bl	8002264 <__clzsi2>
 800199c:	0001      	movs	r1, r0
 800199e:	3908      	subs	r1, #8
 80019a0:	2320      	movs	r3, #32
 80019a2:	0022      	movs	r2, r4
 80019a4:	4648      	mov	r0, r9
 80019a6:	1a5b      	subs	r3, r3, r1
 80019a8:	40da      	lsrs	r2, r3
 80019aa:	4088      	lsls	r0, r1
 80019ac:	408c      	lsls	r4, r1
 80019ae:	4643      	mov	r3, r8
 80019b0:	4310      	orrs	r0, r2
 80019b2:	4588      	cmp	r8, r1
 80019b4:	dd00      	ble.n	80019b8 <__aeabi_dsub+0xdc>
 80019b6:	e136      	b.n	8001c26 <__aeabi_dsub+0x34a>
 80019b8:	1ac9      	subs	r1, r1, r3
 80019ba:	1c4b      	adds	r3, r1, #1
 80019bc:	2b1f      	cmp	r3, #31
 80019be:	dd00      	ble.n	80019c2 <__aeabi_dsub+0xe6>
 80019c0:	e0ea      	b.n	8001b98 <__aeabi_dsub+0x2bc>
 80019c2:	2220      	movs	r2, #32
 80019c4:	0026      	movs	r6, r4
 80019c6:	1ad2      	subs	r2, r2, r3
 80019c8:	0001      	movs	r1, r0
 80019ca:	4094      	lsls	r4, r2
 80019cc:	40de      	lsrs	r6, r3
 80019ce:	40d8      	lsrs	r0, r3
 80019d0:	2300      	movs	r3, #0
 80019d2:	4091      	lsls	r1, r2
 80019d4:	1e62      	subs	r2, r4, #1
 80019d6:	4194      	sbcs	r4, r2
 80019d8:	4681      	mov	r9, r0
 80019da:	4698      	mov	r8, r3
 80019dc:	4331      	orrs	r1, r6
 80019de:	430c      	orrs	r4, r1
 80019e0:	0763      	lsls	r3, r4, #29
 80019e2:	d009      	beq.n	80019f8 <__aeabi_dsub+0x11c>
 80019e4:	230f      	movs	r3, #15
 80019e6:	4023      	ands	r3, r4
 80019e8:	2b04      	cmp	r3, #4
 80019ea:	d005      	beq.n	80019f8 <__aeabi_dsub+0x11c>
 80019ec:	1d23      	adds	r3, r4, #4
 80019ee:	42a3      	cmp	r3, r4
 80019f0:	41a4      	sbcs	r4, r4
 80019f2:	4264      	negs	r4, r4
 80019f4:	44a1      	add	r9, r4
 80019f6:	001c      	movs	r4, r3
 80019f8:	464b      	mov	r3, r9
 80019fa:	021b      	lsls	r3, r3, #8
 80019fc:	d400      	bmi.n	8001a00 <__aeabi_dsub+0x124>
 80019fe:	e0de      	b.n	8001bbe <__aeabi_dsub+0x2e2>
 8001a00:	4641      	mov	r1, r8
 8001a02:	4b8c      	ldr	r3, [pc, #560]	; (8001c34 <__aeabi_dsub+0x358>)
 8001a04:	3101      	adds	r1, #1
 8001a06:	4299      	cmp	r1, r3
 8001a08:	d100      	bne.n	8001a0c <__aeabi_dsub+0x130>
 8001a0a:	e0e7      	b.n	8001bdc <__aeabi_dsub+0x300>
 8001a0c:	464b      	mov	r3, r9
 8001a0e:	488a      	ldr	r0, [pc, #552]	; (8001c38 <__aeabi_dsub+0x35c>)
 8001a10:	08e4      	lsrs	r4, r4, #3
 8001a12:	4003      	ands	r3, r0
 8001a14:	0018      	movs	r0, r3
 8001a16:	0549      	lsls	r1, r1, #21
 8001a18:	075b      	lsls	r3, r3, #29
 8001a1a:	0240      	lsls	r0, r0, #9
 8001a1c:	4323      	orrs	r3, r4
 8001a1e:	0d4a      	lsrs	r2, r1, #21
 8001a20:	0b04      	lsrs	r4, r0, #12
 8001a22:	0512      	lsls	r2, r2, #20
 8001a24:	07ed      	lsls	r5, r5, #31
 8001a26:	4322      	orrs	r2, r4
 8001a28:	432a      	orrs	r2, r5
 8001a2a:	0018      	movs	r0, r3
 8001a2c:	0011      	movs	r1, r2
 8001a2e:	bcf0      	pop	{r4, r5, r6, r7}
 8001a30:	46bb      	mov	fp, r7
 8001a32:	46b2      	mov	sl, r6
 8001a34:	46a9      	mov	r9, r5
 8001a36:	46a0      	mov	r8, r4
 8001a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001a3a:	4642      	mov	r2, r8
 8001a3c:	1a12      	subs	r2, r2, r0
 8001a3e:	2a00      	cmp	r2, #0
 8001a40:	dd52      	ble.n	8001ae8 <__aeabi_dsub+0x20c>
 8001a42:	2800      	cmp	r0, #0
 8001a44:	d100      	bne.n	8001a48 <__aeabi_dsub+0x16c>
 8001a46:	e09c      	b.n	8001b82 <__aeabi_dsub+0x2a6>
 8001a48:	45a0      	cmp	r8, r4
 8001a4a:	d100      	bne.n	8001a4e <__aeabi_dsub+0x172>
 8001a4c:	e0ca      	b.n	8001be4 <__aeabi_dsub+0x308>
 8001a4e:	2080      	movs	r0, #128	; 0x80
 8001a50:	0400      	lsls	r0, r0, #16
 8001a52:	4301      	orrs	r1, r0
 8001a54:	2a38      	cmp	r2, #56	; 0x38
 8001a56:	dd00      	ble.n	8001a5a <__aeabi_dsub+0x17e>
 8001a58:	e149      	b.n	8001cee <__aeabi_dsub+0x412>
 8001a5a:	2a1f      	cmp	r2, #31
 8001a5c:	dc00      	bgt.n	8001a60 <__aeabi_dsub+0x184>
 8001a5e:	e197      	b.n	8001d90 <__aeabi_dsub+0x4b4>
 8001a60:	0010      	movs	r0, r2
 8001a62:	000e      	movs	r6, r1
 8001a64:	3820      	subs	r0, #32
 8001a66:	40c6      	lsrs	r6, r0
 8001a68:	2a20      	cmp	r2, #32
 8001a6a:	d004      	beq.n	8001a76 <__aeabi_dsub+0x19a>
 8001a6c:	2040      	movs	r0, #64	; 0x40
 8001a6e:	1a82      	subs	r2, r0, r2
 8001a70:	4091      	lsls	r1, r2
 8001a72:	430f      	orrs	r7, r1
 8001a74:	46b9      	mov	r9, r7
 8001a76:	464c      	mov	r4, r9
 8001a78:	1e62      	subs	r2, r4, #1
 8001a7a:	4194      	sbcs	r4, r2
 8001a7c:	4334      	orrs	r4, r6
 8001a7e:	e13a      	b.n	8001cf6 <__aeabi_dsub+0x41a>
 8001a80:	000a      	movs	r2, r1
 8001a82:	433a      	orrs	r2, r7
 8001a84:	d028      	beq.n	8001ad8 <__aeabi_dsub+0x1fc>
 8001a86:	46b3      	mov	fp, r6
 8001a88:	42b5      	cmp	r5, r6
 8001a8a:	d02b      	beq.n	8001ae4 <__aeabi_dsub+0x208>
 8001a8c:	4a6b      	ldr	r2, [pc, #428]	; (8001c3c <__aeabi_dsub+0x360>)
 8001a8e:	4442      	add	r2, r8
 8001a90:	2a00      	cmp	r2, #0
 8001a92:	d05d      	beq.n	8001b50 <__aeabi_dsub+0x274>
 8001a94:	4642      	mov	r2, r8
 8001a96:	4644      	mov	r4, r8
 8001a98:	1a82      	subs	r2, r0, r2
 8001a9a:	2c00      	cmp	r4, #0
 8001a9c:	d000      	beq.n	8001aa0 <__aeabi_dsub+0x1c4>
 8001a9e:	e0f5      	b.n	8001c8c <__aeabi_dsub+0x3b0>
 8001aa0:	4665      	mov	r5, ip
 8001aa2:	431d      	orrs	r5, r3
 8001aa4:	d100      	bne.n	8001aa8 <__aeabi_dsub+0x1cc>
 8001aa6:	e19c      	b.n	8001de2 <__aeabi_dsub+0x506>
 8001aa8:	1e55      	subs	r5, r2, #1
 8001aaa:	2a01      	cmp	r2, #1
 8001aac:	d100      	bne.n	8001ab0 <__aeabi_dsub+0x1d4>
 8001aae:	e1fb      	b.n	8001ea8 <__aeabi_dsub+0x5cc>
 8001ab0:	4c60      	ldr	r4, [pc, #384]	; (8001c34 <__aeabi_dsub+0x358>)
 8001ab2:	42a2      	cmp	r2, r4
 8001ab4:	d100      	bne.n	8001ab8 <__aeabi_dsub+0x1dc>
 8001ab6:	e1bd      	b.n	8001e34 <__aeabi_dsub+0x558>
 8001ab8:	002a      	movs	r2, r5
 8001aba:	e0f0      	b.n	8001c9e <__aeabi_dsub+0x3c2>
 8001abc:	0008      	movs	r0, r1
 8001abe:	4338      	orrs	r0, r7
 8001ac0:	d100      	bne.n	8001ac4 <__aeabi_dsub+0x1e8>
 8001ac2:	e0c3      	b.n	8001c4c <__aeabi_dsub+0x370>
 8001ac4:	1e50      	subs	r0, r2, #1
 8001ac6:	2a01      	cmp	r2, #1
 8001ac8:	d100      	bne.n	8001acc <__aeabi_dsub+0x1f0>
 8001aca:	e1a8      	b.n	8001e1e <__aeabi_dsub+0x542>
 8001acc:	4c59      	ldr	r4, [pc, #356]	; (8001c34 <__aeabi_dsub+0x358>)
 8001ace:	42a2      	cmp	r2, r4
 8001ad0:	d100      	bne.n	8001ad4 <__aeabi_dsub+0x1f8>
 8001ad2:	e087      	b.n	8001be4 <__aeabi_dsub+0x308>
 8001ad4:	0002      	movs	r2, r0
 8001ad6:	e736      	b.n	8001946 <__aeabi_dsub+0x6a>
 8001ad8:	2201      	movs	r2, #1
 8001ada:	4056      	eors	r6, r2
 8001adc:	46b3      	mov	fp, r6
 8001ade:	42b5      	cmp	r5, r6
 8001ae0:	d000      	beq.n	8001ae4 <__aeabi_dsub+0x208>
 8001ae2:	e721      	b.n	8001928 <__aeabi_dsub+0x4c>
 8001ae4:	4a55      	ldr	r2, [pc, #340]	; (8001c3c <__aeabi_dsub+0x360>)
 8001ae6:	4442      	add	r2, r8
 8001ae8:	2a00      	cmp	r2, #0
 8001aea:	d100      	bne.n	8001aee <__aeabi_dsub+0x212>
 8001aec:	e0b5      	b.n	8001c5a <__aeabi_dsub+0x37e>
 8001aee:	4642      	mov	r2, r8
 8001af0:	4644      	mov	r4, r8
 8001af2:	1a82      	subs	r2, r0, r2
 8001af4:	2c00      	cmp	r4, #0
 8001af6:	d100      	bne.n	8001afa <__aeabi_dsub+0x21e>
 8001af8:	e138      	b.n	8001d6c <__aeabi_dsub+0x490>
 8001afa:	4e4e      	ldr	r6, [pc, #312]	; (8001c34 <__aeabi_dsub+0x358>)
 8001afc:	42b0      	cmp	r0, r6
 8001afe:	d100      	bne.n	8001b02 <__aeabi_dsub+0x226>
 8001b00:	e1de      	b.n	8001ec0 <__aeabi_dsub+0x5e4>
 8001b02:	2680      	movs	r6, #128	; 0x80
 8001b04:	4664      	mov	r4, ip
 8001b06:	0436      	lsls	r6, r6, #16
 8001b08:	4334      	orrs	r4, r6
 8001b0a:	46a4      	mov	ip, r4
 8001b0c:	2a38      	cmp	r2, #56	; 0x38
 8001b0e:	dd00      	ble.n	8001b12 <__aeabi_dsub+0x236>
 8001b10:	e196      	b.n	8001e40 <__aeabi_dsub+0x564>
 8001b12:	2a1f      	cmp	r2, #31
 8001b14:	dd00      	ble.n	8001b18 <__aeabi_dsub+0x23c>
 8001b16:	e224      	b.n	8001f62 <__aeabi_dsub+0x686>
 8001b18:	2620      	movs	r6, #32
 8001b1a:	1ab4      	subs	r4, r6, r2
 8001b1c:	46a2      	mov	sl, r4
 8001b1e:	4664      	mov	r4, ip
 8001b20:	4656      	mov	r6, sl
 8001b22:	40b4      	lsls	r4, r6
 8001b24:	46a1      	mov	r9, r4
 8001b26:	001c      	movs	r4, r3
 8001b28:	464e      	mov	r6, r9
 8001b2a:	40d4      	lsrs	r4, r2
 8001b2c:	4326      	orrs	r6, r4
 8001b2e:	0034      	movs	r4, r6
 8001b30:	4656      	mov	r6, sl
 8001b32:	40b3      	lsls	r3, r6
 8001b34:	1e5e      	subs	r6, r3, #1
 8001b36:	41b3      	sbcs	r3, r6
 8001b38:	431c      	orrs	r4, r3
 8001b3a:	4663      	mov	r3, ip
 8001b3c:	40d3      	lsrs	r3, r2
 8001b3e:	18c9      	adds	r1, r1, r3
 8001b40:	19e4      	adds	r4, r4, r7
 8001b42:	42bc      	cmp	r4, r7
 8001b44:	41bf      	sbcs	r7, r7
 8001b46:	427f      	negs	r7, r7
 8001b48:	46b9      	mov	r9, r7
 8001b4a:	4680      	mov	r8, r0
 8001b4c:	4489      	add	r9, r1
 8001b4e:	e0d8      	b.n	8001d02 <__aeabi_dsub+0x426>
 8001b50:	4640      	mov	r0, r8
 8001b52:	4c3b      	ldr	r4, [pc, #236]	; (8001c40 <__aeabi_dsub+0x364>)
 8001b54:	3001      	adds	r0, #1
 8001b56:	4220      	tst	r0, r4
 8001b58:	d000      	beq.n	8001b5c <__aeabi_dsub+0x280>
 8001b5a:	e0b4      	b.n	8001cc6 <__aeabi_dsub+0x3ea>
 8001b5c:	4640      	mov	r0, r8
 8001b5e:	2800      	cmp	r0, #0
 8001b60:	d000      	beq.n	8001b64 <__aeabi_dsub+0x288>
 8001b62:	e144      	b.n	8001dee <__aeabi_dsub+0x512>
 8001b64:	4660      	mov	r0, ip
 8001b66:	4318      	orrs	r0, r3
 8001b68:	d100      	bne.n	8001b6c <__aeabi_dsub+0x290>
 8001b6a:	e190      	b.n	8001e8e <__aeabi_dsub+0x5b2>
 8001b6c:	0008      	movs	r0, r1
 8001b6e:	4338      	orrs	r0, r7
 8001b70:	d000      	beq.n	8001b74 <__aeabi_dsub+0x298>
 8001b72:	e1aa      	b.n	8001eca <__aeabi_dsub+0x5ee>
 8001b74:	4661      	mov	r1, ip
 8001b76:	08db      	lsrs	r3, r3, #3
 8001b78:	0749      	lsls	r1, r1, #29
 8001b7a:	430b      	orrs	r3, r1
 8001b7c:	4661      	mov	r1, ip
 8001b7e:	08cc      	lsrs	r4, r1, #3
 8001b80:	e027      	b.n	8001bd2 <__aeabi_dsub+0x2f6>
 8001b82:	0008      	movs	r0, r1
 8001b84:	4338      	orrs	r0, r7
 8001b86:	d061      	beq.n	8001c4c <__aeabi_dsub+0x370>
 8001b88:	1e50      	subs	r0, r2, #1
 8001b8a:	2a01      	cmp	r2, #1
 8001b8c:	d100      	bne.n	8001b90 <__aeabi_dsub+0x2b4>
 8001b8e:	e139      	b.n	8001e04 <__aeabi_dsub+0x528>
 8001b90:	42a2      	cmp	r2, r4
 8001b92:	d027      	beq.n	8001be4 <__aeabi_dsub+0x308>
 8001b94:	0002      	movs	r2, r0
 8001b96:	e75d      	b.n	8001a54 <__aeabi_dsub+0x178>
 8001b98:	0002      	movs	r2, r0
 8001b9a:	391f      	subs	r1, #31
 8001b9c:	40ca      	lsrs	r2, r1
 8001b9e:	0011      	movs	r1, r2
 8001ba0:	2b20      	cmp	r3, #32
 8001ba2:	d003      	beq.n	8001bac <__aeabi_dsub+0x2d0>
 8001ba4:	2240      	movs	r2, #64	; 0x40
 8001ba6:	1ad3      	subs	r3, r2, r3
 8001ba8:	4098      	lsls	r0, r3
 8001baa:	4304      	orrs	r4, r0
 8001bac:	1e63      	subs	r3, r4, #1
 8001bae:	419c      	sbcs	r4, r3
 8001bb0:	2300      	movs	r3, #0
 8001bb2:	4699      	mov	r9, r3
 8001bb4:	4698      	mov	r8, r3
 8001bb6:	430c      	orrs	r4, r1
 8001bb8:	0763      	lsls	r3, r4, #29
 8001bba:	d000      	beq.n	8001bbe <__aeabi_dsub+0x2e2>
 8001bbc:	e712      	b.n	80019e4 <__aeabi_dsub+0x108>
 8001bbe:	464b      	mov	r3, r9
 8001bc0:	464a      	mov	r2, r9
 8001bc2:	08e4      	lsrs	r4, r4, #3
 8001bc4:	075b      	lsls	r3, r3, #29
 8001bc6:	4323      	orrs	r3, r4
 8001bc8:	08d4      	lsrs	r4, r2, #3
 8001bca:	4642      	mov	r2, r8
 8001bcc:	4919      	ldr	r1, [pc, #100]	; (8001c34 <__aeabi_dsub+0x358>)
 8001bce:	428a      	cmp	r2, r1
 8001bd0:	d00e      	beq.n	8001bf0 <__aeabi_dsub+0x314>
 8001bd2:	0324      	lsls	r4, r4, #12
 8001bd4:	0552      	lsls	r2, r2, #21
 8001bd6:	0b24      	lsrs	r4, r4, #12
 8001bd8:	0d52      	lsrs	r2, r2, #21
 8001bda:	e722      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001bdc:	000a      	movs	r2, r1
 8001bde:	2400      	movs	r4, #0
 8001be0:	2300      	movs	r3, #0
 8001be2:	e71e      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001be4:	08db      	lsrs	r3, r3, #3
 8001be6:	4662      	mov	r2, ip
 8001be8:	0752      	lsls	r2, r2, #29
 8001bea:	4313      	orrs	r3, r2
 8001bec:	4662      	mov	r2, ip
 8001bee:	08d4      	lsrs	r4, r2, #3
 8001bf0:	001a      	movs	r2, r3
 8001bf2:	4322      	orrs	r2, r4
 8001bf4:	d100      	bne.n	8001bf8 <__aeabi_dsub+0x31c>
 8001bf6:	e1fc      	b.n	8001ff2 <__aeabi_dsub+0x716>
 8001bf8:	2280      	movs	r2, #128	; 0x80
 8001bfa:	0312      	lsls	r2, r2, #12
 8001bfc:	4314      	orrs	r4, r2
 8001bfe:	0324      	lsls	r4, r4, #12
 8001c00:	4a0c      	ldr	r2, [pc, #48]	; (8001c34 <__aeabi_dsub+0x358>)
 8001c02:	0b24      	lsrs	r4, r4, #12
 8001c04:	e70d      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001c06:	0020      	movs	r0, r4
 8001c08:	f000 fb2c 	bl	8002264 <__clzsi2>
 8001c0c:	0001      	movs	r1, r0
 8001c0e:	3118      	adds	r1, #24
 8001c10:	291f      	cmp	r1, #31
 8001c12:	dc00      	bgt.n	8001c16 <__aeabi_dsub+0x33a>
 8001c14:	e6c4      	b.n	80019a0 <__aeabi_dsub+0xc4>
 8001c16:	3808      	subs	r0, #8
 8001c18:	4084      	lsls	r4, r0
 8001c1a:	4643      	mov	r3, r8
 8001c1c:	0020      	movs	r0, r4
 8001c1e:	2400      	movs	r4, #0
 8001c20:	4588      	cmp	r8, r1
 8001c22:	dc00      	bgt.n	8001c26 <__aeabi_dsub+0x34a>
 8001c24:	e6c8      	b.n	80019b8 <__aeabi_dsub+0xdc>
 8001c26:	4a04      	ldr	r2, [pc, #16]	; (8001c38 <__aeabi_dsub+0x35c>)
 8001c28:	1a5b      	subs	r3, r3, r1
 8001c2a:	4010      	ands	r0, r2
 8001c2c:	4698      	mov	r8, r3
 8001c2e:	4681      	mov	r9, r0
 8001c30:	e6d6      	b.n	80019e0 <__aeabi_dsub+0x104>
 8001c32:	46c0      	nop			; (mov r8, r8)
 8001c34:	000007ff 	.word	0x000007ff
 8001c38:	ff7fffff 	.word	0xff7fffff
 8001c3c:	fffff801 	.word	0xfffff801
 8001c40:	000007fe 	.word	0x000007fe
 8001c44:	430f      	orrs	r7, r1
 8001c46:	1e7a      	subs	r2, r7, #1
 8001c48:	4197      	sbcs	r7, r2
 8001c4a:	e691      	b.n	8001970 <__aeabi_dsub+0x94>
 8001c4c:	4661      	mov	r1, ip
 8001c4e:	08db      	lsrs	r3, r3, #3
 8001c50:	0749      	lsls	r1, r1, #29
 8001c52:	430b      	orrs	r3, r1
 8001c54:	4661      	mov	r1, ip
 8001c56:	08cc      	lsrs	r4, r1, #3
 8001c58:	e7b8      	b.n	8001bcc <__aeabi_dsub+0x2f0>
 8001c5a:	4640      	mov	r0, r8
 8001c5c:	4cd3      	ldr	r4, [pc, #844]	; (8001fac <__aeabi_dsub+0x6d0>)
 8001c5e:	3001      	adds	r0, #1
 8001c60:	4220      	tst	r0, r4
 8001c62:	d000      	beq.n	8001c66 <__aeabi_dsub+0x38a>
 8001c64:	e0a2      	b.n	8001dac <__aeabi_dsub+0x4d0>
 8001c66:	4640      	mov	r0, r8
 8001c68:	2800      	cmp	r0, #0
 8001c6a:	d000      	beq.n	8001c6e <__aeabi_dsub+0x392>
 8001c6c:	e101      	b.n	8001e72 <__aeabi_dsub+0x596>
 8001c6e:	4660      	mov	r0, ip
 8001c70:	4318      	orrs	r0, r3
 8001c72:	d100      	bne.n	8001c76 <__aeabi_dsub+0x39a>
 8001c74:	e15e      	b.n	8001f34 <__aeabi_dsub+0x658>
 8001c76:	0008      	movs	r0, r1
 8001c78:	4338      	orrs	r0, r7
 8001c7a:	d000      	beq.n	8001c7e <__aeabi_dsub+0x3a2>
 8001c7c:	e15f      	b.n	8001f3e <__aeabi_dsub+0x662>
 8001c7e:	4661      	mov	r1, ip
 8001c80:	08db      	lsrs	r3, r3, #3
 8001c82:	0749      	lsls	r1, r1, #29
 8001c84:	430b      	orrs	r3, r1
 8001c86:	4661      	mov	r1, ip
 8001c88:	08cc      	lsrs	r4, r1, #3
 8001c8a:	e7a2      	b.n	8001bd2 <__aeabi_dsub+0x2f6>
 8001c8c:	4dc8      	ldr	r5, [pc, #800]	; (8001fb0 <__aeabi_dsub+0x6d4>)
 8001c8e:	42a8      	cmp	r0, r5
 8001c90:	d100      	bne.n	8001c94 <__aeabi_dsub+0x3b8>
 8001c92:	e0cf      	b.n	8001e34 <__aeabi_dsub+0x558>
 8001c94:	2580      	movs	r5, #128	; 0x80
 8001c96:	4664      	mov	r4, ip
 8001c98:	042d      	lsls	r5, r5, #16
 8001c9a:	432c      	orrs	r4, r5
 8001c9c:	46a4      	mov	ip, r4
 8001c9e:	2a38      	cmp	r2, #56	; 0x38
 8001ca0:	dc56      	bgt.n	8001d50 <__aeabi_dsub+0x474>
 8001ca2:	2a1f      	cmp	r2, #31
 8001ca4:	dd00      	ble.n	8001ca8 <__aeabi_dsub+0x3cc>
 8001ca6:	e0d1      	b.n	8001e4c <__aeabi_dsub+0x570>
 8001ca8:	2520      	movs	r5, #32
 8001caa:	001e      	movs	r6, r3
 8001cac:	1aad      	subs	r5, r5, r2
 8001cae:	4664      	mov	r4, ip
 8001cb0:	40ab      	lsls	r3, r5
 8001cb2:	40ac      	lsls	r4, r5
 8001cb4:	40d6      	lsrs	r6, r2
 8001cb6:	1e5d      	subs	r5, r3, #1
 8001cb8:	41ab      	sbcs	r3, r5
 8001cba:	4334      	orrs	r4, r6
 8001cbc:	4323      	orrs	r3, r4
 8001cbe:	4664      	mov	r4, ip
 8001cc0:	40d4      	lsrs	r4, r2
 8001cc2:	1b09      	subs	r1, r1, r4
 8001cc4:	e049      	b.n	8001d5a <__aeabi_dsub+0x47e>
 8001cc6:	4660      	mov	r0, ip
 8001cc8:	1bdc      	subs	r4, r3, r7
 8001cca:	1a46      	subs	r6, r0, r1
 8001ccc:	42a3      	cmp	r3, r4
 8001cce:	4180      	sbcs	r0, r0
 8001cd0:	4240      	negs	r0, r0
 8001cd2:	4681      	mov	r9, r0
 8001cd4:	0030      	movs	r0, r6
 8001cd6:	464e      	mov	r6, r9
 8001cd8:	1b80      	subs	r0, r0, r6
 8001cda:	4681      	mov	r9, r0
 8001cdc:	0200      	lsls	r0, r0, #8
 8001cde:	d476      	bmi.n	8001dce <__aeabi_dsub+0x4f2>
 8001ce0:	464b      	mov	r3, r9
 8001ce2:	4323      	orrs	r3, r4
 8001ce4:	d000      	beq.n	8001ce8 <__aeabi_dsub+0x40c>
 8001ce6:	e652      	b.n	800198e <__aeabi_dsub+0xb2>
 8001ce8:	2400      	movs	r4, #0
 8001cea:	2500      	movs	r5, #0
 8001cec:	e771      	b.n	8001bd2 <__aeabi_dsub+0x2f6>
 8001cee:	4339      	orrs	r1, r7
 8001cf0:	000c      	movs	r4, r1
 8001cf2:	1e62      	subs	r2, r4, #1
 8001cf4:	4194      	sbcs	r4, r2
 8001cf6:	18e4      	adds	r4, r4, r3
 8001cf8:	429c      	cmp	r4, r3
 8001cfa:	419b      	sbcs	r3, r3
 8001cfc:	425b      	negs	r3, r3
 8001cfe:	4463      	add	r3, ip
 8001d00:	4699      	mov	r9, r3
 8001d02:	464b      	mov	r3, r9
 8001d04:	021b      	lsls	r3, r3, #8
 8001d06:	d400      	bmi.n	8001d0a <__aeabi_dsub+0x42e>
 8001d08:	e756      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001d0a:	2301      	movs	r3, #1
 8001d0c:	469c      	mov	ip, r3
 8001d0e:	4ba8      	ldr	r3, [pc, #672]	; (8001fb0 <__aeabi_dsub+0x6d4>)
 8001d10:	44e0      	add	r8, ip
 8001d12:	4598      	cmp	r8, r3
 8001d14:	d038      	beq.n	8001d88 <__aeabi_dsub+0x4ac>
 8001d16:	464b      	mov	r3, r9
 8001d18:	48a6      	ldr	r0, [pc, #664]	; (8001fb4 <__aeabi_dsub+0x6d8>)
 8001d1a:	2201      	movs	r2, #1
 8001d1c:	4003      	ands	r3, r0
 8001d1e:	0018      	movs	r0, r3
 8001d20:	0863      	lsrs	r3, r4, #1
 8001d22:	4014      	ands	r4, r2
 8001d24:	431c      	orrs	r4, r3
 8001d26:	07c3      	lsls	r3, r0, #31
 8001d28:	431c      	orrs	r4, r3
 8001d2a:	0843      	lsrs	r3, r0, #1
 8001d2c:	4699      	mov	r9, r3
 8001d2e:	e657      	b.n	80019e0 <__aeabi_dsub+0x104>
 8001d30:	0010      	movs	r0, r2
 8001d32:	000e      	movs	r6, r1
 8001d34:	3820      	subs	r0, #32
 8001d36:	40c6      	lsrs	r6, r0
 8001d38:	2a20      	cmp	r2, #32
 8001d3a:	d004      	beq.n	8001d46 <__aeabi_dsub+0x46a>
 8001d3c:	2040      	movs	r0, #64	; 0x40
 8001d3e:	1a82      	subs	r2, r0, r2
 8001d40:	4091      	lsls	r1, r2
 8001d42:	430f      	orrs	r7, r1
 8001d44:	46b9      	mov	r9, r7
 8001d46:	464f      	mov	r7, r9
 8001d48:	1e7a      	subs	r2, r7, #1
 8001d4a:	4197      	sbcs	r7, r2
 8001d4c:	4337      	orrs	r7, r6
 8001d4e:	e60f      	b.n	8001970 <__aeabi_dsub+0x94>
 8001d50:	4662      	mov	r2, ip
 8001d52:	431a      	orrs	r2, r3
 8001d54:	0013      	movs	r3, r2
 8001d56:	1e5a      	subs	r2, r3, #1
 8001d58:	4193      	sbcs	r3, r2
 8001d5a:	1afc      	subs	r4, r7, r3
 8001d5c:	42a7      	cmp	r7, r4
 8001d5e:	41bf      	sbcs	r7, r7
 8001d60:	427f      	negs	r7, r7
 8001d62:	1bcb      	subs	r3, r1, r7
 8001d64:	4699      	mov	r9, r3
 8001d66:	465d      	mov	r5, fp
 8001d68:	4680      	mov	r8, r0
 8001d6a:	e608      	b.n	800197e <__aeabi_dsub+0xa2>
 8001d6c:	4666      	mov	r6, ip
 8001d6e:	431e      	orrs	r6, r3
 8001d70:	d100      	bne.n	8001d74 <__aeabi_dsub+0x498>
 8001d72:	e0be      	b.n	8001ef2 <__aeabi_dsub+0x616>
 8001d74:	1e56      	subs	r6, r2, #1
 8001d76:	2a01      	cmp	r2, #1
 8001d78:	d100      	bne.n	8001d7c <__aeabi_dsub+0x4a0>
 8001d7a:	e109      	b.n	8001f90 <__aeabi_dsub+0x6b4>
 8001d7c:	4c8c      	ldr	r4, [pc, #560]	; (8001fb0 <__aeabi_dsub+0x6d4>)
 8001d7e:	42a2      	cmp	r2, r4
 8001d80:	d100      	bne.n	8001d84 <__aeabi_dsub+0x4a8>
 8001d82:	e119      	b.n	8001fb8 <__aeabi_dsub+0x6dc>
 8001d84:	0032      	movs	r2, r6
 8001d86:	e6c1      	b.n	8001b0c <__aeabi_dsub+0x230>
 8001d88:	4642      	mov	r2, r8
 8001d8a:	2400      	movs	r4, #0
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	e648      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001d90:	2020      	movs	r0, #32
 8001d92:	000c      	movs	r4, r1
 8001d94:	1a80      	subs	r0, r0, r2
 8001d96:	003e      	movs	r6, r7
 8001d98:	4087      	lsls	r7, r0
 8001d9a:	4084      	lsls	r4, r0
 8001d9c:	40d6      	lsrs	r6, r2
 8001d9e:	1e78      	subs	r0, r7, #1
 8001da0:	4187      	sbcs	r7, r0
 8001da2:	40d1      	lsrs	r1, r2
 8001da4:	4334      	orrs	r4, r6
 8001da6:	433c      	orrs	r4, r7
 8001da8:	448c      	add	ip, r1
 8001daa:	e7a4      	b.n	8001cf6 <__aeabi_dsub+0x41a>
 8001dac:	4a80      	ldr	r2, [pc, #512]	; (8001fb0 <__aeabi_dsub+0x6d4>)
 8001dae:	4290      	cmp	r0, r2
 8001db0:	d100      	bne.n	8001db4 <__aeabi_dsub+0x4d8>
 8001db2:	e0e9      	b.n	8001f88 <__aeabi_dsub+0x6ac>
 8001db4:	19df      	adds	r7, r3, r7
 8001db6:	429f      	cmp	r7, r3
 8001db8:	419b      	sbcs	r3, r3
 8001dba:	4461      	add	r1, ip
 8001dbc:	425b      	negs	r3, r3
 8001dbe:	18c9      	adds	r1, r1, r3
 8001dc0:	07cc      	lsls	r4, r1, #31
 8001dc2:	087f      	lsrs	r7, r7, #1
 8001dc4:	084b      	lsrs	r3, r1, #1
 8001dc6:	4699      	mov	r9, r3
 8001dc8:	4680      	mov	r8, r0
 8001dca:	433c      	orrs	r4, r7
 8001dcc:	e6f4      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001dce:	1afc      	subs	r4, r7, r3
 8001dd0:	42a7      	cmp	r7, r4
 8001dd2:	41bf      	sbcs	r7, r7
 8001dd4:	4663      	mov	r3, ip
 8001dd6:	427f      	negs	r7, r7
 8001dd8:	1ac9      	subs	r1, r1, r3
 8001dda:	1bcb      	subs	r3, r1, r7
 8001ddc:	4699      	mov	r9, r3
 8001dde:	465d      	mov	r5, fp
 8001de0:	e5d5      	b.n	800198e <__aeabi_dsub+0xb2>
 8001de2:	08ff      	lsrs	r7, r7, #3
 8001de4:	074b      	lsls	r3, r1, #29
 8001de6:	465d      	mov	r5, fp
 8001de8:	433b      	orrs	r3, r7
 8001dea:	08cc      	lsrs	r4, r1, #3
 8001dec:	e6ee      	b.n	8001bcc <__aeabi_dsub+0x2f0>
 8001dee:	4662      	mov	r2, ip
 8001df0:	431a      	orrs	r2, r3
 8001df2:	d000      	beq.n	8001df6 <__aeabi_dsub+0x51a>
 8001df4:	e082      	b.n	8001efc <__aeabi_dsub+0x620>
 8001df6:	000b      	movs	r3, r1
 8001df8:	433b      	orrs	r3, r7
 8001dfa:	d11b      	bne.n	8001e34 <__aeabi_dsub+0x558>
 8001dfc:	2480      	movs	r4, #128	; 0x80
 8001dfe:	2500      	movs	r5, #0
 8001e00:	0324      	lsls	r4, r4, #12
 8001e02:	e6f9      	b.n	8001bf8 <__aeabi_dsub+0x31c>
 8001e04:	19dc      	adds	r4, r3, r7
 8001e06:	429c      	cmp	r4, r3
 8001e08:	419b      	sbcs	r3, r3
 8001e0a:	4461      	add	r1, ip
 8001e0c:	4689      	mov	r9, r1
 8001e0e:	425b      	negs	r3, r3
 8001e10:	4499      	add	r9, r3
 8001e12:	464b      	mov	r3, r9
 8001e14:	021b      	lsls	r3, r3, #8
 8001e16:	d444      	bmi.n	8001ea2 <__aeabi_dsub+0x5c6>
 8001e18:	2301      	movs	r3, #1
 8001e1a:	4698      	mov	r8, r3
 8001e1c:	e6cc      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001e1e:	1bdc      	subs	r4, r3, r7
 8001e20:	4662      	mov	r2, ip
 8001e22:	42a3      	cmp	r3, r4
 8001e24:	419b      	sbcs	r3, r3
 8001e26:	1a51      	subs	r1, r2, r1
 8001e28:	425b      	negs	r3, r3
 8001e2a:	1acb      	subs	r3, r1, r3
 8001e2c:	4699      	mov	r9, r3
 8001e2e:	2301      	movs	r3, #1
 8001e30:	4698      	mov	r8, r3
 8001e32:	e5a4      	b.n	800197e <__aeabi_dsub+0xa2>
 8001e34:	08ff      	lsrs	r7, r7, #3
 8001e36:	074b      	lsls	r3, r1, #29
 8001e38:	465d      	mov	r5, fp
 8001e3a:	433b      	orrs	r3, r7
 8001e3c:	08cc      	lsrs	r4, r1, #3
 8001e3e:	e6d7      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001e40:	4662      	mov	r2, ip
 8001e42:	431a      	orrs	r2, r3
 8001e44:	0014      	movs	r4, r2
 8001e46:	1e63      	subs	r3, r4, #1
 8001e48:	419c      	sbcs	r4, r3
 8001e4a:	e679      	b.n	8001b40 <__aeabi_dsub+0x264>
 8001e4c:	0015      	movs	r5, r2
 8001e4e:	4664      	mov	r4, ip
 8001e50:	3d20      	subs	r5, #32
 8001e52:	40ec      	lsrs	r4, r5
 8001e54:	46a0      	mov	r8, r4
 8001e56:	2a20      	cmp	r2, #32
 8001e58:	d005      	beq.n	8001e66 <__aeabi_dsub+0x58a>
 8001e5a:	2540      	movs	r5, #64	; 0x40
 8001e5c:	4664      	mov	r4, ip
 8001e5e:	1aaa      	subs	r2, r5, r2
 8001e60:	4094      	lsls	r4, r2
 8001e62:	4323      	orrs	r3, r4
 8001e64:	469a      	mov	sl, r3
 8001e66:	4654      	mov	r4, sl
 8001e68:	1e63      	subs	r3, r4, #1
 8001e6a:	419c      	sbcs	r4, r3
 8001e6c:	4643      	mov	r3, r8
 8001e6e:	4323      	orrs	r3, r4
 8001e70:	e773      	b.n	8001d5a <__aeabi_dsub+0x47e>
 8001e72:	4662      	mov	r2, ip
 8001e74:	431a      	orrs	r2, r3
 8001e76:	d023      	beq.n	8001ec0 <__aeabi_dsub+0x5e4>
 8001e78:	000a      	movs	r2, r1
 8001e7a:	433a      	orrs	r2, r7
 8001e7c:	d000      	beq.n	8001e80 <__aeabi_dsub+0x5a4>
 8001e7e:	e0a0      	b.n	8001fc2 <__aeabi_dsub+0x6e6>
 8001e80:	4662      	mov	r2, ip
 8001e82:	08db      	lsrs	r3, r3, #3
 8001e84:	0752      	lsls	r2, r2, #29
 8001e86:	4313      	orrs	r3, r2
 8001e88:	4662      	mov	r2, ip
 8001e8a:	08d4      	lsrs	r4, r2, #3
 8001e8c:	e6b0      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001e8e:	000b      	movs	r3, r1
 8001e90:	433b      	orrs	r3, r7
 8001e92:	d100      	bne.n	8001e96 <__aeabi_dsub+0x5ba>
 8001e94:	e728      	b.n	8001ce8 <__aeabi_dsub+0x40c>
 8001e96:	08ff      	lsrs	r7, r7, #3
 8001e98:	074b      	lsls	r3, r1, #29
 8001e9a:	465d      	mov	r5, fp
 8001e9c:	433b      	orrs	r3, r7
 8001e9e:	08cc      	lsrs	r4, r1, #3
 8001ea0:	e697      	b.n	8001bd2 <__aeabi_dsub+0x2f6>
 8001ea2:	2302      	movs	r3, #2
 8001ea4:	4698      	mov	r8, r3
 8001ea6:	e736      	b.n	8001d16 <__aeabi_dsub+0x43a>
 8001ea8:	1afc      	subs	r4, r7, r3
 8001eaa:	42a7      	cmp	r7, r4
 8001eac:	41bf      	sbcs	r7, r7
 8001eae:	4663      	mov	r3, ip
 8001eb0:	427f      	negs	r7, r7
 8001eb2:	1ac9      	subs	r1, r1, r3
 8001eb4:	1bcb      	subs	r3, r1, r7
 8001eb6:	4699      	mov	r9, r3
 8001eb8:	2301      	movs	r3, #1
 8001eba:	465d      	mov	r5, fp
 8001ebc:	4698      	mov	r8, r3
 8001ebe:	e55e      	b.n	800197e <__aeabi_dsub+0xa2>
 8001ec0:	074b      	lsls	r3, r1, #29
 8001ec2:	08ff      	lsrs	r7, r7, #3
 8001ec4:	433b      	orrs	r3, r7
 8001ec6:	08cc      	lsrs	r4, r1, #3
 8001ec8:	e692      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001eca:	1bdc      	subs	r4, r3, r7
 8001ecc:	4660      	mov	r0, ip
 8001ece:	42a3      	cmp	r3, r4
 8001ed0:	41b6      	sbcs	r6, r6
 8001ed2:	1a40      	subs	r0, r0, r1
 8001ed4:	4276      	negs	r6, r6
 8001ed6:	1b80      	subs	r0, r0, r6
 8001ed8:	4681      	mov	r9, r0
 8001eda:	0200      	lsls	r0, r0, #8
 8001edc:	d560      	bpl.n	8001fa0 <__aeabi_dsub+0x6c4>
 8001ede:	1afc      	subs	r4, r7, r3
 8001ee0:	42a7      	cmp	r7, r4
 8001ee2:	41bf      	sbcs	r7, r7
 8001ee4:	4663      	mov	r3, ip
 8001ee6:	427f      	negs	r7, r7
 8001ee8:	1ac9      	subs	r1, r1, r3
 8001eea:	1bcb      	subs	r3, r1, r7
 8001eec:	4699      	mov	r9, r3
 8001eee:	465d      	mov	r5, fp
 8001ef0:	e576      	b.n	80019e0 <__aeabi_dsub+0x104>
 8001ef2:	08ff      	lsrs	r7, r7, #3
 8001ef4:	074b      	lsls	r3, r1, #29
 8001ef6:	433b      	orrs	r3, r7
 8001ef8:	08cc      	lsrs	r4, r1, #3
 8001efa:	e667      	b.n	8001bcc <__aeabi_dsub+0x2f0>
 8001efc:	000a      	movs	r2, r1
 8001efe:	08db      	lsrs	r3, r3, #3
 8001f00:	433a      	orrs	r2, r7
 8001f02:	d100      	bne.n	8001f06 <__aeabi_dsub+0x62a>
 8001f04:	e66f      	b.n	8001be6 <__aeabi_dsub+0x30a>
 8001f06:	4662      	mov	r2, ip
 8001f08:	0752      	lsls	r2, r2, #29
 8001f0a:	4313      	orrs	r3, r2
 8001f0c:	4662      	mov	r2, ip
 8001f0e:	08d4      	lsrs	r4, r2, #3
 8001f10:	2280      	movs	r2, #128	; 0x80
 8001f12:	0312      	lsls	r2, r2, #12
 8001f14:	4214      	tst	r4, r2
 8001f16:	d007      	beq.n	8001f28 <__aeabi_dsub+0x64c>
 8001f18:	08c8      	lsrs	r0, r1, #3
 8001f1a:	4210      	tst	r0, r2
 8001f1c:	d104      	bne.n	8001f28 <__aeabi_dsub+0x64c>
 8001f1e:	465d      	mov	r5, fp
 8001f20:	0004      	movs	r4, r0
 8001f22:	08fb      	lsrs	r3, r7, #3
 8001f24:	0749      	lsls	r1, r1, #29
 8001f26:	430b      	orrs	r3, r1
 8001f28:	0f5a      	lsrs	r2, r3, #29
 8001f2a:	00db      	lsls	r3, r3, #3
 8001f2c:	08db      	lsrs	r3, r3, #3
 8001f2e:	0752      	lsls	r2, r2, #29
 8001f30:	4313      	orrs	r3, r2
 8001f32:	e65d      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001f34:	074b      	lsls	r3, r1, #29
 8001f36:	08ff      	lsrs	r7, r7, #3
 8001f38:	433b      	orrs	r3, r7
 8001f3a:	08cc      	lsrs	r4, r1, #3
 8001f3c:	e649      	b.n	8001bd2 <__aeabi_dsub+0x2f6>
 8001f3e:	19dc      	adds	r4, r3, r7
 8001f40:	429c      	cmp	r4, r3
 8001f42:	419b      	sbcs	r3, r3
 8001f44:	4461      	add	r1, ip
 8001f46:	4689      	mov	r9, r1
 8001f48:	425b      	negs	r3, r3
 8001f4a:	4499      	add	r9, r3
 8001f4c:	464b      	mov	r3, r9
 8001f4e:	021b      	lsls	r3, r3, #8
 8001f50:	d400      	bmi.n	8001f54 <__aeabi_dsub+0x678>
 8001f52:	e631      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001f54:	464a      	mov	r2, r9
 8001f56:	4b17      	ldr	r3, [pc, #92]	; (8001fb4 <__aeabi_dsub+0x6d8>)
 8001f58:	401a      	ands	r2, r3
 8001f5a:	2301      	movs	r3, #1
 8001f5c:	4691      	mov	r9, r2
 8001f5e:	4698      	mov	r8, r3
 8001f60:	e62a      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001f62:	0016      	movs	r6, r2
 8001f64:	4664      	mov	r4, ip
 8001f66:	3e20      	subs	r6, #32
 8001f68:	40f4      	lsrs	r4, r6
 8001f6a:	46a0      	mov	r8, r4
 8001f6c:	2a20      	cmp	r2, #32
 8001f6e:	d005      	beq.n	8001f7c <__aeabi_dsub+0x6a0>
 8001f70:	2640      	movs	r6, #64	; 0x40
 8001f72:	4664      	mov	r4, ip
 8001f74:	1ab2      	subs	r2, r6, r2
 8001f76:	4094      	lsls	r4, r2
 8001f78:	4323      	orrs	r3, r4
 8001f7a:	469a      	mov	sl, r3
 8001f7c:	4654      	mov	r4, sl
 8001f7e:	1e63      	subs	r3, r4, #1
 8001f80:	419c      	sbcs	r4, r3
 8001f82:	4643      	mov	r3, r8
 8001f84:	431c      	orrs	r4, r3
 8001f86:	e5db      	b.n	8001b40 <__aeabi_dsub+0x264>
 8001f88:	0002      	movs	r2, r0
 8001f8a:	2400      	movs	r4, #0
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	e548      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001f90:	19dc      	adds	r4, r3, r7
 8001f92:	42bc      	cmp	r4, r7
 8001f94:	41bf      	sbcs	r7, r7
 8001f96:	4461      	add	r1, ip
 8001f98:	4689      	mov	r9, r1
 8001f9a:	427f      	negs	r7, r7
 8001f9c:	44b9      	add	r9, r7
 8001f9e:	e738      	b.n	8001e12 <__aeabi_dsub+0x536>
 8001fa0:	464b      	mov	r3, r9
 8001fa2:	4323      	orrs	r3, r4
 8001fa4:	d100      	bne.n	8001fa8 <__aeabi_dsub+0x6cc>
 8001fa6:	e69f      	b.n	8001ce8 <__aeabi_dsub+0x40c>
 8001fa8:	e606      	b.n	8001bb8 <__aeabi_dsub+0x2dc>
 8001faa:	46c0      	nop			; (mov r8, r8)
 8001fac:	000007fe 	.word	0x000007fe
 8001fb0:	000007ff 	.word	0x000007ff
 8001fb4:	ff7fffff 	.word	0xff7fffff
 8001fb8:	08ff      	lsrs	r7, r7, #3
 8001fba:	074b      	lsls	r3, r1, #29
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	08cc      	lsrs	r4, r1, #3
 8001fc0:	e616      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001fc2:	4662      	mov	r2, ip
 8001fc4:	08db      	lsrs	r3, r3, #3
 8001fc6:	0752      	lsls	r2, r2, #29
 8001fc8:	4313      	orrs	r3, r2
 8001fca:	4662      	mov	r2, ip
 8001fcc:	08d4      	lsrs	r4, r2, #3
 8001fce:	2280      	movs	r2, #128	; 0x80
 8001fd0:	0312      	lsls	r2, r2, #12
 8001fd2:	4214      	tst	r4, r2
 8001fd4:	d007      	beq.n	8001fe6 <__aeabi_dsub+0x70a>
 8001fd6:	08c8      	lsrs	r0, r1, #3
 8001fd8:	4210      	tst	r0, r2
 8001fda:	d104      	bne.n	8001fe6 <__aeabi_dsub+0x70a>
 8001fdc:	465d      	mov	r5, fp
 8001fde:	0004      	movs	r4, r0
 8001fe0:	08fb      	lsrs	r3, r7, #3
 8001fe2:	0749      	lsls	r1, r1, #29
 8001fe4:	430b      	orrs	r3, r1
 8001fe6:	0f5a      	lsrs	r2, r3, #29
 8001fe8:	00db      	lsls	r3, r3, #3
 8001fea:	0752      	lsls	r2, r2, #29
 8001fec:	08db      	lsrs	r3, r3, #3
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	e5fe      	b.n	8001bf0 <__aeabi_dsub+0x314>
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	4a01      	ldr	r2, [pc, #4]	; (8001ffc <__aeabi_dsub+0x720>)
 8001ff6:	001c      	movs	r4, r3
 8001ff8:	e513      	b.n	8001a22 <__aeabi_dsub+0x146>
 8001ffa:	46c0      	nop			; (mov r8, r8)
 8001ffc:	000007ff 	.word	0x000007ff

08002000 <__aeabi_dcmpun>:
 8002000:	b570      	push	{r4, r5, r6, lr}
 8002002:	0005      	movs	r5, r0
 8002004:	480c      	ldr	r0, [pc, #48]	; (8002038 <__aeabi_dcmpun+0x38>)
 8002006:	031c      	lsls	r4, r3, #12
 8002008:	0016      	movs	r6, r2
 800200a:	005b      	lsls	r3, r3, #1
 800200c:	030a      	lsls	r2, r1, #12
 800200e:	0049      	lsls	r1, r1, #1
 8002010:	0b12      	lsrs	r2, r2, #12
 8002012:	0d49      	lsrs	r1, r1, #21
 8002014:	0b24      	lsrs	r4, r4, #12
 8002016:	0d5b      	lsrs	r3, r3, #21
 8002018:	4281      	cmp	r1, r0
 800201a:	d008      	beq.n	800202e <__aeabi_dcmpun+0x2e>
 800201c:	4a06      	ldr	r2, [pc, #24]	; (8002038 <__aeabi_dcmpun+0x38>)
 800201e:	2000      	movs	r0, #0
 8002020:	4293      	cmp	r3, r2
 8002022:	d103      	bne.n	800202c <__aeabi_dcmpun+0x2c>
 8002024:	0020      	movs	r0, r4
 8002026:	4330      	orrs	r0, r6
 8002028:	1e43      	subs	r3, r0, #1
 800202a:	4198      	sbcs	r0, r3
 800202c:	bd70      	pop	{r4, r5, r6, pc}
 800202e:	2001      	movs	r0, #1
 8002030:	432a      	orrs	r2, r5
 8002032:	d1fb      	bne.n	800202c <__aeabi_dcmpun+0x2c>
 8002034:	e7f2      	b.n	800201c <__aeabi_dcmpun+0x1c>
 8002036:	46c0      	nop			; (mov r8, r8)
 8002038:	000007ff 	.word	0x000007ff

0800203c <__aeabi_d2iz>:
 800203c:	000a      	movs	r2, r1
 800203e:	b530      	push	{r4, r5, lr}
 8002040:	4c13      	ldr	r4, [pc, #76]	; (8002090 <__aeabi_d2iz+0x54>)
 8002042:	0053      	lsls	r3, r2, #1
 8002044:	0309      	lsls	r1, r1, #12
 8002046:	0005      	movs	r5, r0
 8002048:	0b09      	lsrs	r1, r1, #12
 800204a:	2000      	movs	r0, #0
 800204c:	0d5b      	lsrs	r3, r3, #21
 800204e:	0fd2      	lsrs	r2, r2, #31
 8002050:	42a3      	cmp	r3, r4
 8002052:	dd04      	ble.n	800205e <__aeabi_d2iz+0x22>
 8002054:	480f      	ldr	r0, [pc, #60]	; (8002094 <__aeabi_d2iz+0x58>)
 8002056:	4283      	cmp	r3, r0
 8002058:	dd02      	ble.n	8002060 <__aeabi_d2iz+0x24>
 800205a:	4b0f      	ldr	r3, [pc, #60]	; (8002098 <__aeabi_d2iz+0x5c>)
 800205c:	18d0      	adds	r0, r2, r3
 800205e:	bd30      	pop	{r4, r5, pc}
 8002060:	2080      	movs	r0, #128	; 0x80
 8002062:	0340      	lsls	r0, r0, #13
 8002064:	4301      	orrs	r1, r0
 8002066:	480d      	ldr	r0, [pc, #52]	; (800209c <__aeabi_d2iz+0x60>)
 8002068:	1ac0      	subs	r0, r0, r3
 800206a:	281f      	cmp	r0, #31
 800206c:	dd08      	ble.n	8002080 <__aeabi_d2iz+0x44>
 800206e:	480c      	ldr	r0, [pc, #48]	; (80020a0 <__aeabi_d2iz+0x64>)
 8002070:	1ac3      	subs	r3, r0, r3
 8002072:	40d9      	lsrs	r1, r3
 8002074:	000b      	movs	r3, r1
 8002076:	4258      	negs	r0, r3
 8002078:	2a00      	cmp	r2, #0
 800207a:	d1f0      	bne.n	800205e <__aeabi_d2iz+0x22>
 800207c:	0018      	movs	r0, r3
 800207e:	e7ee      	b.n	800205e <__aeabi_d2iz+0x22>
 8002080:	4c08      	ldr	r4, [pc, #32]	; (80020a4 <__aeabi_d2iz+0x68>)
 8002082:	40c5      	lsrs	r5, r0
 8002084:	46a4      	mov	ip, r4
 8002086:	4463      	add	r3, ip
 8002088:	4099      	lsls	r1, r3
 800208a:	000b      	movs	r3, r1
 800208c:	432b      	orrs	r3, r5
 800208e:	e7f2      	b.n	8002076 <__aeabi_d2iz+0x3a>
 8002090:	000003fe 	.word	0x000003fe
 8002094:	0000041d 	.word	0x0000041d
 8002098:	7fffffff 	.word	0x7fffffff
 800209c:	00000433 	.word	0x00000433
 80020a0:	00000413 	.word	0x00000413
 80020a4:	fffffbed 	.word	0xfffffbed

080020a8 <__aeabi_i2d>:
 80020a8:	b570      	push	{r4, r5, r6, lr}
 80020aa:	2800      	cmp	r0, #0
 80020ac:	d016      	beq.n	80020dc <__aeabi_i2d+0x34>
 80020ae:	17c3      	asrs	r3, r0, #31
 80020b0:	18c5      	adds	r5, r0, r3
 80020b2:	405d      	eors	r5, r3
 80020b4:	0fc4      	lsrs	r4, r0, #31
 80020b6:	0028      	movs	r0, r5
 80020b8:	f000 f8d4 	bl	8002264 <__clzsi2>
 80020bc:	4a11      	ldr	r2, [pc, #68]	; (8002104 <__aeabi_i2d+0x5c>)
 80020be:	1a12      	subs	r2, r2, r0
 80020c0:	280a      	cmp	r0, #10
 80020c2:	dc16      	bgt.n	80020f2 <__aeabi_i2d+0x4a>
 80020c4:	0003      	movs	r3, r0
 80020c6:	002e      	movs	r6, r5
 80020c8:	3315      	adds	r3, #21
 80020ca:	409e      	lsls	r6, r3
 80020cc:	230b      	movs	r3, #11
 80020ce:	1a18      	subs	r0, r3, r0
 80020d0:	40c5      	lsrs	r5, r0
 80020d2:	0552      	lsls	r2, r2, #21
 80020d4:	032d      	lsls	r5, r5, #12
 80020d6:	0b2d      	lsrs	r5, r5, #12
 80020d8:	0d53      	lsrs	r3, r2, #21
 80020da:	e003      	b.n	80020e4 <__aeabi_i2d+0x3c>
 80020dc:	2400      	movs	r4, #0
 80020de:	2300      	movs	r3, #0
 80020e0:	2500      	movs	r5, #0
 80020e2:	2600      	movs	r6, #0
 80020e4:	051b      	lsls	r3, r3, #20
 80020e6:	432b      	orrs	r3, r5
 80020e8:	07e4      	lsls	r4, r4, #31
 80020ea:	4323      	orrs	r3, r4
 80020ec:	0030      	movs	r0, r6
 80020ee:	0019      	movs	r1, r3
 80020f0:	bd70      	pop	{r4, r5, r6, pc}
 80020f2:	380b      	subs	r0, #11
 80020f4:	4085      	lsls	r5, r0
 80020f6:	0552      	lsls	r2, r2, #21
 80020f8:	032d      	lsls	r5, r5, #12
 80020fa:	2600      	movs	r6, #0
 80020fc:	0b2d      	lsrs	r5, r5, #12
 80020fe:	0d53      	lsrs	r3, r2, #21
 8002100:	e7f0      	b.n	80020e4 <__aeabi_i2d+0x3c>
 8002102:	46c0      	nop			; (mov r8, r8)
 8002104:	0000041e 	.word	0x0000041e

08002108 <__aeabi_ui2d>:
 8002108:	b510      	push	{r4, lr}
 800210a:	1e04      	subs	r4, r0, #0
 800210c:	d010      	beq.n	8002130 <__aeabi_ui2d+0x28>
 800210e:	f000 f8a9 	bl	8002264 <__clzsi2>
 8002112:	4b0f      	ldr	r3, [pc, #60]	; (8002150 <__aeabi_ui2d+0x48>)
 8002114:	1a1b      	subs	r3, r3, r0
 8002116:	280a      	cmp	r0, #10
 8002118:	dc11      	bgt.n	800213e <__aeabi_ui2d+0x36>
 800211a:	220b      	movs	r2, #11
 800211c:	0021      	movs	r1, r4
 800211e:	1a12      	subs	r2, r2, r0
 8002120:	40d1      	lsrs	r1, r2
 8002122:	3015      	adds	r0, #21
 8002124:	030a      	lsls	r2, r1, #12
 8002126:	055b      	lsls	r3, r3, #21
 8002128:	4084      	lsls	r4, r0
 800212a:	0b12      	lsrs	r2, r2, #12
 800212c:	0d5b      	lsrs	r3, r3, #21
 800212e:	e001      	b.n	8002134 <__aeabi_ui2d+0x2c>
 8002130:	2300      	movs	r3, #0
 8002132:	2200      	movs	r2, #0
 8002134:	051b      	lsls	r3, r3, #20
 8002136:	4313      	orrs	r3, r2
 8002138:	0020      	movs	r0, r4
 800213a:	0019      	movs	r1, r3
 800213c:	bd10      	pop	{r4, pc}
 800213e:	0022      	movs	r2, r4
 8002140:	380b      	subs	r0, #11
 8002142:	4082      	lsls	r2, r0
 8002144:	055b      	lsls	r3, r3, #21
 8002146:	0312      	lsls	r2, r2, #12
 8002148:	2400      	movs	r4, #0
 800214a:	0b12      	lsrs	r2, r2, #12
 800214c:	0d5b      	lsrs	r3, r3, #21
 800214e:	e7f1      	b.n	8002134 <__aeabi_ui2d+0x2c>
 8002150:	0000041e 	.word	0x0000041e

08002154 <__aeabi_d2f>:
 8002154:	0002      	movs	r2, r0
 8002156:	004b      	lsls	r3, r1, #1
 8002158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800215a:	0d5b      	lsrs	r3, r3, #21
 800215c:	030c      	lsls	r4, r1, #12
 800215e:	4e3d      	ldr	r6, [pc, #244]	; (8002254 <__aeabi_d2f+0x100>)
 8002160:	0a64      	lsrs	r4, r4, #9
 8002162:	0f40      	lsrs	r0, r0, #29
 8002164:	1c5f      	adds	r7, r3, #1
 8002166:	0fc9      	lsrs	r1, r1, #31
 8002168:	4304      	orrs	r4, r0
 800216a:	00d5      	lsls	r5, r2, #3
 800216c:	4237      	tst	r7, r6
 800216e:	d00a      	beq.n	8002186 <__aeabi_d2f+0x32>
 8002170:	4839      	ldr	r0, [pc, #228]	; (8002258 <__aeabi_d2f+0x104>)
 8002172:	181e      	adds	r6, r3, r0
 8002174:	2efe      	cmp	r6, #254	; 0xfe
 8002176:	dd16      	ble.n	80021a6 <__aeabi_d2f+0x52>
 8002178:	20ff      	movs	r0, #255	; 0xff
 800217a:	2400      	movs	r4, #0
 800217c:	05c0      	lsls	r0, r0, #23
 800217e:	4320      	orrs	r0, r4
 8002180:	07c9      	lsls	r1, r1, #31
 8002182:	4308      	orrs	r0, r1
 8002184:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002186:	2b00      	cmp	r3, #0
 8002188:	d106      	bne.n	8002198 <__aeabi_d2f+0x44>
 800218a:	432c      	orrs	r4, r5
 800218c:	d026      	beq.n	80021dc <__aeabi_d2f+0x88>
 800218e:	2205      	movs	r2, #5
 8002190:	0192      	lsls	r2, r2, #6
 8002192:	0a54      	lsrs	r4, r2, #9
 8002194:	b2d8      	uxtb	r0, r3
 8002196:	e7f1      	b.n	800217c <__aeabi_d2f+0x28>
 8002198:	4325      	orrs	r5, r4
 800219a:	d0ed      	beq.n	8002178 <__aeabi_d2f+0x24>
 800219c:	2080      	movs	r0, #128	; 0x80
 800219e:	03c0      	lsls	r0, r0, #15
 80021a0:	4304      	orrs	r4, r0
 80021a2:	20ff      	movs	r0, #255	; 0xff
 80021a4:	e7ea      	b.n	800217c <__aeabi_d2f+0x28>
 80021a6:	2e00      	cmp	r6, #0
 80021a8:	dd1b      	ble.n	80021e2 <__aeabi_d2f+0x8e>
 80021aa:	0192      	lsls	r2, r2, #6
 80021ac:	1e53      	subs	r3, r2, #1
 80021ae:	419a      	sbcs	r2, r3
 80021b0:	00e4      	lsls	r4, r4, #3
 80021b2:	0f6d      	lsrs	r5, r5, #29
 80021b4:	4322      	orrs	r2, r4
 80021b6:	432a      	orrs	r2, r5
 80021b8:	0753      	lsls	r3, r2, #29
 80021ba:	d048      	beq.n	800224e <__aeabi_d2f+0xfa>
 80021bc:	230f      	movs	r3, #15
 80021be:	4013      	ands	r3, r2
 80021c0:	2b04      	cmp	r3, #4
 80021c2:	d000      	beq.n	80021c6 <__aeabi_d2f+0x72>
 80021c4:	3204      	adds	r2, #4
 80021c6:	2380      	movs	r3, #128	; 0x80
 80021c8:	04db      	lsls	r3, r3, #19
 80021ca:	4013      	ands	r3, r2
 80021cc:	d03f      	beq.n	800224e <__aeabi_d2f+0xfa>
 80021ce:	1c70      	adds	r0, r6, #1
 80021d0:	2efe      	cmp	r6, #254	; 0xfe
 80021d2:	d0d1      	beq.n	8002178 <__aeabi_d2f+0x24>
 80021d4:	0192      	lsls	r2, r2, #6
 80021d6:	0a54      	lsrs	r4, r2, #9
 80021d8:	b2c0      	uxtb	r0, r0
 80021da:	e7cf      	b.n	800217c <__aeabi_d2f+0x28>
 80021dc:	2000      	movs	r0, #0
 80021de:	2400      	movs	r4, #0
 80021e0:	e7cc      	b.n	800217c <__aeabi_d2f+0x28>
 80021e2:	0032      	movs	r2, r6
 80021e4:	3217      	adds	r2, #23
 80021e6:	db22      	blt.n	800222e <__aeabi_d2f+0xda>
 80021e8:	2080      	movs	r0, #128	; 0x80
 80021ea:	0400      	lsls	r0, r0, #16
 80021ec:	4320      	orrs	r0, r4
 80021ee:	241e      	movs	r4, #30
 80021f0:	1ba4      	subs	r4, r4, r6
 80021f2:	2c1f      	cmp	r4, #31
 80021f4:	dd1d      	ble.n	8002232 <__aeabi_d2f+0xde>
 80021f6:	2202      	movs	r2, #2
 80021f8:	4252      	negs	r2, r2
 80021fa:	1b96      	subs	r6, r2, r6
 80021fc:	0002      	movs	r2, r0
 80021fe:	40f2      	lsrs	r2, r6
 8002200:	0016      	movs	r6, r2
 8002202:	2c20      	cmp	r4, #32
 8002204:	d004      	beq.n	8002210 <__aeabi_d2f+0xbc>
 8002206:	4a15      	ldr	r2, [pc, #84]	; (800225c <__aeabi_d2f+0x108>)
 8002208:	4694      	mov	ip, r2
 800220a:	4463      	add	r3, ip
 800220c:	4098      	lsls	r0, r3
 800220e:	4305      	orrs	r5, r0
 8002210:	002a      	movs	r2, r5
 8002212:	1e53      	subs	r3, r2, #1
 8002214:	419a      	sbcs	r2, r3
 8002216:	4332      	orrs	r2, r6
 8002218:	2600      	movs	r6, #0
 800221a:	0753      	lsls	r3, r2, #29
 800221c:	d1ce      	bne.n	80021bc <__aeabi_d2f+0x68>
 800221e:	2480      	movs	r4, #128	; 0x80
 8002220:	0013      	movs	r3, r2
 8002222:	04e4      	lsls	r4, r4, #19
 8002224:	2001      	movs	r0, #1
 8002226:	4023      	ands	r3, r4
 8002228:	4222      	tst	r2, r4
 800222a:	d1d3      	bne.n	80021d4 <__aeabi_d2f+0x80>
 800222c:	e7b0      	b.n	8002190 <__aeabi_d2f+0x3c>
 800222e:	2300      	movs	r3, #0
 8002230:	e7ad      	b.n	800218e <__aeabi_d2f+0x3a>
 8002232:	4a0b      	ldr	r2, [pc, #44]	; (8002260 <__aeabi_d2f+0x10c>)
 8002234:	4694      	mov	ip, r2
 8002236:	002a      	movs	r2, r5
 8002238:	40e2      	lsrs	r2, r4
 800223a:	0014      	movs	r4, r2
 800223c:	002a      	movs	r2, r5
 800223e:	4463      	add	r3, ip
 8002240:	409a      	lsls	r2, r3
 8002242:	4098      	lsls	r0, r3
 8002244:	1e55      	subs	r5, r2, #1
 8002246:	41aa      	sbcs	r2, r5
 8002248:	4302      	orrs	r2, r0
 800224a:	4322      	orrs	r2, r4
 800224c:	e7e4      	b.n	8002218 <__aeabi_d2f+0xc4>
 800224e:	0033      	movs	r3, r6
 8002250:	e79e      	b.n	8002190 <__aeabi_d2f+0x3c>
 8002252:	46c0      	nop			; (mov r8, r8)
 8002254:	000007fe 	.word	0x000007fe
 8002258:	fffffc80 	.word	0xfffffc80
 800225c:	fffffca2 	.word	0xfffffca2
 8002260:	fffffc82 	.word	0xfffffc82

08002264 <__clzsi2>:
 8002264:	211c      	movs	r1, #28
 8002266:	2301      	movs	r3, #1
 8002268:	041b      	lsls	r3, r3, #16
 800226a:	4298      	cmp	r0, r3
 800226c:	d301      	bcc.n	8002272 <__clzsi2+0xe>
 800226e:	0c00      	lsrs	r0, r0, #16
 8002270:	3910      	subs	r1, #16
 8002272:	0a1b      	lsrs	r3, r3, #8
 8002274:	4298      	cmp	r0, r3
 8002276:	d301      	bcc.n	800227c <__clzsi2+0x18>
 8002278:	0a00      	lsrs	r0, r0, #8
 800227a:	3908      	subs	r1, #8
 800227c:	091b      	lsrs	r3, r3, #4
 800227e:	4298      	cmp	r0, r3
 8002280:	d301      	bcc.n	8002286 <__clzsi2+0x22>
 8002282:	0900      	lsrs	r0, r0, #4
 8002284:	3904      	subs	r1, #4
 8002286:	a202      	add	r2, pc, #8	; (adr r2, 8002290 <__clzsi2+0x2c>)
 8002288:	5c10      	ldrb	r0, [r2, r0]
 800228a:	1840      	adds	r0, r0, r1
 800228c:	4770      	bx	lr
 800228e:	46c0      	nop			; (mov r8, r8)
 8002290:	02020304 	.word	0x02020304
 8002294:	01010101 	.word	0x01010101
	...

080022a0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b084      	sub	sp, #16
 80022a4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80022a6:	f000 fb29 	bl	80028fc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80022aa:	f000 f827 	bl	80022fc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80022ae:	f000 f919 	bl	80024e4 <MX_GPIO_Init>
  MX_ADC_Init();
 80022b2:	f000 f88b 	bl	80023cc <MX_ADC_Init>
  MX_USART1_UART_Init();
 80022b6:	f000 f8e5 	bl	8002484 <MX_USART1_UART_Init>
	  //float voltage = raw * (3.3/4095); // This will convert binary value to a range of 0-3.3V


	  //Test: Set GPIO pin low

	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 80022ba:	2380      	movs	r3, #128	; 0x80
 80022bc:	005b      	lsls	r3, r3, #1
 80022be:	480c      	ldr	r0, [pc, #48]	; (80022f0 <main+0x50>)
 80022c0:	2200      	movs	r2, #0
 80022c2:	0019      	movs	r1, r3
 80022c4:	f001 f814 	bl	80032f0 <HAL_GPIO_WritePin>

	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_8);
 80022c8:	2380      	movs	r3, #128	; 0x80
 80022ca:	005b      	lsls	r3, r3, #1
 80022cc:	4a08      	ldr	r2, [pc, #32]	; (80022f0 <main+0x50>)
 80022ce:	0019      	movs	r1, r3
 80022d0:	0010      	movs	r0, r2
 80022d2:	f001 f82a 	bl	800332a <HAL_GPIO_TogglePin>

	  //sprintf(msg, "%f\r\n", raw); //This will fill the string msg with the voltage value



	  HAL_UART_Transmit(&huart1, (uint8_t *)time, sizeof(time), 300);
 80022d6:	2396      	movs	r3, #150	; 0x96
 80022d8:	005b      	lsls	r3, r3, #1
 80022da:	4906      	ldr	r1, [pc, #24]	; (80022f4 <main+0x54>)
 80022dc:	4806      	ldr	r0, [pc, #24]	; (80022f8 <main+0x58>)
 80022de:	221e      	movs	r2, #30
 80022e0:	f001 fddc 	bl	8003e9c <HAL_UART_Transmit>
	  //Add a delay

	  HAL_Delay(1000); //1 second delay
 80022e4:	23fa      	movs	r3, #250	; 0xfa
 80022e6:	009b      	lsls	r3, r3, #2
 80022e8:	0018      	movs	r0, r3
 80022ea:	f000 fb6b 	bl	80029c4 <HAL_Delay>
	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 80022ee:	e7e4      	b.n	80022ba <main+0x1a>
 80022f0:	48000800 	.word	0x48000800
 80022f4:	200001fc 	.word	0x200001fc
 80022f8:	2000025c 	.word	0x2000025c

080022fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80022fc:	b590      	push	{r4, r7, lr}
 80022fe:	b097      	sub	sp, #92	; 0x5c
 8002300:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002302:	2428      	movs	r4, #40	; 0x28
 8002304:	193b      	adds	r3, r7, r4
 8002306:	0018      	movs	r0, r3
 8002308:	2330      	movs	r3, #48	; 0x30
 800230a:	001a      	movs	r2, r3
 800230c:	2100      	movs	r1, #0
 800230e:	f002 f999 	bl	8004644 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002312:	2318      	movs	r3, #24
 8002314:	18fb      	adds	r3, r7, r3
 8002316:	0018      	movs	r0, r3
 8002318:	2310      	movs	r3, #16
 800231a:	001a      	movs	r2, r3
 800231c:	2100      	movs	r1, #0
 800231e:	f002 f991 	bl	8004644 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002322:	1d3b      	adds	r3, r7, #4
 8002324:	0018      	movs	r0, r3
 8002326:	2314      	movs	r3, #20
 8002328:	001a      	movs	r2, r3
 800232a:	2100      	movs	r1, #0
 800232c:	f002 f98a 	bl	8004644 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 8002330:	0021      	movs	r1, r4
 8002332:	187b      	adds	r3, r7, r1
 8002334:	2212      	movs	r2, #18
 8002336:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002338:	187b      	adds	r3, r7, r1
 800233a:	2201      	movs	r2, #1
 800233c:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 800233e:	187b      	adds	r3, r7, r1
 8002340:	2201      	movs	r2, #1
 8002342:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002344:	187b      	adds	r3, r7, r1
 8002346:	2210      	movs	r2, #16
 8002348:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSI14CalibrationValue = 16;
 800234a:	187b      	adds	r3, r7, r1
 800234c:	2210      	movs	r2, #16
 800234e:	619a      	str	r2, [r3, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002350:	187b      	adds	r3, r7, r1
 8002352:	2202      	movs	r2, #2
 8002354:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002356:	187b      	adds	r3, r7, r1
 8002358:	2200      	movs	r2, #0
 800235a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 800235c:	187b      	adds	r3, r7, r1
 800235e:	22a0      	movs	r2, #160	; 0xa0
 8002360:	0392      	lsls	r2, r2, #14
 8002362:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8002364:	187b      	adds	r3, r7, r1
 8002366:	2200      	movs	r2, #0
 8002368:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800236a:	187b      	adds	r3, r7, r1
 800236c:	0018      	movs	r0, r3
 800236e:	f000 fff7 	bl	8003360 <HAL_RCC_OscConfig>
 8002372:	1e03      	subs	r3, r0, #0
 8002374:	d001      	beq.n	800237a <SystemClock_Config+0x7e>
  {
    Error_Handler();
 8002376:	f000 f8ff 	bl	8002578 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800237a:	2118      	movs	r1, #24
 800237c:	187b      	adds	r3, r7, r1
 800237e:	2207      	movs	r2, #7
 8002380:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002382:	187b      	adds	r3, r7, r1
 8002384:	2202      	movs	r2, #2
 8002386:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002388:	187b      	adds	r3, r7, r1
 800238a:	2200      	movs	r2, #0
 800238c:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800238e:	187b      	adds	r3, r7, r1
 8002390:	2200      	movs	r2, #0
 8002392:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8002394:	187b      	adds	r3, r7, r1
 8002396:	2101      	movs	r1, #1
 8002398:	0018      	movs	r0, r3
 800239a:	f001 fafb 	bl	8003994 <HAL_RCC_ClockConfig>
 800239e:	1e03      	subs	r3, r0, #0
 80023a0:	d001      	beq.n	80023a6 <SystemClock_Config+0xaa>
  {
    Error_Handler();
 80023a2:	f000 f8e9 	bl	8002578 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80023a6:	1d3b      	adds	r3, r7, #4
 80023a8:	2201      	movs	r2, #1
 80023aa:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 80023ac:	1d3b      	adds	r3, r7, #4
 80023ae:	2200      	movs	r2, #0
 80023b0:	609a      	str	r2, [r3, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023b2:	1d3b      	adds	r3, r7, #4
 80023b4:	0018      	movs	r0, r3
 80023b6:	f001 fc3f 	bl	8003c38 <HAL_RCCEx_PeriphCLKConfig>
 80023ba:	1e03      	subs	r3, r0, #0
 80023bc:	d001      	beq.n	80023c2 <SystemClock_Config+0xc6>
  {
    Error_Handler();
 80023be:	f000 f8db 	bl	8002578 <Error_Handler>
  }
}
 80023c2:	46c0      	nop			; (mov r8, r8)
 80023c4:	46bd      	mov	sp, r7
 80023c6:	b017      	add	sp, #92	; 0x5c
 80023c8:	bd90      	pop	{r4, r7, pc}
	...

080023cc <MX_ADC_Init>:
  * @brief ADC Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC_Init(void)
{
 80023cc:	b580      	push	{r7, lr}
 80023ce:	b084      	sub	sp, #16
 80023d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC_Init 0 */

  /* USER CODE END ADC_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80023d2:	1d3b      	adds	r3, r7, #4
 80023d4:	0018      	movs	r0, r3
 80023d6:	230c      	movs	r3, #12
 80023d8:	001a      	movs	r2, r3
 80023da:	2100      	movs	r1, #0
 80023dc:	f002 f932 	bl	8004644 <memset>

  /* USER CODE END ADC_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc.Instance = ADC1;
 80023e0:	4b26      	ldr	r3, [pc, #152]	; (800247c <MX_ADC_Init+0xb0>)
 80023e2:	4a27      	ldr	r2, [pc, #156]	; (8002480 <MX_ADC_Init+0xb4>)
 80023e4:	601a      	str	r2, [r3, #0]
  hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80023e6:	4b25      	ldr	r3, [pc, #148]	; (800247c <MX_ADC_Init+0xb0>)
 80023e8:	2200      	movs	r2, #0
 80023ea:	605a      	str	r2, [r3, #4]
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 80023ec:	4b23      	ldr	r3, [pc, #140]	; (800247c <MX_ADC_Init+0xb0>)
 80023ee:	2200      	movs	r2, #0
 80023f0:	609a      	str	r2, [r3, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80023f2:	4b22      	ldr	r3, [pc, #136]	; (800247c <MX_ADC_Init+0xb0>)
 80023f4:	2200      	movs	r2, #0
 80023f6:	60da      	str	r2, [r3, #12]
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 80023f8:	4b20      	ldr	r3, [pc, #128]	; (800247c <MX_ADC_Init+0xb0>)
 80023fa:	2201      	movs	r2, #1
 80023fc:	611a      	str	r2, [r3, #16]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80023fe:	4b1f      	ldr	r3, [pc, #124]	; (800247c <MX_ADC_Init+0xb0>)
 8002400:	2204      	movs	r2, #4
 8002402:	615a      	str	r2, [r3, #20]
  hadc.Init.LowPowerAutoWait = DISABLE;
 8002404:	4b1d      	ldr	r3, [pc, #116]	; (800247c <MX_ADC_Init+0xb0>)
 8002406:	2200      	movs	r2, #0
 8002408:	761a      	strb	r2, [r3, #24]
  hadc.Init.LowPowerAutoPowerOff = DISABLE;
 800240a:	4b1c      	ldr	r3, [pc, #112]	; (800247c <MX_ADC_Init+0xb0>)
 800240c:	2200      	movs	r2, #0
 800240e:	765a      	strb	r2, [r3, #25]
  hadc.Init.ContinuousConvMode = DISABLE;
 8002410:	4b1a      	ldr	r3, [pc, #104]	; (800247c <MX_ADC_Init+0xb0>)
 8002412:	2200      	movs	r2, #0
 8002414:	769a      	strb	r2, [r3, #26]
  hadc.Init.DiscontinuousConvMode = DISABLE;
 8002416:	4b19      	ldr	r3, [pc, #100]	; (800247c <MX_ADC_Init+0xb0>)
 8002418:	2200      	movs	r2, #0
 800241a:	76da      	strb	r2, [r3, #27]
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800241c:	4b17      	ldr	r3, [pc, #92]	; (800247c <MX_ADC_Init+0xb0>)
 800241e:	22c2      	movs	r2, #194	; 0xc2
 8002420:	32ff      	adds	r2, #255	; 0xff
 8002422:	61da      	str	r2, [r3, #28]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8002424:	4b15      	ldr	r3, [pc, #84]	; (800247c <MX_ADC_Init+0xb0>)
 8002426:	2200      	movs	r2, #0
 8002428:	621a      	str	r2, [r3, #32]
  hadc.Init.DMAContinuousRequests = DISABLE;
 800242a:	4b14      	ldr	r3, [pc, #80]	; (800247c <MX_ADC_Init+0xb0>)
 800242c:	2224      	movs	r2, #36	; 0x24
 800242e:	2100      	movs	r1, #0
 8002430:	5499      	strb	r1, [r3, r2]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8002432:	4b12      	ldr	r3, [pc, #72]	; (800247c <MX_ADC_Init+0xb0>)
 8002434:	2201      	movs	r2, #1
 8002436:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 8002438:	4b10      	ldr	r3, [pc, #64]	; (800247c <MX_ADC_Init+0xb0>)
 800243a:	0018      	movs	r0, r3
 800243c:	f000 fae6 	bl	8002a0c <HAL_ADC_Init>
 8002440:	1e03      	subs	r3, r0, #0
 8002442:	d001      	beq.n	8002448 <MX_ADC_Init+0x7c>
  {
    Error_Handler();
 8002444:	f000 f898 	bl	8002578 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel to be converted.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8002448:	1d3b      	adds	r3, r7, #4
 800244a:	2200      	movs	r2, #0
 800244c:	601a      	str	r2, [r3, #0]
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 800244e:	1d3b      	adds	r3, r7, #4
 8002450:	2280      	movs	r2, #128	; 0x80
 8002452:	0152      	lsls	r2, r2, #5
 8002454:	605a      	str	r2, [r3, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002456:	1d3b      	adds	r3, r7, #4
 8002458:	2280      	movs	r2, #128	; 0x80
 800245a:	0552      	lsls	r2, r2, #21
 800245c:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 800245e:	1d3a      	adds	r2, r7, #4
 8002460:	4b06      	ldr	r3, [pc, #24]	; (800247c <MX_ADC_Init+0xb0>)
 8002462:	0011      	movs	r1, r2
 8002464:	0018      	movs	r0, r3
 8002466:	f000 fc11 	bl	8002c8c <HAL_ADC_ConfigChannel>
 800246a:	1e03      	subs	r3, r0, #0
 800246c:	d001      	beq.n	8002472 <MX_ADC_Init+0xa6>
  {
    Error_Handler();
 800246e:	f000 f883 	bl	8002578 <Error_Handler>
  }
  /* USER CODE BEGIN ADC_Init 2 */

  /* USER CODE END ADC_Init 2 */

}
 8002472:	46c0      	nop			; (mov r8, r8)
 8002474:	46bd      	mov	sp, r7
 8002476:	b004      	add	sp, #16
 8002478:	bd80      	pop	{r7, pc}
 800247a:	46c0      	nop			; (mov r8, r8)
 800247c:	2000021c 	.word	0x2000021c
 8002480:	40012400 	.word	0x40012400

08002484 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8002484:	b580      	push	{r7, lr}
 8002486:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002488:	4b14      	ldr	r3, [pc, #80]	; (80024dc <MX_USART1_UART_Init+0x58>)
 800248a:	4a15      	ldr	r2, [pc, #84]	; (80024e0 <MX_USART1_UART_Init+0x5c>)
 800248c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800248e:	4b13      	ldr	r3, [pc, #76]	; (80024dc <MX_USART1_UART_Init+0x58>)
 8002490:	22e1      	movs	r2, #225	; 0xe1
 8002492:	0252      	lsls	r2, r2, #9
 8002494:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002496:	4b11      	ldr	r3, [pc, #68]	; (80024dc <MX_USART1_UART_Init+0x58>)
 8002498:	2200      	movs	r2, #0
 800249a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800249c:	4b0f      	ldr	r3, [pc, #60]	; (80024dc <MX_USART1_UART_Init+0x58>)
 800249e:	2200      	movs	r2, #0
 80024a0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80024a2:	4b0e      	ldr	r3, [pc, #56]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024a4:	2200      	movs	r2, #0
 80024a6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80024a8:	4b0c      	ldr	r3, [pc, #48]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024aa:	220c      	movs	r2, #12
 80024ac:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80024ae:	4b0b      	ldr	r3, [pc, #44]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024b0:	2200      	movs	r2, #0
 80024b2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80024b4:	4b09      	ldr	r3, [pc, #36]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024b6:	2200      	movs	r2, #0
 80024b8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80024ba:	4b08      	ldr	r3, [pc, #32]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024bc:	2200      	movs	r2, #0
 80024be:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80024c0:	4b06      	ldr	r3, [pc, #24]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80024c6:	4b05      	ldr	r3, [pc, #20]	; (80024dc <MX_USART1_UART_Init+0x58>)
 80024c8:	0018      	movs	r0, r3
 80024ca:	f001 fc93 	bl	8003df4 <HAL_UART_Init>
 80024ce:	1e03      	subs	r3, r0, #0
 80024d0:	d001      	beq.n	80024d6 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 80024d2:	f000 f851 	bl	8002578 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80024d6:	46c0      	nop			; (mov r8, r8)
 80024d8:	46bd      	mov	sp, r7
 80024da:	bd80      	pop	{r7, pc}
 80024dc:	2000025c 	.word	0x2000025c
 80024e0:	40013800 	.word	0x40013800

080024e4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80024e4:	b590      	push	{r4, r7, lr}
 80024e6:	b089      	sub	sp, #36	; 0x24
 80024e8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ea:	240c      	movs	r4, #12
 80024ec:	193b      	adds	r3, r7, r4
 80024ee:	0018      	movs	r0, r3
 80024f0:	2314      	movs	r3, #20
 80024f2:	001a      	movs	r2, r3
 80024f4:	2100      	movs	r1, #0
 80024f6:	f002 f8a5 	bl	8004644 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80024fa:	4b1d      	ldr	r3, [pc, #116]	; (8002570 <MX_GPIO_Init+0x8c>)
 80024fc:	695a      	ldr	r2, [r3, #20]
 80024fe:	4b1c      	ldr	r3, [pc, #112]	; (8002570 <MX_GPIO_Init+0x8c>)
 8002500:	2180      	movs	r1, #128	; 0x80
 8002502:	0309      	lsls	r1, r1, #12
 8002504:	430a      	orrs	r2, r1
 8002506:	615a      	str	r2, [r3, #20]
 8002508:	4b19      	ldr	r3, [pc, #100]	; (8002570 <MX_GPIO_Init+0x8c>)
 800250a:	695a      	ldr	r2, [r3, #20]
 800250c:	2380      	movs	r3, #128	; 0x80
 800250e:	031b      	lsls	r3, r3, #12
 8002510:	4013      	ands	r3, r2
 8002512:	60bb      	str	r3, [r7, #8]
 8002514:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002516:	4b16      	ldr	r3, [pc, #88]	; (8002570 <MX_GPIO_Init+0x8c>)
 8002518:	695a      	ldr	r2, [r3, #20]
 800251a:	4b15      	ldr	r3, [pc, #84]	; (8002570 <MX_GPIO_Init+0x8c>)
 800251c:	2180      	movs	r1, #128	; 0x80
 800251e:	0289      	lsls	r1, r1, #10
 8002520:	430a      	orrs	r2, r1
 8002522:	615a      	str	r2, [r3, #20]
 8002524:	4b12      	ldr	r3, [pc, #72]	; (8002570 <MX_GPIO_Init+0x8c>)
 8002526:	695a      	ldr	r2, [r3, #20]
 8002528:	2380      	movs	r3, #128	; 0x80
 800252a:	029b      	lsls	r3, r3, #10
 800252c:	4013      	ands	r3, r2
 800252e:	607b      	str	r3, [r7, #4]
 8002530:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15|BLUE_LED_Pin|GREEN_LED_Pin, GPIO_PIN_RESET);
 8002532:	2383      	movs	r3, #131	; 0x83
 8002534:	021b      	lsls	r3, r3, #8
 8002536:	480f      	ldr	r0, [pc, #60]	; (8002574 <MX_GPIO_Init+0x90>)
 8002538:	2200      	movs	r2, #0
 800253a:	0019      	movs	r1, r3
 800253c:	f000 fed8 	bl	80032f0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC15 BLUE_LED_Pin GREEN_LED_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_15|BLUE_LED_Pin|GREEN_LED_Pin;
 8002540:	193b      	adds	r3, r7, r4
 8002542:	2283      	movs	r2, #131	; 0x83
 8002544:	0212      	lsls	r2, r2, #8
 8002546:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002548:	193b      	adds	r3, r7, r4
 800254a:	2201      	movs	r2, #1
 800254c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800254e:	193b      	adds	r3, r7, r4
 8002550:	2200      	movs	r2, #0
 8002552:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002554:	193b      	adds	r3, r7, r4
 8002556:	2200      	movs	r2, #0
 8002558:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800255a:	193b      	adds	r3, r7, r4
 800255c:	4a05      	ldr	r2, [pc, #20]	; (8002574 <MX_GPIO_Init+0x90>)
 800255e:	0019      	movs	r1, r3
 8002560:	0010      	movs	r0, r2
 8002562:	f000 fd55 	bl	8003010 <HAL_GPIO_Init>

}
 8002566:	46c0      	nop			; (mov r8, r8)
 8002568:	46bd      	mov	sp, r7
 800256a:	b009      	add	sp, #36	; 0x24
 800256c:	bd90      	pop	{r4, r7, pc}
 800256e:	46c0      	nop			; (mov r8, r8)
 8002570:	40021000 	.word	0x40021000
 8002574:	48000800 	.word	0x48000800

08002578 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002578:	b580      	push	{r7, lr}
 800257a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800257c:	b672      	cpsid	i
}
 800257e:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002580:	e7fe      	b.n	8002580 <Error_Handler+0x8>
	...

08002584 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	b082      	sub	sp, #8
 8002588:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800258a:	4b0f      	ldr	r3, [pc, #60]	; (80025c8 <HAL_MspInit+0x44>)
 800258c:	699a      	ldr	r2, [r3, #24]
 800258e:	4b0e      	ldr	r3, [pc, #56]	; (80025c8 <HAL_MspInit+0x44>)
 8002590:	2101      	movs	r1, #1
 8002592:	430a      	orrs	r2, r1
 8002594:	619a      	str	r2, [r3, #24]
 8002596:	4b0c      	ldr	r3, [pc, #48]	; (80025c8 <HAL_MspInit+0x44>)
 8002598:	699b      	ldr	r3, [r3, #24]
 800259a:	2201      	movs	r2, #1
 800259c:	4013      	ands	r3, r2
 800259e:	607b      	str	r3, [r7, #4]
 80025a0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80025a2:	4b09      	ldr	r3, [pc, #36]	; (80025c8 <HAL_MspInit+0x44>)
 80025a4:	69da      	ldr	r2, [r3, #28]
 80025a6:	4b08      	ldr	r3, [pc, #32]	; (80025c8 <HAL_MspInit+0x44>)
 80025a8:	2180      	movs	r1, #128	; 0x80
 80025aa:	0549      	lsls	r1, r1, #21
 80025ac:	430a      	orrs	r2, r1
 80025ae:	61da      	str	r2, [r3, #28]
 80025b0:	4b05      	ldr	r3, [pc, #20]	; (80025c8 <HAL_MspInit+0x44>)
 80025b2:	69da      	ldr	r2, [r3, #28]
 80025b4:	2380      	movs	r3, #128	; 0x80
 80025b6:	055b      	lsls	r3, r3, #21
 80025b8:	4013      	ands	r3, r2
 80025ba:	603b      	str	r3, [r7, #0]
 80025bc:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80025be:	46c0      	nop			; (mov r8, r8)
 80025c0:	46bd      	mov	sp, r7
 80025c2:	b002      	add	sp, #8
 80025c4:	bd80      	pop	{r7, pc}
 80025c6:	46c0      	nop			; (mov r8, r8)
 80025c8:	40021000 	.word	0x40021000

080025cc <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80025cc:	b590      	push	{r4, r7, lr}
 80025ce:	b08b      	sub	sp, #44	; 0x2c
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025d4:	2414      	movs	r4, #20
 80025d6:	193b      	adds	r3, r7, r4
 80025d8:	0018      	movs	r0, r3
 80025da:	2314      	movs	r3, #20
 80025dc:	001a      	movs	r2, r3
 80025de:	2100      	movs	r1, #0
 80025e0:	f002 f830 	bl	8004644 <memset>
  if(hadc->Instance==ADC1)
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	4a19      	ldr	r2, [pc, #100]	; (8002650 <HAL_ADC_MspInit+0x84>)
 80025ea:	4293      	cmp	r3, r2
 80025ec:	d12b      	bne.n	8002646 <HAL_ADC_MspInit+0x7a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80025ee:	4b19      	ldr	r3, [pc, #100]	; (8002654 <HAL_ADC_MspInit+0x88>)
 80025f0:	699a      	ldr	r2, [r3, #24]
 80025f2:	4b18      	ldr	r3, [pc, #96]	; (8002654 <HAL_ADC_MspInit+0x88>)
 80025f4:	2180      	movs	r1, #128	; 0x80
 80025f6:	0089      	lsls	r1, r1, #2
 80025f8:	430a      	orrs	r2, r1
 80025fa:	619a      	str	r2, [r3, #24]
 80025fc:	4b15      	ldr	r3, [pc, #84]	; (8002654 <HAL_ADC_MspInit+0x88>)
 80025fe:	699a      	ldr	r2, [r3, #24]
 8002600:	2380      	movs	r3, #128	; 0x80
 8002602:	009b      	lsls	r3, r3, #2
 8002604:	4013      	ands	r3, r2
 8002606:	613b      	str	r3, [r7, #16]
 8002608:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800260a:	4b12      	ldr	r3, [pc, #72]	; (8002654 <HAL_ADC_MspInit+0x88>)
 800260c:	695a      	ldr	r2, [r3, #20]
 800260e:	4b11      	ldr	r3, [pc, #68]	; (8002654 <HAL_ADC_MspInit+0x88>)
 8002610:	2180      	movs	r1, #128	; 0x80
 8002612:	0289      	lsls	r1, r1, #10
 8002614:	430a      	orrs	r2, r1
 8002616:	615a      	str	r2, [r3, #20]
 8002618:	4b0e      	ldr	r3, [pc, #56]	; (8002654 <HAL_ADC_MspInit+0x88>)
 800261a:	695a      	ldr	r2, [r3, #20]
 800261c:	2380      	movs	r3, #128	; 0x80
 800261e:	029b      	lsls	r3, r3, #10
 8002620:	4013      	ands	r3, r2
 8002622:	60fb      	str	r3, [r7, #12]
 8002624:	68fb      	ldr	r3, [r7, #12]
    /**ADC GPIO Configuration
    PA0     ------> ADC_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002626:	193b      	adds	r3, r7, r4
 8002628:	2201      	movs	r2, #1
 800262a:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800262c:	193b      	adds	r3, r7, r4
 800262e:	2203      	movs	r2, #3
 8002630:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002632:	193b      	adds	r3, r7, r4
 8002634:	2200      	movs	r2, #0
 8002636:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002638:	193a      	adds	r2, r7, r4
 800263a:	2390      	movs	r3, #144	; 0x90
 800263c:	05db      	lsls	r3, r3, #23
 800263e:	0011      	movs	r1, r2
 8002640:	0018      	movs	r0, r3
 8002642:	f000 fce5 	bl	8003010 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8002646:	46c0      	nop			; (mov r8, r8)
 8002648:	46bd      	mov	sp, r7
 800264a:	b00b      	add	sp, #44	; 0x2c
 800264c:	bd90      	pop	{r4, r7, pc}
 800264e:	46c0      	nop			; (mov r8, r8)
 8002650:	40012400 	.word	0x40012400
 8002654:	40021000 	.word	0x40021000

08002658 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002658:	b590      	push	{r4, r7, lr}
 800265a:	b08b      	sub	sp, #44	; 0x2c
 800265c:	af00      	add	r7, sp, #0
 800265e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002660:	2414      	movs	r4, #20
 8002662:	193b      	adds	r3, r7, r4
 8002664:	0018      	movs	r0, r3
 8002666:	2314      	movs	r3, #20
 8002668:	001a      	movs	r2, r3
 800266a:	2100      	movs	r1, #0
 800266c:	f001 ffea 	bl	8004644 <memset>
  if(huart->Instance==USART1)
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	4a1d      	ldr	r2, [pc, #116]	; (80026ec <HAL_UART_MspInit+0x94>)
 8002676:	4293      	cmp	r3, r2
 8002678:	d133      	bne.n	80026e2 <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800267a:	4b1d      	ldr	r3, [pc, #116]	; (80026f0 <HAL_UART_MspInit+0x98>)
 800267c:	699a      	ldr	r2, [r3, #24]
 800267e:	4b1c      	ldr	r3, [pc, #112]	; (80026f0 <HAL_UART_MspInit+0x98>)
 8002680:	2180      	movs	r1, #128	; 0x80
 8002682:	01c9      	lsls	r1, r1, #7
 8002684:	430a      	orrs	r2, r1
 8002686:	619a      	str	r2, [r3, #24]
 8002688:	4b19      	ldr	r3, [pc, #100]	; (80026f0 <HAL_UART_MspInit+0x98>)
 800268a:	699a      	ldr	r2, [r3, #24]
 800268c:	2380      	movs	r3, #128	; 0x80
 800268e:	01db      	lsls	r3, r3, #7
 8002690:	4013      	ands	r3, r2
 8002692:	613b      	str	r3, [r7, #16]
 8002694:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002696:	4b16      	ldr	r3, [pc, #88]	; (80026f0 <HAL_UART_MspInit+0x98>)
 8002698:	695a      	ldr	r2, [r3, #20]
 800269a:	4b15      	ldr	r3, [pc, #84]	; (80026f0 <HAL_UART_MspInit+0x98>)
 800269c:	2180      	movs	r1, #128	; 0x80
 800269e:	0289      	lsls	r1, r1, #10
 80026a0:	430a      	orrs	r2, r1
 80026a2:	615a      	str	r2, [r3, #20]
 80026a4:	4b12      	ldr	r3, [pc, #72]	; (80026f0 <HAL_UART_MspInit+0x98>)
 80026a6:	695a      	ldr	r2, [r3, #20]
 80026a8:	2380      	movs	r3, #128	; 0x80
 80026aa:	029b      	lsls	r3, r3, #10
 80026ac:	4013      	ands	r3, r2
 80026ae:	60fb      	str	r3, [r7, #12]
 80026b0:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80026b2:	193b      	adds	r3, r7, r4
 80026b4:	22c0      	movs	r2, #192	; 0xc0
 80026b6:	00d2      	lsls	r2, r2, #3
 80026b8:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026ba:	0021      	movs	r1, r4
 80026bc:	187b      	adds	r3, r7, r1
 80026be:	2202      	movs	r2, #2
 80026c0:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026c2:	187b      	adds	r3, r7, r1
 80026c4:	2200      	movs	r2, #0
 80026c6:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80026c8:	187b      	adds	r3, r7, r1
 80026ca:	2203      	movs	r2, #3
 80026cc:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 80026ce:	187b      	adds	r3, r7, r1
 80026d0:	2201      	movs	r2, #1
 80026d2:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026d4:	187a      	adds	r2, r7, r1
 80026d6:	2390      	movs	r3, #144	; 0x90
 80026d8:	05db      	lsls	r3, r3, #23
 80026da:	0011      	movs	r1, r2
 80026dc:	0018      	movs	r0, r3
 80026de:	f000 fc97 	bl	8003010 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 80026e2:	46c0      	nop			; (mov r8, r8)
 80026e4:	46bd      	mov	sp, r7
 80026e6:	b00b      	add	sp, #44	; 0x2c
 80026e8:	bd90      	pop	{r4, r7, pc}
 80026ea:	46c0      	nop			; (mov r8, r8)
 80026ec:	40013800 	.word	0x40013800
 80026f0:	40021000 	.word	0x40021000

080026f4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80026f8:	e7fe      	b.n	80026f8 <NMI_Handler+0x4>

080026fa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80026fa:	b580      	push	{r7, lr}
 80026fc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80026fe:	e7fe      	b.n	80026fe <HardFault_Handler+0x4>

08002700 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002700:	b580      	push	{r7, lr}
 8002702:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002704:	46c0      	nop			; (mov r8, r8)
 8002706:	46bd      	mov	sp, r7
 8002708:	bd80      	pop	{r7, pc}

0800270a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800270a:	b580      	push	{r7, lr}
 800270c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800270e:	46c0      	nop			; (mov r8, r8)
 8002710:	46bd      	mov	sp, r7
 8002712:	bd80      	pop	{r7, pc}

08002714 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002714:	b580      	push	{r7, lr}
 8002716:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002718:	f000 f938 	bl	800298c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800271c:	46c0      	nop			; (mov r8, r8)
 800271e:	46bd      	mov	sp, r7
 8002720:	bd80      	pop	{r7, pc}

08002722 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002722:	b580      	push	{r7, lr}
 8002724:	af00      	add	r7, sp, #0
  return 1;
 8002726:	2301      	movs	r3, #1
}
 8002728:	0018      	movs	r0, r3
 800272a:	46bd      	mov	sp, r7
 800272c:	bd80      	pop	{r7, pc}

0800272e <_kill>:

int _kill(int pid, int sig)
{
 800272e:	b580      	push	{r7, lr}
 8002730:	b082      	sub	sp, #8
 8002732:	af00      	add	r7, sp, #0
 8002734:	6078      	str	r0, [r7, #4]
 8002736:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002738:	f001 ff5a 	bl	80045f0 <__errno>
 800273c:	0003      	movs	r3, r0
 800273e:	2216      	movs	r2, #22
 8002740:	601a      	str	r2, [r3, #0]
  return -1;
 8002742:	2301      	movs	r3, #1
 8002744:	425b      	negs	r3, r3
}
 8002746:	0018      	movs	r0, r3
 8002748:	46bd      	mov	sp, r7
 800274a:	b002      	add	sp, #8
 800274c:	bd80      	pop	{r7, pc}

0800274e <_exit>:

void _exit (int status)
{
 800274e:	b580      	push	{r7, lr}
 8002750:	b082      	sub	sp, #8
 8002752:	af00      	add	r7, sp, #0
 8002754:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002756:	2301      	movs	r3, #1
 8002758:	425a      	negs	r2, r3
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	0011      	movs	r1, r2
 800275e:	0018      	movs	r0, r3
 8002760:	f7ff ffe5 	bl	800272e <_kill>
  while (1) {}    /* Make sure we hang here */
 8002764:	e7fe      	b.n	8002764 <_exit+0x16>

08002766 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002766:	b580      	push	{r7, lr}
 8002768:	b086      	sub	sp, #24
 800276a:	af00      	add	r7, sp, #0
 800276c:	60f8      	str	r0, [r7, #12]
 800276e:	60b9      	str	r1, [r7, #8]
 8002770:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002772:	2300      	movs	r3, #0
 8002774:	617b      	str	r3, [r7, #20]
 8002776:	e00a      	b.n	800278e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002778:	e000      	b.n	800277c <_read+0x16>
 800277a:	bf00      	nop
 800277c:	0001      	movs	r1, r0
 800277e:	68bb      	ldr	r3, [r7, #8]
 8002780:	1c5a      	adds	r2, r3, #1
 8002782:	60ba      	str	r2, [r7, #8]
 8002784:	b2ca      	uxtb	r2, r1
 8002786:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002788:	697b      	ldr	r3, [r7, #20]
 800278a:	3301      	adds	r3, #1
 800278c:	617b      	str	r3, [r7, #20]
 800278e:	697a      	ldr	r2, [r7, #20]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	429a      	cmp	r2, r3
 8002794:	dbf0      	blt.n	8002778 <_read+0x12>
  }

  return len;
 8002796:	687b      	ldr	r3, [r7, #4]
}
 8002798:	0018      	movs	r0, r3
 800279a:	46bd      	mov	sp, r7
 800279c:	b006      	add	sp, #24
 800279e:	bd80      	pop	{r7, pc}

080027a0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80027a0:	b580      	push	{r7, lr}
 80027a2:	b086      	sub	sp, #24
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	60f8      	str	r0, [r7, #12]
 80027a8:	60b9      	str	r1, [r7, #8]
 80027aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027ac:	2300      	movs	r3, #0
 80027ae:	617b      	str	r3, [r7, #20]
 80027b0:	e009      	b.n	80027c6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80027b2:	68bb      	ldr	r3, [r7, #8]
 80027b4:	1c5a      	adds	r2, r3, #1
 80027b6:	60ba      	str	r2, [r7, #8]
 80027b8:	781b      	ldrb	r3, [r3, #0]
 80027ba:	0018      	movs	r0, r3
 80027bc:	e000      	b.n	80027c0 <_write+0x20>
 80027be:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027c0:	697b      	ldr	r3, [r7, #20]
 80027c2:	3301      	adds	r3, #1
 80027c4:	617b      	str	r3, [r7, #20]
 80027c6:	697a      	ldr	r2, [r7, #20]
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	429a      	cmp	r2, r3
 80027cc:	dbf1      	blt.n	80027b2 <_write+0x12>
  }
  return len;
 80027ce:	687b      	ldr	r3, [r7, #4]
}
 80027d0:	0018      	movs	r0, r3
 80027d2:	46bd      	mov	sp, r7
 80027d4:	b006      	add	sp, #24
 80027d6:	bd80      	pop	{r7, pc}

080027d8 <_close>:

int _close(int file)
{
 80027d8:	b580      	push	{r7, lr}
 80027da:	b082      	sub	sp, #8
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80027e0:	2301      	movs	r3, #1
 80027e2:	425b      	negs	r3, r3
}
 80027e4:	0018      	movs	r0, r3
 80027e6:	46bd      	mov	sp, r7
 80027e8:	b002      	add	sp, #8
 80027ea:	bd80      	pop	{r7, pc}

080027ec <_fstat>:


int _fstat(int file, struct stat *st)
{
 80027ec:	b580      	push	{r7, lr}
 80027ee:	b082      	sub	sp, #8
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	6078      	str	r0, [r7, #4]
 80027f4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80027f6:	683b      	ldr	r3, [r7, #0]
 80027f8:	2280      	movs	r2, #128	; 0x80
 80027fa:	0192      	lsls	r2, r2, #6
 80027fc:	605a      	str	r2, [r3, #4]
  return 0;
 80027fe:	2300      	movs	r3, #0
}
 8002800:	0018      	movs	r0, r3
 8002802:	46bd      	mov	sp, r7
 8002804:	b002      	add	sp, #8
 8002806:	bd80      	pop	{r7, pc}

08002808 <_isatty>:

int _isatty(int file)
{
 8002808:	b580      	push	{r7, lr}
 800280a:	b082      	sub	sp, #8
 800280c:	af00      	add	r7, sp, #0
 800280e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002810:	2301      	movs	r3, #1
}
 8002812:	0018      	movs	r0, r3
 8002814:	46bd      	mov	sp, r7
 8002816:	b002      	add	sp, #8
 8002818:	bd80      	pop	{r7, pc}

0800281a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800281a:	b580      	push	{r7, lr}
 800281c:	b084      	sub	sp, #16
 800281e:	af00      	add	r7, sp, #0
 8002820:	60f8      	str	r0, [r7, #12]
 8002822:	60b9      	str	r1, [r7, #8]
 8002824:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002826:	2300      	movs	r3, #0
}
 8002828:	0018      	movs	r0, r3
 800282a:	46bd      	mov	sp, r7
 800282c:	b004      	add	sp, #16
 800282e:	bd80      	pop	{r7, pc}

08002830 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002830:	b580      	push	{r7, lr}
 8002832:	b086      	sub	sp, #24
 8002834:	af00      	add	r7, sp, #0
 8002836:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002838:	4a14      	ldr	r2, [pc, #80]	; (800288c <_sbrk+0x5c>)
 800283a:	4b15      	ldr	r3, [pc, #84]	; (8002890 <_sbrk+0x60>)
 800283c:	1ad3      	subs	r3, r2, r3
 800283e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002840:	697b      	ldr	r3, [r7, #20]
 8002842:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002844:	4b13      	ldr	r3, [pc, #76]	; (8002894 <_sbrk+0x64>)
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	2b00      	cmp	r3, #0
 800284a:	d102      	bne.n	8002852 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800284c:	4b11      	ldr	r3, [pc, #68]	; (8002894 <_sbrk+0x64>)
 800284e:	4a12      	ldr	r2, [pc, #72]	; (8002898 <_sbrk+0x68>)
 8002850:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002852:	4b10      	ldr	r3, [pc, #64]	; (8002894 <_sbrk+0x64>)
 8002854:	681a      	ldr	r2, [r3, #0]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	18d3      	adds	r3, r2, r3
 800285a:	693a      	ldr	r2, [r7, #16]
 800285c:	429a      	cmp	r2, r3
 800285e:	d207      	bcs.n	8002870 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002860:	f001 fec6 	bl	80045f0 <__errno>
 8002864:	0003      	movs	r3, r0
 8002866:	220c      	movs	r2, #12
 8002868:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800286a:	2301      	movs	r3, #1
 800286c:	425b      	negs	r3, r3
 800286e:	e009      	b.n	8002884 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002870:	4b08      	ldr	r3, [pc, #32]	; (8002894 <_sbrk+0x64>)
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002876:	4b07      	ldr	r3, [pc, #28]	; (8002894 <_sbrk+0x64>)
 8002878:	681a      	ldr	r2, [r3, #0]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	18d2      	adds	r2, r2, r3
 800287e:	4b05      	ldr	r3, [pc, #20]	; (8002894 <_sbrk+0x64>)
 8002880:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002882:	68fb      	ldr	r3, [r7, #12]
}
 8002884:	0018      	movs	r0, r3
 8002886:	46bd      	mov	sp, r7
 8002888:	b006      	add	sp, #24
 800288a:	bd80      	pop	{r7, pc}
 800288c:	20002000 	.word	0x20002000
 8002890:	00000400 	.word	0x00000400
 8002894:	200002e0 	.word	0x200002e0
 8002898:	200002f8 	.word	0x200002f8

0800289c <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800289c:	b580      	push	{r7, lr}
 800289e:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80028a0:	46c0      	nop			; (mov r8, r8)
 80028a2:	46bd      	mov	sp, r7
 80028a4:	bd80      	pop	{r7, pc}
	...

080028a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80028a8:	480d      	ldr	r0, [pc, #52]	; (80028e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80028aa:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80028ac:	480d      	ldr	r0, [pc, #52]	; (80028e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80028ae:	490e      	ldr	r1, [pc, #56]	; (80028e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80028b0:	4a0e      	ldr	r2, [pc, #56]	; (80028ec <LoopForever+0xe>)
  movs r3, #0
 80028b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80028b4:	e002      	b.n	80028bc <LoopCopyDataInit>

080028b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80028b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80028b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80028ba:	3304      	adds	r3, #4

080028bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80028bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80028be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80028c0:	d3f9      	bcc.n	80028b6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80028c2:	4a0b      	ldr	r2, [pc, #44]	; (80028f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80028c4:	4c0b      	ldr	r4, [pc, #44]	; (80028f4 <LoopForever+0x16>)
  movs r3, #0
 80028c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80028c8:	e001      	b.n	80028ce <LoopFillZerobss>

080028ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80028ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80028cc:	3204      	adds	r2, #4

080028ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80028ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80028d0:	d3fb      	bcc.n	80028ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80028d2:	f7ff ffe3 	bl	800289c <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80028d6:	f001 fe91 	bl	80045fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80028da:	f7ff fce1 	bl	80022a0 <main>

080028de <LoopForever>:

LoopForever:
    b LoopForever
 80028de:	e7fe      	b.n	80028de <LoopForever>
  ldr   r0, =_estack
 80028e0:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80028e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80028e8:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 80028ec:	0800961c 	.word	0x0800961c
  ldr r2, =_sbss
 80028f0:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 80028f4:	200002f8 	.word	0x200002f8

080028f8 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80028f8:	e7fe      	b.n	80028f8 <ADC1_COMP_IRQHandler>
	...

080028fc <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80028fc:	b580      	push	{r7, lr}
 80028fe:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002900:	4b07      	ldr	r3, [pc, #28]	; (8002920 <HAL_Init+0x24>)
 8002902:	681a      	ldr	r2, [r3, #0]
 8002904:	4b06      	ldr	r3, [pc, #24]	; (8002920 <HAL_Init+0x24>)
 8002906:	2110      	movs	r1, #16
 8002908:	430a      	orrs	r2, r1
 800290a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 800290c:	2003      	movs	r0, #3
 800290e:	f000 f809 	bl	8002924 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002912:	f7ff fe37 	bl	8002584 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002916:	2300      	movs	r3, #0
}
 8002918:	0018      	movs	r0, r3
 800291a:	46bd      	mov	sp, r7
 800291c:	bd80      	pop	{r7, pc}
 800291e:	46c0      	nop			; (mov r8, r8)
 8002920:	40022000 	.word	0x40022000

08002924 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002924:	b590      	push	{r4, r7, lr}
 8002926:	b083      	sub	sp, #12
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800292c:	4b14      	ldr	r3, [pc, #80]	; (8002980 <HAL_InitTick+0x5c>)
 800292e:	681c      	ldr	r4, [r3, #0]
 8002930:	4b14      	ldr	r3, [pc, #80]	; (8002984 <HAL_InitTick+0x60>)
 8002932:	781b      	ldrb	r3, [r3, #0]
 8002934:	0019      	movs	r1, r3
 8002936:	23fa      	movs	r3, #250	; 0xfa
 8002938:	0098      	lsls	r0, r3, #2
 800293a:	f7fd fc01 	bl	8000140 <__udivsi3>
 800293e:	0003      	movs	r3, r0
 8002940:	0019      	movs	r1, r3
 8002942:	0020      	movs	r0, r4
 8002944:	f7fd fbfc 	bl	8000140 <__udivsi3>
 8002948:	0003      	movs	r3, r0
 800294a:	0018      	movs	r0, r3
 800294c:	f000 fb53 	bl	8002ff6 <HAL_SYSTICK_Config>
 8002950:	1e03      	subs	r3, r0, #0
 8002952:	d001      	beq.n	8002958 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8002954:	2301      	movs	r3, #1
 8002956:	e00f      	b.n	8002978 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	2b03      	cmp	r3, #3
 800295c:	d80b      	bhi.n	8002976 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800295e:	6879      	ldr	r1, [r7, #4]
 8002960:	2301      	movs	r3, #1
 8002962:	425b      	negs	r3, r3
 8002964:	2200      	movs	r2, #0
 8002966:	0018      	movs	r0, r3
 8002968:	f000 fb30 	bl	8002fcc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800296c:	4b06      	ldr	r3, [pc, #24]	; (8002988 <HAL_InitTick+0x64>)
 800296e:	687a      	ldr	r2, [r7, #4]
 8002970:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8002972:	2300      	movs	r3, #0
 8002974:	e000      	b.n	8002978 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8002976:	2301      	movs	r3, #1
}
 8002978:	0018      	movs	r0, r3
 800297a:	46bd      	mov	sp, r7
 800297c:	b003      	add	sp, #12
 800297e:	bd90      	pop	{r4, r7, pc}
 8002980:	20000000 	.word	0x20000000
 8002984:	20000008 	.word	0x20000008
 8002988:	20000004 	.word	0x20000004

0800298c <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800298c:	b580      	push	{r7, lr}
 800298e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002990:	4b05      	ldr	r3, [pc, #20]	; (80029a8 <HAL_IncTick+0x1c>)
 8002992:	781b      	ldrb	r3, [r3, #0]
 8002994:	001a      	movs	r2, r3
 8002996:	4b05      	ldr	r3, [pc, #20]	; (80029ac <HAL_IncTick+0x20>)
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	18d2      	adds	r2, r2, r3
 800299c:	4b03      	ldr	r3, [pc, #12]	; (80029ac <HAL_IncTick+0x20>)
 800299e:	601a      	str	r2, [r3, #0]
}
 80029a0:	46c0      	nop			; (mov r8, r8)
 80029a2:	46bd      	mov	sp, r7
 80029a4:	bd80      	pop	{r7, pc}
 80029a6:	46c0      	nop			; (mov r8, r8)
 80029a8:	20000008 	.word	0x20000008
 80029ac:	200002e4 	.word	0x200002e4

080029b0 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80029b0:	b580      	push	{r7, lr}
 80029b2:	af00      	add	r7, sp, #0
  return uwTick;
 80029b4:	4b02      	ldr	r3, [pc, #8]	; (80029c0 <HAL_GetTick+0x10>)
 80029b6:	681b      	ldr	r3, [r3, #0]
}
 80029b8:	0018      	movs	r0, r3
 80029ba:	46bd      	mov	sp, r7
 80029bc:	bd80      	pop	{r7, pc}
 80029be:	46c0      	nop			; (mov r8, r8)
 80029c0:	200002e4 	.word	0x200002e4

080029c4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80029c4:	b580      	push	{r7, lr}
 80029c6:	b084      	sub	sp, #16
 80029c8:	af00      	add	r7, sp, #0
 80029ca:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80029cc:	f7ff fff0 	bl	80029b0 <HAL_GetTick>
 80029d0:	0003      	movs	r3, r0
 80029d2:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80029d8:	68fb      	ldr	r3, [r7, #12]
 80029da:	3301      	adds	r3, #1
 80029dc:	d005      	beq.n	80029ea <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80029de:	4b0a      	ldr	r3, [pc, #40]	; (8002a08 <HAL_Delay+0x44>)
 80029e0:	781b      	ldrb	r3, [r3, #0]
 80029e2:	001a      	movs	r2, r3
 80029e4:	68fb      	ldr	r3, [r7, #12]
 80029e6:	189b      	adds	r3, r3, r2
 80029e8:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 80029ea:	46c0      	nop			; (mov r8, r8)
 80029ec:	f7ff ffe0 	bl	80029b0 <HAL_GetTick>
 80029f0:	0002      	movs	r2, r0
 80029f2:	68bb      	ldr	r3, [r7, #8]
 80029f4:	1ad3      	subs	r3, r2, r3
 80029f6:	68fa      	ldr	r2, [r7, #12]
 80029f8:	429a      	cmp	r2, r3
 80029fa:	d8f7      	bhi.n	80029ec <HAL_Delay+0x28>
  {
  }
}
 80029fc:	46c0      	nop			; (mov r8, r8)
 80029fe:	46c0      	nop			; (mov r8, r8)
 8002a00:	46bd      	mov	sp, r7
 8002a02:	b004      	add	sp, #16
 8002a04:	bd80      	pop	{r7, pc}
 8002a06:	46c0      	nop			; (mov r8, r8)
 8002a08:	20000008 	.word	0x20000008

08002a0c <HAL_ADC_Init>:
  *         of structure "ADC_InitTypeDef".
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002a0c:	b580      	push	{r7, lr}
 8002a0e:	b084      	sub	sp, #16
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002a14:	230f      	movs	r3, #15
 8002a16:	18fb      	adds	r3, r7, r3
 8002a18:	2200      	movs	r2, #0
 8002a1a:	701a      	strb	r2, [r3, #0]
  uint32_t tmpCFGR1 = 0U;
 8002a1c:	2300      	movs	r3, #0
 8002a1e:	60bb      	str	r3, [r7, #8]

  /* Check ADC handle */
  if(hadc == NULL)
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d101      	bne.n	8002a2a <HAL_ADC_Init+0x1e>
  {
    return HAL_ERROR;
 8002a26:	2301      	movs	r3, #1
 8002a28:	e125      	b.n	8002c76 <HAL_ADC_Init+0x26a>
  /* Refer to header of this file for more details on clock enabling procedure*/
  
  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d10a      	bne.n	8002a48 <HAL_ADC_Init+0x3c>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	2200      	movs	r2, #0
 8002a36:	63da      	str	r2, [r3, #60]	; 0x3c
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	2234      	movs	r2, #52	; 0x34
 8002a3c:	2100      	movs	r1, #0
 8002a3e:	5499      	strb	r1, [r3, r2]
    
    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	0018      	movs	r0, r3
 8002a44:	f7ff fdc2 	bl	80025cc <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */ 
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a4c:	2210      	movs	r2, #16
 8002a4e:	4013      	ands	r3, r2
 8002a50:	d000      	beq.n	8002a54 <HAL_ADC_Init+0x48>
 8002a52:	e103      	b.n	8002c5c <HAL_ADC_Init+0x250>
 8002a54:	230f      	movs	r3, #15
 8002a56:	18fb      	adds	r3, r7, r3
 8002a58:	781b      	ldrb	r3, [r3, #0]
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d000      	beq.n	8002a60 <HAL_ADC_Init+0x54>
 8002a5e:	e0fd      	b.n	8002c5c <HAL_ADC_Init+0x250>
      (tmp_hal_status == HAL_OK)                                &&
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	689b      	ldr	r3, [r3, #8]
 8002a66:	2204      	movs	r2, #4
 8002a68:	4013      	ands	r3, r2
      (tmp_hal_status == HAL_OK)                                &&
 8002a6a:	d000      	beq.n	8002a6e <HAL_ADC_Init+0x62>
 8002a6c:	e0f6      	b.n	8002c5c <HAL_ADC_Init+0x250>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a72:	4a83      	ldr	r2, [pc, #524]	; (8002c80 <HAL_ADC_Init+0x274>)
 8002a74:	4013      	ands	r3, r2
 8002a76:	2202      	movs	r2, #2
 8002a78:	431a      	orrs	r2, r3
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	639a      	str	r2, [r3, #56]	; 0x38
    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - ADC clock mode                                                      */
    /*  - ADC clock prescaler                                                 */
    /*  - ADC resolution                                                      */
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	689b      	ldr	r3, [r3, #8]
 8002a84:	2203      	movs	r2, #3
 8002a86:	4013      	ands	r3, r2
 8002a88:	2b01      	cmp	r3, #1
 8002a8a:	d112      	bne.n	8002ab2 <HAL_ADC_Init+0xa6>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	2201      	movs	r2, #1
 8002a94:	4013      	ands	r3, r2
 8002a96:	2b01      	cmp	r3, #1
 8002a98:	d009      	beq.n	8002aae <HAL_ADC_Init+0xa2>
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	68da      	ldr	r2, [r3, #12]
 8002aa0:	2380      	movs	r3, #128	; 0x80
 8002aa2:	021b      	lsls	r3, r3, #8
 8002aa4:	401a      	ands	r2, r3
 8002aa6:	2380      	movs	r3, #128	; 0x80
 8002aa8:	021b      	lsls	r3, r3, #8
 8002aaa:	429a      	cmp	r2, r3
 8002aac:	d101      	bne.n	8002ab2 <HAL_ADC_Init+0xa6>
 8002aae:	2301      	movs	r3, #1
 8002ab0:	e000      	b.n	8002ab4 <HAL_ADC_Init+0xa8>
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d116      	bne.n	8002ae6 <HAL_ADC_Init+0xda>
      /* parameters):                                                         */
      /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
      /*     (set into HAL_ADC_ConfigChannel() )                              */
     
      /* Configuration of ADC resolution                                      */
      MODIFY_REG(hadc->Instance->CFGR1,
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	68db      	ldr	r3, [r3, #12]
 8002abe:	2218      	movs	r2, #24
 8002ac0:	4393      	bics	r3, r2
 8002ac2:	0019      	movs	r1, r3
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	689a      	ldr	r2, [r3, #8]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	430a      	orrs	r2, r1
 8002ace:	60da      	str	r2, [r3, #12]
                 ADC_CFGR1_RES        ,
                 hadc->Init.Resolution );
      
      /* Configuration of ADC clock mode: clock source AHB or HSI with        */
      /* selectable prescaler                                                 */
      MODIFY_REG(hadc->Instance->CFGR2    ,
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	691b      	ldr	r3, [r3, #16]
 8002ad6:	009b      	lsls	r3, r3, #2
 8002ad8:	0899      	lsrs	r1, r3, #2
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	685a      	ldr	r2, [r3, #4]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	430a      	orrs	r2, r1
 8002ae4:	611a      	str	r2, [r3, #16]
    /*  - external trigger polarity                                           */
    /*  - data alignment                                                      */
    /*  - resolution                                                          */
    /*  - scan direction                                                      */
    /*  - DMA continuous request                                              */
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	68da      	ldr	r2, [r3, #12]
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	4964      	ldr	r1, [pc, #400]	; (8002c84 <HAL_ADC_Init+0x278>)
 8002af2:	400a      	ands	r2, r1
 8002af4:	60da      	str	r2, [r3, #12]
                                ADC_CFGR1_EXTEN   |
                                ADC_CFGR1_ALIGN   |
                                ADC_CFGR1_SCANDIR |
                                ADC_CFGR1_DMACFG   );

    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	7e1b      	ldrb	r3, [r3, #24]
 8002afa:	039a      	lsls	r2, r3, #14
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	7e5b      	ldrb	r3, [r3, #25]
 8002b00:	03db      	lsls	r3, r3, #15
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002b02:	431a      	orrs	r2, r3
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	7e9b      	ldrb	r3, [r3, #26]
 8002b08:	035b      	lsls	r3, r3, #13
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002b0a:	431a      	orrs	r2, r3
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b10:	2b01      	cmp	r3, #1
 8002b12:	d002      	beq.n	8002b1a <HAL_ADC_Init+0x10e>
 8002b14:	2380      	movs	r3, #128	; 0x80
 8002b16:	015b      	lsls	r3, r3, #5
 8002b18:	e000      	b.n	8002b1c <HAL_ADC_Init+0x110>
 8002b1a:	2300      	movs	r3, #0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002b1c:	431a      	orrs	r2, r3
                 hadc->Init.DataAlign                                             |
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	68db      	ldr	r3, [r3, #12]
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002b22:	431a      	orrs	r2, r3
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	691b      	ldr	r3, [r3, #16]
 8002b28:	2b02      	cmp	r3, #2
 8002b2a:	d101      	bne.n	8002b30 <HAL_ADC_Init+0x124>
 8002b2c:	2304      	movs	r3, #4
 8002b2e:	e000      	b.n	8002b32 <HAL_ADC_Init+0x126>
 8002b30:	2300      	movs	r3, #0
                 hadc->Init.DataAlign                                             |
 8002b32:	431a      	orrs	r2, r3
                 ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2124      	movs	r1, #36	; 0x24
 8002b38:	5c5b      	ldrb	r3, [r3, r1]
 8002b3a:	005b      	lsls	r3, r3, #1
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002b3c:	4313      	orrs	r3, r2
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002b3e:	68ba      	ldr	r2, [r7, #8]
 8002b40:	4313      	orrs	r3, r2
 8002b42:	60bb      	str	r3, [r7, #8]
    
    /* Enable discontinuous mode only if continuous mode is disabled */
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	7edb      	ldrb	r3, [r3, #27]
 8002b48:	2b01      	cmp	r3, #1
 8002b4a:	d115      	bne.n	8002b78 <HAL_ADC_Init+0x16c>
    {
      if (hadc->Init.ContinuousConvMode == DISABLE)
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	7e9b      	ldrb	r3, [r3, #26]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d105      	bne.n	8002b60 <HAL_ADC_Init+0x154>
      {
        /* Enable the selected ADC group regular discontinuous mode */
        tmpCFGR1 |= ADC_CFGR1_DISCEN;
 8002b54:	68bb      	ldr	r3, [r7, #8]
 8002b56:	2280      	movs	r2, #128	; 0x80
 8002b58:	0252      	lsls	r2, r2, #9
 8002b5a:	4313      	orrs	r3, r2
 8002b5c:	60bb      	str	r3, [r7, #8]
 8002b5e:	e00b      	b.n	8002b78 <HAL_ADC_Init+0x16c>
        /* ADC regular group discontinuous was intended to be enabled,        */
        /* but ADC regular group modes continuous and sequencer discontinuous */
        /* cannot be enabled simultaneously.                                  */
        
        /* Update ADC state machine to error */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b64:	2220      	movs	r2, #32
 8002b66:	431a      	orrs	r2, r3
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	639a      	str	r2, [r3, #56]	; 0x38
        
        /* Set ADC error code to ADC IP internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b70:	2201      	movs	r2, #1
 8002b72:	431a      	orrs	r2, r3
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	63da      	str	r2, [r3, #60]	; 0x3c
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	69da      	ldr	r2, [r3, #28]
 8002b7c:	23c2      	movs	r3, #194	; 0xc2
 8002b7e:	33ff      	adds	r3, #255	; 0xff
 8002b80:	429a      	cmp	r2, r3
 8002b82:	d007      	beq.n	8002b94 <HAL_ADC_Init+0x188>
    {
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	69da      	ldr	r2, [r3, #28]
                    hadc->Init.ExternalTrigConvEdge );
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	6a1b      	ldr	r3, [r3, #32]
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002b8c:	4313      	orrs	r3, r2
 8002b8e:	68ba      	ldr	r2, [r7, #8]
 8002b90:	4313      	orrs	r3, r2
 8002b92:	60bb      	str	r3, [r7, #8]
    }
    
    /* Update ADC configuration register with previous settings */
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	68d9      	ldr	r1, [r3, #12]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	68ba      	ldr	r2, [r7, #8]
 8002ba0:	430a      	orrs	r2, r1
 8002ba2:	60da      	str	r2, [r3, #12]
    /* Management of parameters "SamplingTimeCommon" and "SamplingTime"       */
    /* (obsolete): sampling time set in this function if parameter            */
    /*  "SamplingTimeCommon" has been set to a valid sampling time.           */
    /* Otherwise, sampling time is set into ADC channel initialization        */
    /* structure with parameter "SamplingTime" (obsolete).                    */
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ba8:	2380      	movs	r3, #128	; 0x80
 8002baa:	055b      	lsls	r3, r3, #21
 8002bac:	429a      	cmp	r2, r3
 8002bae:	d01b      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bb4:	2b01      	cmp	r3, #1
 8002bb6:	d017      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bbc:	2b02      	cmp	r3, #2
 8002bbe:	d013      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bc4:	2b03      	cmp	r3, #3
 8002bc6:	d00f      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bcc:	2b04      	cmp	r3, #4
 8002bce:	d00b      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bd4:	2b05      	cmp	r3, #5
 8002bd6:	d007      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bdc:	2b06      	cmp	r3, #6
 8002bde:	d003      	beq.n	8002be8 <HAL_ADC_Init+0x1dc>
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002be4:	2b07      	cmp	r3, #7
 8002be6:	d112      	bne.n	8002c0e <HAL_ADC_Init+0x202>
    {
      /* Channel sampling time configuration */
      /* Clear the old sample time */
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	695a      	ldr	r2, [r3, #20]
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	2107      	movs	r1, #7
 8002bf4:	438a      	bics	r2, r1
 8002bf6:	615a      	str	r2, [r3, #20]
      
      /* Set the new sample time */
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	6959      	ldr	r1, [r3, #20]
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c02:	2207      	movs	r2, #7
 8002c04:	401a      	ands	r2, r3
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	430a      	orrs	r2, r1
 8002c0c:	615a      	str	r2, [r3, #20]
    /* Check back that ADC registers have effectively been configured to      */
    /* ensure of no potential problem of ADC core IP clocking.                */
    /* Check through register CFGR1 (excluding analog watchdog configuration: */
    /* set into separate dedicated function, and bits of ADC resolution set   */
    /* out of temporary variable 'tmpCFGR1').                                 */
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	68db      	ldr	r3, [r3, #12]
 8002c14:	4a1c      	ldr	r2, [pc, #112]	; (8002c88 <HAL_ADC_Init+0x27c>)
 8002c16:	4013      	ands	r3, r2
 8002c18:	68ba      	ldr	r2, [r7, #8]
 8002c1a:	429a      	cmp	r2, r3
 8002c1c:	d10b      	bne.n	8002c36 <HAL_ADC_Init+0x22a>
         == tmpCFGR1)
    {
      /* Set ADC error code to none */
      ADC_CLEAR_ERRORCODE(hadc);
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	2200      	movs	r2, #0
 8002c22:	63da      	str	r2, [r3, #60]	; 0x3c
      
      /* Set the ADC state */
      ADC_STATE_CLR_SET(hadc->State,
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c28:	2203      	movs	r2, #3
 8002c2a:	4393      	bics	r3, r2
 8002c2c:	2201      	movs	r2, #1
 8002c2e:	431a      	orrs	r2, r3
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	639a      	str	r2, [r3, #56]	; 0x38
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002c34:	e01c      	b.n	8002c70 <HAL_ADC_Init+0x264>
                        HAL_ADC_STATE_READY);
    }
    else
    {
      /* Update ADC state machine to error */
      ADC_STATE_CLR_SET(hadc->State,
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c3a:	2212      	movs	r2, #18
 8002c3c:	4393      	bics	r3, r2
 8002c3e:	2210      	movs	r2, #16
 8002c40:	431a      	orrs	r2, r3
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	639a      	str	r2, [r3, #56]	; 0x38
                        HAL_ADC_STATE_BUSY_INTERNAL,
                        HAL_ADC_STATE_ERROR_INTERNAL);
      
      /* Set ADC error code to ADC IP internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c4a:	2201      	movs	r2, #1
 8002c4c:	431a      	orrs	r2, r3
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	63da      	str	r2, [r3, #60]	; 0x3c
      
      tmp_hal_status = HAL_ERROR;
 8002c52:	230f      	movs	r3, #15
 8002c54:	18fb      	adds	r3, r7, r3
 8002c56:	2201      	movs	r2, #1
 8002c58:	701a      	strb	r2, [r3, #0]
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002c5a:	e009      	b.n	8002c70 <HAL_ADC_Init+0x264>
  
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c60:	2210      	movs	r2, #16
 8002c62:	431a      	orrs	r2, r3
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	639a      	str	r2, [r3, #56]	; 0x38
        
    tmp_hal_status = HAL_ERROR;
 8002c68:	230f      	movs	r3, #15
 8002c6a:	18fb      	adds	r3, r7, r3
 8002c6c:	2201      	movs	r2, #1
 8002c6e:	701a      	strb	r2, [r3, #0]
  }
  
  /* Return function status */
  return tmp_hal_status;
 8002c70:	230f      	movs	r3, #15
 8002c72:	18fb      	adds	r3, r7, r3
 8002c74:	781b      	ldrb	r3, [r3, #0]
}
 8002c76:	0018      	movs	r0, r3
 8002c78:	46bd      	mov	sp, r7
 8002c7a:	b004      	add	sp, #16
 8002c7c:	bd80      	pop	{r7, pc}
 8002c7e:	46c0      	nop			; (mov r8, r8)
 8002c80:	fffffefd 	.word	0xfffffefd
 8002c84:	fffe0219 	.word	0xfffe0219
 8002c88:	833fffe7 	.word	0x833fffe7

08002c8c <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel for regular group.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8002c8c:	b580      	push	{r7, lr}
 8002c8e:	b084      	sub	sp, #16
 8002c90:	af00      	add	r7, sp, #0
 8002c92:	6078      	str	r0, [r7, #4]
 8002c94:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002c96:	230f      	movs	r3, #15
 8002c98:	18fb      	adds	r3, r7, r3
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	701a      	strb	r2, [r3, #0]
  __IO uint32_t wait_loop_index = 0U;
 8002c9e:	2300      	movs	r3, #0
 8002ca0:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_RANK(sConfig->Rank));
  
  if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ca6:	2380      	movs	r3, #128	; 0x80
 8002ca8:	055b      	lsls	r3, r3, #21
 8002caa:	429a      	cmp	r2, r3
 8002cac:	d011      	beq.n	8002cd2 <HAL_ADC_ConfigChannel+0x46>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cb2:	2b01      	cmp	r3, #1
 8002cb4:	d00d      	beq.n	8002cd2 <HAL_ADC_ConfigChannel+0x46>
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cba:	2b02      	cmp	r3, #2
 8002cbc:	d009      	beq.n	8002cd2 <HAL_ADC_ConfigChannel+0x46>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cc2:	2b03      	cmp	r3, #3
 8002cc4:	d005      	beq.n	8002cd2 <HAL_ADC_ConfigChannel+0x46>
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cca:	2b04      	cmp	r3, #4
 8002ccc:	d001      	beq.n	8002cd2 <HAL_ADC_ConfigChannel+0x46>
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  {
    assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  }
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	2234      	movs	r2, #52	; 0x34
 8002cd6:	5c9b      	ldrb	r3, [r3, r2]
 8002cd8:	2b01      	cmp	r3, #1
 8002cda:	d101      	bne.n	8002ce0 <HAL_ADC_ConfigChannel+0x54>
 8002cdc:	2302      	movs	r3, #2
 8002cde:	e0d0      	b.n	8002e82 <HAL_ADC_ConfigChannel+0x1f6>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	2234      	movs	r2, #52	; 0x34
 8002ce4:	2101      	movs	r1, #1
 8002ce6:	5499      	strb	r1, [r3, r2]
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel sampling time                                                 */
  /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	689b      	ldr	r3, [r3, #8]
 8002cee:	2204      	movs	r2, #4
 8002cf0:	4013      	ands	r3, r2
 8002cf2:	d000      	beq.n	8002cf6 <HAL_ADC_ConfigChannel+0x6a>
 8002cf4:	e0b4      	b.n	8002e60 <HAL_ADC_ConfigChannel+0x1d4>
  {
    /* Configure channel: depending on rank setting, add it or remove it from */
    /* ADC conversion sequencer.                                              */
    if (sConfig->Rank != ADC_RANK_NONE)
 8002cf6:	683b      	ldr	r3, [r7, #0]
 8002cf8:	685b      	ldr	r3, [r3, #4]
 8002cfa:	4a64      	ldr	r2, [pc, #400]	; (8002e8c <HAL_ADC_ConfigChannel+0x200>)
 8002cfc:	4293      	cmp	r3, r2
 8002cfe:	d100      	bne.n	8002d02 <HAL_ADC_ConfigChannel+0x76>
 8002d00:	e082      	b.n	8002e08 <HAL_ADC_ConfigChannel+0x17c>
    {
      /* Regular sequence configuration */
      /* Set the channel selection register from the selected channel */
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8002d08:	683b      	ldr	r3, [r7, #0]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	2201      	movs	r2, #1
 8002d0e:	409a      	lsls	r2, r3
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	430a      	orrs	r2, r1
 8002d16:	629a      	str	r2, [r3, #40]	; 0x28
      /* Channel sampling time configuration */
      /* Management of parameters "SamplingTimeCommon" and "SamplingTime"     */
      /* (obsolete): sampling time set in this function with                  */
      /* parameter "SamplingTime" (obsolete) only if not already set into     */
      /* ADC initialization structure with parameter "SamplingTimeCommon".    */
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d1c:	2380      	movs	r3, #128	; 0x80
 8002d1e:	055b      	lsls	r3, r3, #21
 8002d20:	429a      	cmp	r2, r3
 8002d22:	d037      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d28:	2b01      	cmp	r3, #1
 8002d2a:	d033      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d30:	2b02      	cmp	r3, #2
 8002d32:	d02f      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d38:	2b03      	cmp	r3, #3
 8002d3a:	d02b      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d40:	2b04      	cmp	r3, #4
 8002d42:	d027      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d48:	2b05      	cmp	r3, #5
 8002d4a:	d023      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d50:	2b06      	cmp	r3, #6
 8002d52:	d01f      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d58:	2b07      	cmp	r3, #7
 8002d5a:	d01b      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
      {
        /* Modify sampling time if needed (not needed in case of reoccurrence */
        /* for several channels programmed consecutively into the sequencer)  */
        if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	689a      	ldr	r2, [r3, #8]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	695b      	ldr	r3, [r3, #20]
 8002d66:	2107      	movs	r1, #7
 8002d68:	400b      	ands	r3, r1
 8002d6a:	429a      	cmp	r2, r3
 8002d6c:	d012      	beq.n	8002d94 <HAL_ADC_ConfigChannel+0x108>
        {
          /* Channel sampling time configuration */
          /* Clear the old sample time */
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	695a      	ldr	r2, [r3, #20]
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	2107      	movs	r1, #7
 8002d7a:	438a      	bics	r2, r1
 8002d7c:	615a      	str	r2, [r3, #20]
          
          /* Set the new sample time */
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	6959      	ldr	r1, [r3, #20]
 8002d84:	683b      	ldr	r3, [r7, #0]
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	2207      	movs	r2, #7
 8002d8a:	401a      	ands	r2, r3
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	430a      	orrs	r2, r1
 8002d92:	615a      	str	r2, [r3, #20]
      /* internal measurement paths enable: If internal channel selected,     */
      /* enable dedicated internal buffers and path.                          */
      /* Note: these internal measurement paths can be disabled using         */
      /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
      /*       channel configuration parameter "Rank".                        */
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002d94:	683b      	ldr	r3, [r7, #0]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	2b10      	cmp	r3, #16
 8002d9a:	d007      	beq.n	8002dac <HAL_ADC_ConfigChannel+0x120>
 8002d9c:	683b      	ldr	r3, [r7, #0]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	2b11      	cmp	r3, #17
 8002da2:	d003      	beq.n	8002dac <HAL_ADC_ConfigChannel+0x120>
 8002da4:	683b      	ldr	r3, [r7, #0]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	2b12      	cmp	r3, #18
 8002daa:	d163      	bne.n	8002e74 <HAL_ADC_ConfigChannel+0x1e8>
      {
        /* If Channel_16 is selected, enable Temp. sensor measurement path. */
        /* If Channel_17 is selected, enable VREFINT measurement path. */
        /* If Channel_18 is selected, enable VBAT measurement path. */
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002dac:	4b38      	ldr	r3, [pc, #224]	; (8002e90 <HAL_ADC_ConfigChannel+0x204>)
 8002dae:	6819      	ldr	r1, [r3, #0]
 8002db0:	683b      	ldr	r3, [r7, #0]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	2b10      	cmp	r3, #16
 8002db6:	d009      	beq.n	8002dcc <HAL_ADC_ConfigChannel+0x140>
 8002db8:	683b      	ldr	r3, [r7, #0]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	2b11      	cmp	r3, #17
 8002dbe:	d102      	bne.n	8002dc6 <HAL_ADC_ConfigChannel+0x13a>
 8002dc0:	2380      	movs	r3, #128	; 0x80
 8002dc2:	03db      	lsls	r3, r3, #15
 8002dc4:	e004      	b.n	8002dd0 <HAL_ADC_ConfigChannel+0x144>
 8002dc6:	2380      	movs	r3, #128	; 0x80
 8002dc8:	045b      	lsls	r3, r3, #17
 8002dca:	e001      	b.n	8002dd0 <HAL_ADC_ConfigChannel+0x144>
 8002dcc:	2380      	movs	r3, #128	; 0x80
 8002dce:	041b      	lsls	r3, r3, #16
 8002dd0:	4a2f      	ldr	r2, [pc, #188]	; (8002e90 <HAL_ADC_ConfigChannel+0x204>)
 8002dd2:	430b      	orrs	r3, r1
 8002dd4:	6013      	str	r3, [r2, #0]
        
        /* If Temp. sensor is selected, wait for stabilization delay */
        if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002dd6:	683b      	ldr	r3, [r7, #0]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	2b10      	cmp	r3, #16
 8002ddc:	d14a      	bne.n	8002e74 <HAL_ADC_ConfigChannel+0x1e8>
        {
          /* Delay for temperature sensor stabilization time */
          /* Compute number of CPU cycles to wait for */
          wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8002dde:	4b2d      	ldr	r3, [pc, #180]	; (8002e94 <HAL_ADC_ConfigChannel+0x208>)
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	492d      	ldr	r1, [pc, #180]	; (8002e98 <HAL_ADC_ConfigChannel+0x20c>)
 8002de4:	0018      	movs	r0, r3
 8002de6:	f7fd f9ab 	bl	8000140 <__udivsi3>
 8002dea:	0003      	movs	r3, r0
 8002dec:	001a      	movs	r2, r3
 8002dee:	0013      	movs	r3, r2
 8002df0:	009b      	lsls	r3, r3, #2
 8002df2:	189b      	adds	r3, r3, r2
 8002df4:	005b      	lsls	r3, r3, #1
 8002df6:	60bb      	str	r3, [r7, #8]
          while(wait_loop_index != 0U)
 8002df8:	e002      	b.n	8002e00 <HAL_ADC_ConfigChannel+0x174>
          {
            wait_loop_index--;
 8002dfa:	68bb      	ldr	r3, [r7, #8]
 8002dfc:	3b01      	subs	r3, #1
 8002dfe:	60bb      	str	r3, [r7, #8]
          while(wait_loop_index != 0U)
 8002e00:	68bb      	ldr	r3, [r7, #8]
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	d1f9      	bne.n	8002dfa <HAL_ADC_ConfigChannel+0x16e>
 8002e06:	e035      	b.n	8002e74 <HAL_ADC_ConfigChannel+0x1e8>
    }
    else
    {
      /* Regular sequence configuration */
      /* Reset the channel selection register from the selected channel */
      hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002e0e:	683b      	ldr	r3, [r7, #0]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	2101      	movs	r1, #1
 8002e14:	4099      	lsls	r1, r3
 8002e16:	000b      	movs	r3, r1
 8002e18:	43d9      	mvns	r1, r3
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	400a      	ands	r2, r1
 8002e20:	629a      	str	r2, [r3, #40]	; 0x28
      
      /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
      /* internal measurement paths disable: If internal channel selected,    */
      /* disable dedicated internal buffers and path.                         */
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002e22:	683b      	ldr	r3, [r7, #0]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	2b10      	cmp	r3, #16
 8002e28:	d007      	beq.n	8002e3a <HAL_ADC_ConfigChannel+0x1ae>
 8002e2a:	683b      	ldr	r3, [r7, #0]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	2b11      	cmp	r3, #17
 8002e30:	d003      	beq.n	8002e3a <HAL_ADC_ConfigChannel+0x1ae>
 8002e32:	683b      	ldr	r3, [r7, #0]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	2b12      	cmp	r3, #18
 8002e38:	d11c      	bne.n	8002e74 <HAL_ADC_ConfigChannel+0x1e8>
      {
        /* If Channel_16 is selected, disable Temp. sensor measurement path. */
        /* If Channel_17 is selected, disable VREFINT measurement path. */
        /* If Channel_18 is selected, disable VBAT measurement path. */
        ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002e3a:	4b15      	ldr	r3, [pc, #84]	; (8002e90 <HAL_ADC_ConfigChannel+0x204>)
 8002e3c:	6819      	ldr	r1, [r3, #0]
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	2b10      	cmp	r3, #16
 8002e44:	d007      	beq.n	8002e56 <HAL_ADC_ConfigChannel+0x1ca>
 8002e46:	683b      	ldr	r3, [r7, #0]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	2b11      	cmp	r3, #17
 8002e4c:	d101      	bne.n	8002e52 <HAL_ADC_ConfigChannel+0x1c6>
 8002e4e:	4b13      	ldr	r3, [pc, #76]	; (8002e9c <HAL_ADC_ConfigChannel+0x210>)
 8002e50:	e002      	b.n	8002e58 <HAL_ADC_ConfigChannel+0x1cc>
 8002e52:	4b13      	ldr	r3, [pc, #76]	; (8002ea0 <HAL_ADC_ConfigChannel+0x214>)
 8002e54:	e000      	b.n	8002e58 <HAL_ADC_ConfigChannel+0x1cc>
 8002e56:	4b13      	ldr	r3, [pc, #76]	; (8002ea4 <HAL_ADC_ConfigChannel+0x218>)
 8002e58:	4a0d      	ldr	r2, [pc, #52]	; (8002e90 <HAL_ADC_ConfigChannel+0x204>)
 8002e5a:	400b      	ands	r3, r1
 8002e5c:	6013      	str	r3, [r2, #0]
 8002e5e:	e009      	b.n	8002e74 <HAL_ADC_ConfigChannel+0x1e8>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e64:	2220      	movs	r2, #32
 8002e66:	431a      	orrs	r2, r3
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	639a      	str	r2, [r3, #56]	; 0x38
    
    tmp_hal_status = HAL_ERROR;
 8002e6c:	230f      	movs	r3, #15
 8002e6e:	18fb      	adds	r3, r7, r3
 8002e70:	2201      	movs	r2, #1
 8002e72:	701a      	strb	r2, [r3, #0]
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	2234      	movs	r2, #52	; 0x34
 8002e78:	2100      	movs	r1, #0
 8002e7a:	5499      	strb	r1, [r3, r2]
  
  /* Return function status */
  return tmp_hal_status;
 8002e7c:	230f      	movs	r3, #15
 8002e7e:	18fb      	adds	r3, r7, r3
 8002e80:	781b      	ldrb	r3, [r3, #0]
}
 8002e82:	0018      	movs	r0, r3
 8002e84:	46bd      	mov	sp, r7
 8002e86:	b004      	add	sp, #16
 8002e88:	bd80      	pop	{r7, pc}
 8002e8a:	46c0      	nop			; (mov r8, r8)
 8002e8c:	00001001 	.word	0x00001001
 8002e90:	40012708 	.word	0x40012708
 8002e94:	20000000 	.word	0x20000000
 8002e98:	000f4240 	.word	0x000f4240
 8002e9c:	ffbfffff 	.word	0xffbfffff
 8002ea0:	feffffff 	.word	0xfeffffff
 8002ea4:	ff7fffff 	.word	0xff7fffff

08002ea8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002ea8:	b590      	push	{r4, r7, lr}
 8002eaa:	b083      	sub	sp, #12
 8002eac:	af00      	add	r7, sp, #0
 8002eae:	0002      	movs	r2, r0
 8002eb0:	6039      	str	r1, [r7, #0]
 8002eb2:	1dfb      	adds	r3, r7, #7
 8002eb4:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002eb6:	1dfb      	adds	r3, r7, #7
 8002eb8:	781b      	ldrb	r3, [r3, #0]
 8002eba:	2b7f      	cmp	r3, #127	; 0x7f
 8002ebc:	d828      	bhi.n	8002f10 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ebe:	4a2f      	ldr	r2, [pc, #188]	; (8002f7c <__NVIC_SetPriority+0xd4>)
 8002ec0:	1dfb      	adds	r3, r7, #7
 8002ec2:	781b      	ldrb	r3, [r3, #0]
 8002ec4:	b25b      	sxtb	r3, r3
 8002ec6:	089b      	lsrs	r3, r3, #2
 8002ec8:	33c0      	adds	r3, #192	; 0xc0
 8002eca:	009b      	lsls	r3, r3, #2
 8002ecc:	589b      	ldr	r3, [r3, r2]
 8002ece:	1dfa      	adds	r2, r7, #7
 8002ed0:	7812      	ldrb	r2, [r2, #0]
 8002ed2:	0011      	movs	r1, r2
 8002ed4:	2203      	movs	r2, #3
 8002ed6:	400a      	ands	r2, r1
 8002ed8:	00d2      	lsls	r2, r2, #3
 8002eda:	21ff      	movs	r1, #255	; 0xff
 8002edc:	4091      	lsls	r1, r2
 8002ede:	000a      	movs	r2, r1
 8002ee0:	43d2      	mvns	r2, r2
 8002ee2:	401a      	ands	r2, r3
 8002ee4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002ee6:	683b      	ldr	r3, [r7, #0]
 8002ee8:	019b      	lsls	r3, r3, #6
 8002eea:	22ff      	movs	r2, #255	; 0xff
 8002eec:	401a      	ands	r2, r3
 8002eee:	1dfb      	adds	r3, r7, #7
 8002ef0:	781b      	ldrb	r3, [r3, #0]
 8002ef2:	0018      	movs	r0, r3
 8002ef4:	2303      	movs	r3, #3
 8002ef6:	4003      	ands	r3, r0
 8002ef8:	00db      	lsls	r3, r3, #3
 8002efa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002efc:	481f      	ldr	r0, [pc, #124]	; (8002f7c <__NVIC_SetPriority+0xd4>)
 8002efe:	1dfb      	adds	r3, r7, #7
 8002f00:	781b      	ldrb	r3, [r3, #0]
 8002f02:	b25b      	sxtb	r3, r3
 8002f04:	089b      	lsrs	r3, r3, #2
 8002f06:	430a      	orrs	r2, r1
 8002f08:	33c0      	adds	r3, #192	; 0xc0
 8002f0a:	009b      	lsls	r3, r3, #2
 8002f0c:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002f0e:	e031      	b.n	8002f74 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f10:	4a1b      	ldr	r2, [pc, #108]	; (8002f80 <__NVIC_SetPriority+0xd8>)
 8002f12:	1dfb      	adds	r3, r7, #7
 8002f14:	781b      	ldrb	r3, [r3, #0]
 8002f16:	0019      	movs	r1, r3
 8002f18:	230f      	movs	r3, #15
 8002f1a:	400b      	ands	r3, r1
 8002f1c:	3b08      	subs	r3, #8
 8002f1e:	089b      	lsrs	r3, r3, #2
 8002f20:	3306      	adds	r3, #6
 8002f22:	009b      	lsls	r3, r3, #2
 8002f24:	18d3      	adds	r3, r2, r3
 8002f26:	3304      	adds	r3, #4
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	1dfa      	adds	r2, r7, #7
 8002f2c:	7812      	ldrb	r2, [r2, #0]
 8002f2e:	0011      	movs	r1, r2
 8002f30:	2203      	movs	r2, #3
 8002f32:	400a      	ands	r2, r1
 8002f34:	00d2      	lsls	r2, r2, #3
 8002f36:	21ff      	movs	r1, #255	; 0xff
 8002f38:	4091      	lsls	r1, r2
 8002f3a:	000a      	movs	r2, r1
 8002f3c:	43d2      	mvns	r2, r2
 8002f3e:	401a      	ands	r2, r3
 8002f40:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002f42:	683b      	ldr	r3, [r7, #0]
 8002f44:	019b      	lsls	r3, r3, #6
 8002f46:	22ff      	movs	r2, #255	; 0xff
 8002f48:	401a      	ands	r2, r3
 8002f4a:	1dfb      	adds	r3, r7, #7
 8002f4c:	781b      	ldrb	r3, [r3, #0]
 8002f4e:	0018      	movs	r0, r3
 8002f50:	2303      	movs	r3, #3
 8002f52:	4003      	ands	r3, r0
 8002f54:	00db      	lsls	r3, r3, #3
 8002f56:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f58:	4809      	ldr	r0, [pc, #36]	; (8002f80 <__NVIC_SetPriority+0xd8>)
 8002f5a:	1dfb      	adds	r3, r7, #7
 8002f5c:	781b      	ldrb	r3, [r3, #0]
 8002f5e:	001c      	movs	r4, r3
 8002f60:	230f      	movs	r3, #15
 8002f62:	4023      	ands	r3, r4
 8002f64:	3b08      	subs	r3, #8
 8002f66:	089b      	lsrs	r3, r3, #2
 8002f68:	430a      	orrs	r2, r1
 8002f6a:	3306      	adds	r3, #6
 8002f6c:	009b      	lsls	r3, r3, #2
 8002f6e:	18c3      	adds	r3, r0, r3
 8002f70:	3304      	adds	r3, #4
 8002f72:	601a      	str	r2, [r3, #0]
}
 8002f74:	46c0      	nop			; (mov r8, r8)
 8002f76:	46bd      	mov	sp, r7
 8002f78:	b003      	add	sp, #12
 8002f7a:	bd90      	pop	{r4, r7, pc}
 8002f7c:	e000e100 	.word	0xe000e100
 8002f80:	e000ed00 	.word	0xe000ed00

08002f84 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b082      	sub	sp, #8
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	1e5a      	subs	r2, r3, #1
 8002f90:	2380      	movs	r3, #128	; 0x80
 8002f92:	045b      	lsls	r3, r3, #17
 8002f94:	429a      	cmp	r2, r3
 8002f96:	d301      	bcc.n	8002f9c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002f98:	2301      	movs	r3, #1
 8002f9a:	e010      	b.n	8002fbe <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f9c:	4b0a      	ldr	r3, [pc, #40]	; (8002fc8 <SysTick_Config+0x44>)
 8002f9e:	687a      	ldr	r2, [r7, #4]
 8002fa0:	3a01      	subs	r2, #1
 8002fa2:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002fa4:	2301      	movs	r3, #1
 8002fa6:	425b      	negs	r3, r3
 8002fa8:	2103      	movs	r1, #3
 8002faa:	0018      	movs	r0, r3
 8002fac:	f7ff ff7c 	bl	8002ea8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002fb0:	4b05      	ldr	r3, [pc, #20]	; (8002fc8 <SysTick_Config+0x44>)
 8002fb2:	2200      	movs	r2, #0
 8002fb4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002fb6:	4b04      	ldr	r3, [pc, #16]	; (8002fc8 <SysTick_Config+0x44>)
 8002fb8:	2207      	movs	r2, #7
 8002fba:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002fbc:	2300      	movs	r3, #0
}
 8002fbe:	0018      	movs	r0, r3
 8002fc0:	46bd      	mov	sp, r7
 8002fc2:	b002      	add	sp, #8
 8002fc4:	bd80      	pop	{r7, pc}
 8002fc6:	46c0      	nop			; (mov r8, r8)
 8002fc8:	e000e010 	.word	0xe000e010

08002fcc <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	b084      	sub	sp, #16
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	60b9      	str	r1, [r7, #8]
 8002fd4:	607a      	str	r2, [r7, #4]
 8002fd6:	210f      	movs	r1, #15
 8002fd8:	187b      	adds	r3, r7, r1
 8002fda:	1c02      	adds	r2, r0, #0
 8002fdc:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8002fde:	68ba      	ldr	r2, [r7, #8]
 8002fe0:	187b      	adds	r3, r7, r1
 8002fe2:	781b      	ldrb	r3, [r3, #0]
 8002fe4:	b25b      	sxtb	r3, r3
 8002fe6:	0011      	movs	r1, r2
 8002fe8:	0018      	movs	r0, r3
 8002fea:	f7ff ff5d 	bl	8002ea8 <__NVIC_SetPriority>
}
 8002fee:	46c0      	nop			; (mov r8, r8)
 8002ff0:	46bd      	mov	sp, r7
 8002ff2:	b004      	add	sp, #16
 8002ff4:	bd80      	pop	{r7, pc}

08002ff6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002ff6:	b580      	push	{r7, lr}
 8002ff8:	b082      	sub	sp, #8
 8002ffa:	af00      	add	r7, sp, #0
 8002ffc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	0018      	movs	r0, r3
 8003002:	f7ff ffbf 	bl	8002f84 <SysTick_Config>
 8003006:	0003      	movs	r3, r0
}
 8003008:	0018      	movs	r0, r3
 800300a:	46bd      	mov	sp, r7
 800300c:	b002      	add	sp, #8
 800300e:	bd80      	pop	{r7, pc}

08003010 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003010:	b580      	push	{r7, lr}
 8003012:	b086      	sub	sp, #24
 8003014:	af00      	add	r7, sp, #0
 8003016:	6078      	str	r0, [r7, #4]
 8003018:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800301a:	2300      	movs	r3, #0
 800301c:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800301e:	e14f      	b.n	80032c0 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003020:	683b      	ldr	r3, [r7, #0]
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	2101      	movs	r1, #1
 8003026:	697a      	ldr	r2, [r7, #20]
 8003028:	4091      	lsls	r1, r2
 800302a:	000a      	movs	r2, r1
 800302c:	4013      	ands	r3, r2
 800302e:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003030:	68fb      	ldr	r3, [r7, #12]
 8003032:	2b00      	cmp	r3, #0
 8003034:	d100      	bne.n	8003038 <HAL_GPIO_Init+0x28>
 8003036:	e140      	b.n	80032ba <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8003038:	683b      	ldr	r3, [r7, #0]
 800303a:	685b      	ldr	r3, [r3, #4]
 800303c:	2203      	movs	r2, #3
 800303e:	4013      	ands	r3, r2
 8003040:	2b01      	cmp	r3, #1
 8003042:	d005      	beq.n	8003050 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	685b      	ldr	r3, [r3, #4]
 8003048:	2203      	movs	r2, #3
 800304a:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800304c:	2b02      	cmp	r3, #2
 800304e:	d130      	bne.n	80030b2 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	689b      	ldr	r3, [r3, #8]
 8003054:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003056:	697b      	ldr	r3, [r7, #20]
 8003058:	005b      	lsls	r3, r3, #1
 800305a:	2203      	movs	r2, #3
 800305c:	409a      	lsls	r2, r3
 800305e:	0013      	movs	r3, r2
 8003060:	43da      	mvns	r2, r3
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	4013      	ands	r3, r2
 8003066:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	68da      	ldr	r2, [r3, #12]
 800306c:	697b      	ldr	r3, [r7, #20]
 800306e:	005b      	lsls	r3, r3, #1
 8003070:	409a      	lsls	r2, r3
 8003072:	0013      	movs	r3, r2
 8003074:	693a      	ldr	r2, [r7, #16]
 8003076:	4313      	orrs	r3, r2
 8003078:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	693a      	ldr	r2, [r7, #16]
 800307e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	685b      	ldr	r3, [r3, #4]
 8003084:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003086:	2201      	movs	r2, #1
 8003088:	697b      	ldr	r3, [r7, #20]
 800308a:	409a      	lsls	r2, r3
 800308c:	0013      	movs	r3, r2
 800308e:	43da      	mvns	r2, r3
 8003090:	693b      	ldr	r3, [r7, #16]
 8003092:	4013      	ands	r3, r2
 8003094:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003096:	683b      	ldr	r3, [r7, #0]
 8003098:	685b      	ldr	r3, [r3, #4]
 800309a:	091b      	lsrs	r3, r3, #4
 800309c:	2201      	movs	r2, #1
 800309e:	401a      	ands	r2, r3
 80030a0:	697b      	ldr	r3, [r7, #20]
 80030a2:	409a      	lsls	r2, r3
 80030a4:	0013      	movs	r3, r2
 80030a6:	693a      	ldr	r2, [r7, #16]
 80030a8:	4313      	orrs	r3, r2
 80030aa:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	693a      	ldr	r2, [r7, #16]
 80030b0:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80030b2:	683b      	ldr	r3, [r7, #0]
 80030b4:	685b      	ldr	r3, [r3, #4]
 80030b6:	2203      	movs	r2, #3
 80030b8:	4013      	ands	r3, r2
 80030ba:	2b03      	cmp	r3, #3
 80030bc:	d017      	beq.n	80030ee <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	68db      	ldr	r3, [r3, #12]
 80030c2:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80030c4:	697b      	ldr	r3, [r7, #20]
 80030c6:	005b      	lsls	r3, r3, #1
 80030c8:	2203      	movs	r2, #3
 80030ca:	409a      	lsls	r2, r3
 80030cc:	0013      	movs	r3, r2
 80030ce:	43da      	mvns	r2, r3
 80030d0:	693b      	ldr	r3, [r7, #16]
 80030d2:	4013      	ands	r3, r2
 80030d4:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 80030d6:	683b      	ldr	r3, [r7, #0]
 80030d8:	689a      	ldr	r2, [r3, #8]
 80030da:	697b      	ldr	r3, [r7, #20]
 80030dc:	005b      	lsls	r3, r3, #1
 80030de:	409a      	lsls	r2, r3
 80030e0:	0013      	movs	r3, r2
 80030e2:	693a      	ldr	r2, [r7, #16]
 80030e4:	4313      	orrs	r3, r2
 80030e6:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	693a      	ldr	r2, [r7, #16]
 80030ec:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80030ee:	683b      	ldr	r3, [r7, #0]
 80030f0:	685b      	ldr	r3, [r3, #4]
 80030f2:	2203      	movs	r2, #3
 80030f4:	4013      	ands	r3, r2
 80030f6:	2b02      	cmp	r3, #2
 80030f8:	d123      	bne.n	8003142 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 80030fa:	697b      	ldr	r3, [r7, #20]
 80030fc:	08da      	lsrs	r2, r3, #3
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	3208      	adds	r2, #8
 8003102:	0092      	lsls	r2, r2, #2
 8003104:	58d3      	ldr	r3, [r2, r3]
 8003106:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003108:	697b      	ldr	r3, [r7, #20]
 800310a:	2207      	movs	r2, #7
 800310c:	4013      	ands	r3, r2
 800310e:	009b      	lsls	r3, r3, #2
 8003110:	220f      	movs	r2, #15
 8003112:	409a      	lsls	r2, r3
 8003114:	0013      	movs	r3, r2
 8003116:	43da      	mvns	r2, r3
 8003118:	693b      	ldr	r3, [r7, #16]
 800311a:	4013      	ands	r3, r2
 800311c:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 800311e:	683b      	ldr	r3, [r7, #0]
 8003120:	691a      	ldr	r2, [r3, #16]
 8003122:	697b      	ldr	r3, [r7, #20]
 8003124:	2107      	movs	r1, #7
 8003126:	400b      	ands	r3, r1
 8003128:	009b      	lsls	r3, r3, #2
 800312a:	409a      	lsls	r2, r3
 800312c:	0013      	movs	r3, r2
 800312e:	693a      	ldr	r2, [r7, #16]
 8003130:	4313      	orrs	r3, r2
 8003132:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003134:	697b      	ldr	r3, [r7, #20]
 8003136:	08da      	lsrs	r2, r3, #3
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	3208      	adds	r2, #8
 800313c:	0092      	lsls	r2, r2, #2
 800313e:	6939      	ldr	r1, [r7, #16]
 8003140:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8003148:	697b      	ldr	r3, [r7, #20]
 800314a:	005b      	lsls	r3, r3, #1
 800314c:	2203      	movs	r2, #3
 800314e:	409a      	lsls	r2, r3
 8003150:	0013      	movs	r3, r2
 8003152:	43da      	mvns	r2, r3
 8003154:	693b      	ldr	r3, [r7, #16]
 8003156:	4013      	ands	r3, r2
 8003158:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800315a:	683b      	ldr	r3, [r7, #0]
 800315c:	685b      	ldr	r3, [r3, #4]
 800315e:	2203      	movs	r2, #3
 8003160:	401a      	ands	r2, r3
 8003162:	697b      	ldr	r3, [r7, #20]
 8003164:	005b      	lsls	r3, r3, #1
 8003166:	409a      	lsls	r2, r3
 8003168:	0013      	movs	r3, r2
 800316a:	693a      	ldr	r2, [r7, #16]
 800316c:	4313      	orrs	r3, r2
 800316e:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	693a      	ldr	r2, [r7, #16]
 8003174:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003176:	683b      	ldr	r3, [r7, #0]
 8003178:	685a      	ldr	r2, [r3, #4]
 800317a:	23c0      	movs	r3, #192	; 0xc0
 800317c:	029b      	lsls	r3, r3, #10
 800317e:	4013      	ands	r3, r2
 8003180:	d100      	bne.n	8003184 <HAL_GPIO_Init+0x174>
 8003182:	e09a      	b.n	80032ba <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003184:	4b54      	ldr	r3, [pc, #336]	; (80032d8 <HAL_GPIO_Init+0x2c8>)
 8003186:	699a      	ldr	r2, [r3, #24]
 8003188:	4b53      	ldr	r3, [pc, #332]	; (80032d8 <HAL_GPIO_Init+0x2c8>)
 800318a:	2101      	movs	r1, #1
 800318c:	430a      	orrs	r2, r1
 800318e:	619a      	str	r2, [r3, #24]
 8003190:	4b51      	ldr	r3, [pc, #324]	; (80032d8 <HAL_GPIO_Init+0x2c8>)
 8003192:	699b      	ldr	r3, [r3, #24]
 8003194:	2201      	movs	r2, #1
 8003196:	4013      	ands	r3, r2
 8003198:	60bb      	str	r3, [r7, #8]
 800319a:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 800319c:	4a4f      	ldr	r2, [pc, #316]	; (80032dc <HAL_GPIO_Init+0x2cc>)
 800319e:	697b      	ldr	r3, [r7, #20]
 80031a0:	089b      	lsrs	r3, r3, #2
 80031a2:	3302      	adds	r3, #2
 80031a4:	009b      	lsls	r3, r3, #2
 80031a6:	589b      	ldr	r3, [r3, r2]
 80031a8:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80031aa:	697b      	ldr	r3, [r7, #20]
 80031ac:	2203      	movs	r2, #3
 80031ae:	4013      	ands	r3, r2
 80031b0:	009b      	lsls	r3, r3, #2
 80031b2:	220f      	movs	r2, #15
 80031b4:	409a      	lsls	r2, r3
 80031b6:	0013      	movs	r3, r2
 80031b8:	43da      	mvns	r2, r3
 80031ba:	693b      	ldr	r3, [r7, #16]
 80031bc:	4013      	ands	r3, r2
 80031be:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80031c0:	687a      	ldr	r2, [r7, #4]
 80031c2:	2390      	movs	r3, #144	; 0x90
 80031c4:	05db      	lsls	r3, r3, #23
 80031c6:	429a      	cmp	r2, r3
 80031c8:	d013      	beq.n	80031f2 <HAL_GPIO_Init+0x1e2>
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	4a44      	ldr	r2, [pc, #272]	; (80032e0 <HAL_GPIO_Init+0x2d0>)
 80031ce:	4293      	cmp	r3, r2
 80031d0:	d00d      	beq.n	80031ee <HAL_GPIO_Init+0x1de>
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	4a43      	ldr	r2, [pc, #268]	; (80032e4 <HAL_GPIO_Init+0x2d4>)
 80031d6:	4293      	cmp	r3, r2
 80031d8:	d007      	beq.n	80031ea <HAL_GPIO_Init+0x1da>
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	4a42      	ldr	r2, [pc, #264]	; (80032e8 <HAL_GPIO_Init+0x2d8>)
 80031de:	4293      	cmp	r3, r2
 80031e0:	d101      	bne.n	80031e6 <HAL_GPIO_Init+0x1d6>
 80031e2:	2303      	movs	r3, #3
 80031e4:	e006      	b.n	80031f4 <HAL_GPIO_Init+0x1e4>
 80031e6:	2305      	movs	r3, #5
 80031e8:	e004      	b.n	80031f4 <HAL_GPIO_Init+0x1e4>
 80031ea:	2302      	movs	r3, #2
 80031ec:	e002      	b.n	80031f4 <HAL_GPIO_Init+0x1e4>
 80031ee:	2301      	movs	r3, #1
 80031f0:	e000      	b.n	80031f4 <HAL_GPIO_Init+0x1e4>
 80031f2:	2300      	movs	r3, #0
 80031f4:	697a      	ldr	r2, [r7, #20]
 80031f6:	2103      	movs	r1, #3
 80031f8:	400a      	ands	r2, r1
 80031fa:	0092      	lsls	r2, r2, #2
 80031fc:	4093      	lsls	r3, r2
 80031fe:	693a      	ldr	r2, [r7, #16]
 8003200:	4313      	orrs	r3, r2
 8003202:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003204:	4935      	ldr	r1, [pc, #212]	; (80032dc <HAL_GPIO_Init+0x2cc>)
 8003206:	697b      	ldr	r3, [r7, #20]
 8003208:	089b      	lsrs	r3, r3, #2
 800320a:	3302      	adds	r3, #2
 800320c:	009b      	lsls	r3, r3, #2
 800320e:	693a      	ldr	r2, [r7, #16]
 8003210:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003212:	4b36      	ldr	r3, [pc, #216]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	43da      	mvns	r2, r3
 800321c:	693b      	ldr	r3, [r7, #16]
 800321e:	4013      	ands	r3, r2
 8003220:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003222:	683b      	ldr	r3, [r7, #0]
 8003224:	685a      	ldr	r2, [r3, #4]
 8003226:	2380      	movs	r3, #128	; 0x80
 8003228:	025b      	lsls	r3, r3, #9
 800322a:	4013      	ands	r3, r2
 800322c:	d003      	beq.n	8003236 <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 800322e:	693a      	ldr	r2, [r7, #16]
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	4313      	orrs	r3, r2
 8003234:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003236:	4b2d      	ldr	r3, [pc, #180]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 8003238:	693a      	ldr	r2, [r7, #16]
 800323a:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 800323c:	4b2b      	ldr	r3, [pc, #172]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 800323e:	685b      	ldr	r3, [r3, #4]
 8003240:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003242:	68fb      	ldr	r3, [r7, #12]
 8003244:	43da      	mvns	r2, r3
 8003246:	693b      	ldr	r3, [r7, #16]
 8003248:	4013      	ands	r3, r2
 800324a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800324c:	683b      	ldr	r3, [r7, #0]
 800324e:	685a      	ldr	r2, [r3, #4]
 8003250:	2380      	movs	r3, #128	; 0x80
 8003252:	029b      	lsls	r3, r3, #10
 8003254:	4013      	ands	r3, r2
 8003256:	d003      	beq.n	8003260 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 8003258:	693a      	ldr	r2, [r7, #16]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	4313      	orrs	r3, r2
 800325e:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003260:	4b22      	ldr	r3, [pc, #136]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 8003262:	693a      	ldr	r2, [r7, #16]
 8003264:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003266:	4b21      	ldr	r3, [pc, #132]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 8003268:	689b      	ldr	r3, [r3, #8]
 800326a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	43da      	mvns	r2, r3
 8003270:	693b      	ldr	r3, [r7, #16]
 8003272:	4013      	ands	r3, r2
 8003274:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8003276:	683b      	ldr	r3, [r7, #0]
 8003278:	685a      	ldr	r2, [r3, #4]
 800327a:	2380      	movs	r3, #128	; 0x80
 800327c:	035b      	lsls	r3, r3, #13
 800327e:	4013      	ands	r3, r2
 8003280:	d003      	beq.n	800328a <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 8003282:	693a      	ldr	r2, [r7, #16]
 8003284:	68fb      	ldr	r3, [r7, #12]
 8003286:	4313      	orrs	r3, r2
 8003288:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 800328a:	4b18      	ldr	r3, [pc, #96]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 800328c:	693a      	ldr	r2, [r7, #16]
 800328e:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8003290:	4b16      	ldr	r3, [pc, #88]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 8003292:	68db      	ldr	r3, [r3, #12]
 8003294:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	43da      	mvns	r2, r3
 800329a:	693b      	ldr	r3, [r7, #16]
 800329c:	4013      	ands	r3, r2
 800329e:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80032a0:	683b      	ldr	r3, [r7, #0]
 80032a2:	685a      	ldr	r2, [r3, #4]
 80032a4:	2380      	movs	r3, #128	; 0x80
 80032a6:	039b      	lsls	r3, r3, #14
 80032a8:	4013      	ands	r3, r2
 80032aa:	d003      	beq.n	80032b4 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 80032ac:	693a      	ldr	r2, [r7, #16]
 80032ae:	68fb      	ldr	r3, [r7, #12]
 80032b0:	4313      	orrs	r3, r2
 80032b2:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80032b4:	4b0d      	ldr	r3, [pc, #52]	; (80032ec <HAL_GPIO_Init+0x2dc>)
 80032b6:	693a      	ldr	r2, [r7, #16]
 80032b8:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 80032ba:	697b      	ldr	r3, [r7, #20]
 80032bc:	3301      	adds	r3, #1
 80032be:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80032c0:	683b      	ldr	r3, [r7, #0]
 80032c2:	681a      	ldr	r2, [r3, #0]
 80032c4:	697b      	ldr	r3, [r7, #20]
 80032c6:	40da      	lsrs	r2, r3
 80032c8:	1e13      	subs	r3, r2, #0
 80032ca:	d000      	beq.n	80032ce <HAL_GPIO_Init+0x2be>
 80032cc:	e6a8      	b.n	8003020 <HAL_GPIO_Init+0x10>
  } 
}
 80032ce:	46c0      	nop			; (mov r8, r8)
 80032d0:	46c0      	nop			; (mov r8, r8)
 80032d2:	46bd      	mov	sp, r7
 80032d4:	b006      	add	sp, #24
 80032d6:	bd80      	pop	{r7, pc}
 80032d8:	40021000 	.word	0x40021000
 80032dc:	40010000 	.word	0x40010000
 80032e0:	48000400 	.word	0x48000400
 80032e4:	48000800 	.word	0x48000800
 80032e8:	48000c00 	.word	0x48000c00
 80032ec:	40010400 	.word	0x40010400

080032f0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80032f0:	b580      	push	{r7, lr}
 80032f2:	b082      	sub	sp, #8
 80032f4:	af00      	add	r7, sp, #0
 80032f6:	6078      	str	r0, [r7, #4]
 80032f8:	0008      	movs	r0, r1
 80032fa:	0011      	movs	r1, r2
 80032fc:	1cbb      	adds	r3, r7, #2
 80032fe:	1c02      	adds	r2, r0, #0
 8003300:	801a      	strh	r2, [r3, #0]
 8003302:	1c7b      	adds	r3, r7, #1
 8003304:	1c0a      	adds	r2, r1, #0
 8003306:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003308:	1c7b      	adds	r3, r7, #1
 800330a:	781b      	ldrb	r3, [r3, #0]
 800330c:	2b00      	cmp	r3, #0
 800330e:	d004      	beq.n	800331a <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8003310:	1cbb      	adds	r3, r7, #2
 8003312:	881a      	ldrh	r2, [r3, #0]
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003318:	e003      	b.n	8003322 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 800331a:	1cbb      	adds	r3, r7, #2
 800331c:	881a      	ldrh	r2, [r3, #0]
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	629a      	str	r2, [r3, #40]	; 0x28
}
 8003322:	46c0      	nop			; (mov r8, r8)
 8003324:	46bd      	mov	sp, r7
 8003326:	b002      	add	sp, #8
 8003328:	bd80      	pop	{r7, pc}

0800332a <HAL_GPIO_TogglePin>:
  * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
  * @param  GPIO_Pin specifies the pin to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800332a:	b580      	push	{r7, lr}
 800332c:	b084      	sub	sp, #16
 800332e:	af00      	add	r7, sp, #0
 8003330:	6078      	str	r0, [r7, #4]
 8003332:	000a      	movs	r2, r1
 8003334:	1cbb      	adds	r3, r7, #2
 8003336:	801a      	strh	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	695b      	ldr	r3, [r3, #20]
 800333c:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800333e:	1cbb      	adds	r3, r7, #2
 8003340:	881b      	ldrh	r3, [r3, #0]
 8003342:	68fa      	ldr	r2, [r7, #12]
 8003344:	4013      	ands	r3, r2
 8003346:	041a      	lsls	r2, r3, #16
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	43db      	mvns	r3, r3
 800334c:	1cb9      	adds	r1, r7, #2
 800334e:	8809      	ldrh	r1, [r1, #0]
 8003350:	400b      	ands	r3, r1
 8003352:	431a      	orrs	r2, r3
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	619a      	str	r2, [r3, #24]
}
 8003358:	46c0      	nop			; (mov r8, r8)
 800335a:	46bd      	mov	sp, r7
 800335c:	b004      	add	sp, #16
 800335e:	bd80      	pop	{r7, pc}

08003360 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003360:	b580      	push	{r7, lr}
 8003362:	b088      	sub	sp, #32
 8003364:	af00      	add	r7, sp, #0
 8003366:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	2b00      	cmp	r3, #0
 800336c:	d101      	bne.n	8003372 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800336e:	2301      	movs	r3, #1
 8003370:	e301      	b.n	8003976 <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	2201      	movs	r2, #1
 8003378:	4013      	ands	r3, r2
 800337a:	d100      	bne.n	800337e <HAL_RCC_OscConfig+0x1e>
 800337c:	e08d      	b.n	800349a <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 800337e:	4bc3      	ldr	r3, [pc, #780]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003380:	685b      	ldr	r3, [r3, #4]
 8003382:	220c      	movs	r2, #12
 8003384:	4013      	ands	r3, r2
 8003386:	2b04      	cmp	r3, #4
 8003388:	d00e      	beq.n	80033a8 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800338a:	4bc0      	ldr	r3, [pc, #768]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800338c:	685b      	ldr	r3, [r3, #4]
 800338e:	220c      	movs	r2, #12
 8003390:	4013      	ands	r3, r2
 8003392:	2b08      	cmp	r3, #8
 8003394:	d116      	bne.n	80033c4 <HAL_RCC_OscConfig+0x64>
 8003396:	4bbd      	ldr	r3, [pc, #756]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003398:	685a      	ldr	r2, [r3, #4]
 800339a:	2380      	movs	r3, #128	; 0x80
 800339c:	025b      	lsls	r3, r3, #9
 800339e:	401a      	ands	r2, r3
 80033a0:	2380      	movs	r3, #128	; 0x80
 80033a2:	025b      	lsls	r3, r3, #9
 80033a4:	429a      	cmp	r2, r3
 80033a6:	d10d      	bne.n	80033c4 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80033a8:	4bb8      	ldr	r3, [pc, #736]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033aa:	681a      	ldr	r2, [r3, #0]
 80033ac:	2380      	movs	r3, #128	; 0x80
 80033ae:	029b      	lsls	r3, r3, #10
 80033b0:	4013      	ands	r3, r2
 80033b2:	d100      	bne.n	80033b6 <HAL_RCC_OscConfig+0x56>
 80033b4:	e070      	b.n	8003498 <HAL_RCC_OscConfig+0x138>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	685b      	ldr	r3, [r3, #4]
 80033ba:	2b00      	cmp	r3, #0
 80033bc:	d000      	beq.n	80033c0 <HAL_RCC_OscConfig+0x60>
 80033be:	e06b      	b.n	8003498 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 80033c0:	2301      	movs	r3, #1
 80033c2:	e2d8      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	685b      	ldr	r3, [r3, #4]
 80033c8:	2b01      	cmp	r3, #1
 80033ca:	d107      	bne.n	80033dc <HAL_RCC_OscConfig+0x7c>
 80033cc:	4baf      	ldr	r3, [pc, #700]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033ce:	681a      	ldr	r2, [r3, #0]
 80033d0:	4bae      	ldr	r3, [pc, #696]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033d2:	2180      	movs	r1, #128	; 0x80
 80033d4:	0249      	lsls	r1, r1, #9
 80033d6:	430a      	orrs	r2, r1
 80033d8:	601a      	str	r2, [r3, #0]
 80033da:	e02f      	b.n	800343c <HAL_RCC_OscConfig+0xdc>
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	d10c      	bne.n	80033fe <HAL_RCC_OscConfig+0x9e>
 80033e4:	4ba9      	ldr	r3, [pc, #676]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033e6:	681a      	ldr	r2, [r3, #0]
 80033e8:	4ba8      	ldr	r3, [pc, #672]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033ea:	49a9      	ldr	r1, [pc, #676]	; (8003690 <HAL_RCC_OscConfig+0x330>)
 80033ec:	400a      	ands	r2, r1
 80033ee:	601a      	str	r2, [r3, #0]
 80033f0:	4ba6      	ldr	r3, [pc, #664]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033f2:	681a      	ldr	r2, [r3, #0]
 80033f4:	4ba5      	ldr	r3, [pc, #660]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80033f6:	49a7      	ldr	r1, [pc, #668]	; (8003694 <HAL_RCC_OscConfig+0x334>)
 80033f8:	400a      	ands	r2, r1
 80033fa:	601a      	str	r2, [r3, #0]
 80033fc:	e01e      	b.n	800343c <HAL_RCC_OscConfig+0xdc>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	685b      	ldr	r3, [r3, #4]
 8003402:	2b05      	cmp	r3, #5
 8003404:	d10e      	bne.n	8003424 <HAL_RCC_OscConfig+0xc4>
 8003406:	4ba1      	ldr	r3, [pc, #644]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003408:	681a      	ldr	r2, [r3, #0]
 800340a:	4ba0      	ldr	r3, [pc, #640]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800340c:	2180      	movs	r1, #128	; 0x80
 800340e:	02c9      	lsls	r1, r1, #11
 8003410:	430a      	orrs	r2, r1
 8003412:	601a      	str	r2, [r3, #0]
 8003414:	4b9d      	ldr	r3, [pc, #628]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003416:	681a      	ldr	r2, [r3, #0]
 8003418:	4b9c      	ldr	r3, [pc, #624]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800341a:	2180      	movs	r1, #128	; 0x80
 800341c:	0249      	lsls	r1, r1, #9
 800341e:	430a      	orrs	r2, r1
 8003420:	601a      	str	r2, [r3, #0]
 8003422:	e00b      	b.n	800343c <HAL_RCC_OscConfig+0xdc>
 8003424:	4b99      	ldr	r3, [pc, #612]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003426:	681a      	ldr	r2, [r3, #0]
 8003428:	4b98      	ldr	r3, [pc, #608]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800342a:	4999      	ldr	r1, [pc, #612]	; (8003690 <HAL_RCC_OscConfig+0x330>)
 800342c:	400a      	ands	r2, r1
 800342e:	601a      	str	r2, [r3, #0]
 8003430:	4b96      	ldr	r3, [pc, #600]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003432:	681a      	ldr	r2, [r3, #0]
 8003434:	4b95      	ldr	r3, [pc, #596]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003436:	4997      	ldr	r1, [pc, #604]	; (8003694 <HAL_RCC_OscConfig+0x334>)
 8003438:	400a      	ands	r2, r1
 800343a:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	685b      	ldr	r3, [r3, #4]
 8003440:	2b00      	cmp	r3, #0
 8003442:	d014      	beq.n	800346e <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003444:	f7ff fab4 	bl	80029b0 <HAL_GetTick>
 8003448:	0003      	movs	r3, r0
 800344a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800344c:	e008      	b.n	8003460 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800344e:	f7ff faaf 	bl	80029b0 <HAL_GetTick>
 8003452:	0002      	movs	r2, r0
 8003454:	69bb      	ldr	r3, [r7, #24]
 8003456:	1ad3      	subs	r3, r2, r3
 8003458:	2b64      	cmp	r3, #100	; 0x64
 800345a:	d901      	bls.n	8003460 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 800345c:	2303      	movs	r3, #3
 800345e:	e28a      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003460:	4b8a      	ldr	r3, [pc, #552]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003462:	681a      	ldr	r2, [r3, #0]
 8003464:	2380      	movs	r3, #128	; 0x80
 8003466:	029b      	lsls	r3, r3, #10
 8003468:	4013      	ands	r3, r2
 800346a:	d0f0      	beq.n	800344e <HAL_RCC_OscConfig+0xee>
 800346c:	e015      	b.n	800349a <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800346e:	f7ff fa9f 	bl	80029b0 <HAL_GetTick>
 8003472:	0003      	movs	r3, r0
 8003474:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003476:	e008      	b.n	800348a <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003478:	f7ff fa9a 	bl	80029b0 <HAL_GetTick>
 800347c:	0002      	movs	r2, r0
 800347e:	69bb      	ldr	r3, [r7, #24]
 8003480:	1ad3      	subs	r3, r2, r3
 8003482:	2b64      	cmp	r3, #100	; 0x64
 8003484:	d901      	bls.n	800348a <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 8003486:	2303      	movs	r3, #3
 8003488:	e275      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800348a:	4b80      	ldr	r3, [pc, #512]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	2380      	movs	r3, #128	; 0x80
 8003490:	029b      	lsls	r3, r3, #10
 8003492:	4013      	ands	r3, r2
 8003494:	d1f0      	bne.n	8003478 <HAL_RCC_OscConfig+0x118>
 8003496:	e000      	b.n	800349a <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003498:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	2202      	movs	r2, #2
 80034a0:	4013      	ands	r3, r2
 80034a2:	d100      	bne.n	80034a6 <HAL_RCC_OscConfig+0x146>
 80034a4:	e069      	b.n	800357a <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80034a6:	4b79      	ldr	r3, [pc, #484]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034a8:	685b      	ldr	r3, [r3, #4]
 80034aa:	220c      	movs	r2, #12
 80034ac:	4013      	ands	r3, r2
 80034ae:	d00b      	beq.n	80034c8 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80034b0:	4b76      	ldr	r3, [pc, #472]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	220c      	movs	r2, #12
 80034b6:	4013      	ands	r3, r2
 80034b8:	2b08      	cmp	r3, #8
 80034ba:	d11c      	bne.n	80034f6 <HAL_RCC_OscConfig+0x196>
 80034bc:	4b73      	ldr	r3, [pc, #460]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034be:	685a      	ldr	r2, [r3, #4]
 80034c0:	2380      	movs	r3, #128	; 0x80
 80034c2:	025b      	lsls	r3, r3, #9
 80034c4:	4013      	ands	r3, r2
 80034c6:	d116      	bne.n	80034f6 <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80034c8:	4b70      	ldr	r3, [pc, #448]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	2202      	movs	r2, #2
 80034ce:	4013      	ands	r3, r2
 80034d0:	d005      	beq.n	80034de <HAL_RCC_OscConfig+0x17e>
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	68db      	ldr	r3, [r3, #12]
 80034d6:	2b01      	cmp	r3, #1
 80034d8:	d001      	beq.n	80034de <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 80034da:	2301      	movs	r3, #1
 80034dc:	e24b      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80034de:	4b6b      	ldr	r3, [pc, #428]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	22f8      	movs	r2, #248	; 0xf8
 80034e4:	4393      	bics	r3, r2
 80034e6:	0019      	movs	r1, r3
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	691b      	ldr	r3, [r3, #16]
 80034ec:	00da      	lsls	r2, r3, #3
 80034ee:	4b67      	ldr	r3, [pc, #412]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80034f0:	430a      	orrs	r2, r1
 80034f2:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80034f4:	e041      	b.n	800357a <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	68db      	ldr	r3, [r3, #12]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d024      	beq.n	8003548 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80034fe:	4b63      	ldr	r3, [pc, #396]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003500:	681a      	ldr	r2, [r3, #0]
 8003502:	4b62      	ldr	r3, [pc, #392]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003504:	2101      	movs	r1, #1
 8003506:	430a      	orrs	r2, r1
 8003508:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800350a:	f7ff fa51 	bl	80029b0 <HAL_GetTick>
 800350e:	0003      	movs	r3, r0
 8003510:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003512:	e008      	b.n	8003526 <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003514:	f7ff fa4c 	bl	80029b0 <HAL_GetTick>
 8003518:	0002      	movs	r2, r0
 800351a:	69bb      	ldr	r3, [r7, #24]
 800351c:	1ad3      	subs	r3, r2, r3
 800351e:	2b02      	cmp	r3, #2
 8003520:	d901      	bls.n	8003526 <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8003522:	2303      	movs	r3, #3
 8003524:	e227      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003526:	4b59      	ldr	r3, [pc, #356]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	2202      	movs	r2, #2
 800352c:	4013      	ands	r3, r2
 800352e:	d0f1      	beq.n	8003514 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003530:	4b56      	ldr	r3, [pc, #344]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	22f8      	movs	r2, #248	; 0xf8
 8003536:	4393      	bics	r3, r2
 8003538:	0019      	movs	r1, r3
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	691b      	ldr	r3, [r3, #16]
 800353e:	00da      	lsls	r2, r3, #3
 8003540:	4b52      	ldr	r3, [pc, #328]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003542:	430a      	orrs	r2, r1
 8003544:	601a      	str	r2, [r3, #0]
 8003546:	e018      	b.n	800357a <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8003548:	4b50      	ldr	r3, [pc, #320]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800354a:	681a      	ldr	r2, [r3, #0]
 800354c:	4b4f      	ldr	r3, [pc, #316]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800354e:	2101      	movs	r1, #1
 8003550:	438a      	bics	r2, r1
 8003552:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003554:	f7ff fa2c 	bl	80029b0 <HAL_GetTick>
 8003558:	0003      	movs	r3, r0
 800355a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800355c:	e008      	b.n	8003570 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800355e:	f7ff fa27 	bl	80029b0 <HAL_GetTick>
 8003562:	0002      	movs	r2, r0
 8003564:	69bb      	ldr	r3, [r7, #24]
 8003566:	1ad3      	subs	r3, r2, r3
 8003568:	2b02      	cmp	r3, #2
 800356a:	d901      	bls.n	8003570 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 800356c:	2303      	movs	r3, #3
 800356e:	e202      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003570:	4b46      	ldr	r3, [pc, #280]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	2202      	movs	r2, #2
 8003576:	4013      	ands	r3, r2
 8003578:	d1f1      	bne.n	800355e <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	2208      	movs	r2, #8
 8003580:	4013      	ands	r3, r2
 8003582:	d036      	beq.n	80035f2 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	69db      	ldr	r3, [r3, #28]
 8003588:	2b00      	cmp	r3, #0
 800358a:	d019      	beq.n	80035c0 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800358c:	4b3f      	ldr	r3, [pc, #252]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 800358e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003590:	4b3e      	ldr	r3, [pc, #248]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003592:	2101      	movs	r1, #1
 8003594:	430a      	orrs	r2, r1
 8003596:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003598:	f7ff fa0a 	bl	80029b0 <HAL_GetTick>
 800359c:	0003      	movs	r3, r0
 800359e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80035a0:	e008      	b.n	80035b4 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80035a2:	f7ff fa05 	bl	80029b0 <HAL_GetTick>
 80035a6:	0002      	movs	r2, r0
 80035a8:	69bb      	ldr	r3, [r7, #24]
 80035aa:	1ad3      	subs	r3, r2, r3
 80035ac:	2b02      	cmp	r3, #2
 80035ae:	d901      	bls.n	80035b4 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 80035b0:	2303      	movs	r3, #3
 80035b2:	e1e0      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80035b4:	4b35      	ldr	r3, [pc, #212]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80035b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035b8:	2202      	movs	r2, #2
 80035ba:	4013      	ands	r3, r2
 80035bc:	d0f1      	beq.n	80035a2 <HAL_RCC_OscConfig+0x242>
 80035be:	e018      	b.n	80035f2 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80035c0:	4b32      	ldr	r3, [pc, #200]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80035c2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80035c4:	4b31      	ldr	r3, [pc, #196]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80035c6:	2101      	movs	r1, #1
 80035c8:	438a      	bics	r2, r1
 80035ca:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80035cc:	f7ff f9f0 	bl	80029b0 <HAL_GetTick>
 80035d0:	0003      	movs	r3, r0
 80035d2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80035d4:	e008      	b.n	80035e8 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80035d6:	f7ff f9eb 	bl	80029b0 <HAL_GetTick>
 80035da:	0002      	movs	r2, r0
 80035dc:	69bb      	ldr	r3, [r7, #24]
 80035de:	1ad3      	subs	r3, r2, r3
 80035e0:	2b02      	cmp	r3, #2
 80035e2:	d901      	bls.n	80035e8 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 80035e4:	2303      	movs	r3, #3
 80035e6:	e1c6      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80035e8:	4b28      	ldr	r3, [pc, #160]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 80035ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035ec:	2202      	movs	r2, #2
 80035ee:	4013      	ands	r3, r2
 80035f0:	d1f1      	bne.n	80035d6 <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	2204      	movs	r2, #4
 80035f8:	4013      	ands	r3, r2
 80035fa:	d100      	bne.n	80035fe <HAL_RCC_OscConfig+0x29e>
 80035fc:	e0b4      	b.n	8003768 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 80035fe:	201f      	movs	r0, #31
 8003600:	183b      	adds	r3, r7, r0
 8003602:	2200      	movs	r2, #0
 8003604:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003606:	4b21      	ldr	r3, [pc, #132]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003608:	69da      	ldr	r2, [r3, #28]
 800360a:	2380      	movs	r3, #128	; 0x80
 800360c:	055b      	lsls	r3, r3, #21
 800360e:	4013      	ands	r3, r2
 8003610:	d110      	bne.n	8003634 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003612:	4b1e      	ldr	r3, [pc, #120]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003614:	69da      	ldr	r2, [r3, #28]
 8003616:	4b1d      	ldr	r3, [pc, #116]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003618:	2180      	movs	r1, #128	; 0x80
 800361a:	0549      	lsls	r1, r1, #21
 800361c:	430a      	orrs	r2, r1
 800361e:	61da      	str	r2, [r3, #28]
 8003620:	4b1a      	ldr	r3, [pc, #104]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003622:	69da      	ldr	r2, [r3, #28]
 8003624:	2380      	movs	r3, #128	; 0x80
 8003626:	055b      	lsls	r3, r3, #21
 8003628:	4013      	ands	r3, r2
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 800362e:	183b      	adds	r3, r7, r0
 8003630:	2201      	movs	r2, #1
 8003632:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003634:	4b18      	ldr	r3, [pc, #96]	; (8003698 <HAL_RCC_OscConfig+0x338>)
 8003636:	681a      	ldr	r2, [r3, #0]
 8003638:	2380      	movs	r3, #128	; 0x80
 800363a:	005b      	lsls	r3, r3, #1
 800363c:	4013      	ands	r3, r2
 800363e:	d11a      	bne.n	8003676 <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003640:	4b15      	ldr	r3, [pc, #84]	; (8003698 <HAL_RCC_OscConfig+0x338>)
 8003642:	681a      	ldr	r2, [r3, #0]
 8003644:	4b14      	ldr	r3, [pc, #80]	; (8003698 <HAL_RCC_OscConfig+0x338>)
 8003646:	2180      	movs	r1, #128	; 0x80
 8003648:	0049      	lsls	r1, r1, #1
 800364a:	430a      	orrs	r2, r1
 800364c:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800364e:	f7ff f9af 	bl	80029b0 <HAL_GetTick>
 8003652:	0003      	movs	r3, r0
 8003654:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003656:	e008      	b.n	800366a <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003658:	f7ff f9aa 	bl	80029b0 <HAL_GetTick>
 800365c:	0002      	movs	r2, r0
 800365e:	69bb      	ldr	r3, [r7, #24]
 8003660:	1ad3      	subs	r3, r2, r3
 8003662:	2b64      	cmp	r3, #100	; 0x64
 8003664:	d901      	bls.n	800366a <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 8003666:	2303      	movs	r3, #3
 8003668:	e185      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800366a:	4b0b      	ldr	r3, [pc, #44]	; (8003698 <HAL_RCC_OscConfig+0x338>)
 800366c:	681a      	ldr	r2, [r3, #0]
 800366e:	2380      	movs	r3, #128	; 0x80
 8003670:	005b      	lsls	r3, r3, #1
 8003672:	4013      	ands	r3, r2
 8003674:	d0f0      	beq.n	8003658 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	689b      	ldr	r3, [r3, #8]
 800367a:	2b01      	cmp	r3, #1
 800367c:	d10e      	bne.n	800369c <HAL_RCC_OscConfig+0x33c>
 800367e:	4b03      	ldr	r3, [pc, #12]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003680:	6a1a      	ldr	r2, [r3, #32]
 8003682:	4b02      	ldr	r3, [pc, #8]	; (800368c <HAL_RCC_OscConfig+0x32c>)
 8003684:	2101      	movs	r1, #1
 8003686:	430a      	orrs	r2, r1
 8003688:	621a      	str	r2, [r3, #32]
 800368a:	e035      	b.n	80036f8 <HAL_RCC_OscConfig+0x398>
 800368c:	40021000 	.word	0x40021000
 8003690:	fffeffff 	.word	0xfffeffff
 8003694:	fffbffff 	.word	0xfffbffff
 8003698:	40007000 	.word	0x40007000
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	689b      	ldr	r3, [r3, #8]
 80036a0:	2b00      	cmp	r3, #0
 80036a2:	d10c      	bne.n	80036be <HAL_RCC_OscConfig+0x35e>
 80036a4:	4bb6      	ldr	r3, [pc, #728]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036a6:	6a1a      	ldr	r2, [r3, #32]
 80036a8:	4bb5      	ldr	r3, [pc, #724]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036aa:	2101      	movs	r1, #1
 80036ac:	438a      	bics	r2, r1
 80036ae:	621a      	str	r2, [r3, #32]
 80036b0:	4bb3      	ldr	r3, [pc, #716]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036b2:	6a1a      	ldr	r2, [r3, #32]
 80036b4:	4bb2      	ldr	r3, [pc, #712]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036b6:	2104      	movs	r1, #4
 80036b8:	438a      	bics	r2, r1
 80036ba:	621a      	str	r2, [r3, #32]
 80036bc:	e01c      	b.n	80036f8 <HAL_RCC_OscConfig+0x398>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	689b      	ldr	r3, [r3, #8]
 80036c2:	2b05      	cmp	r3, #5
 80036c4:	d10c      	bne.n	80036e0 <HAL_RCC_OscConfig+0x380>
 80036c6:	4bae      	ldr	r3, [pc, #696]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036c8:	6a1a      	ldr	r2, [r3, #32]
 80036ca:	4bad      	ldr	r3, [pc, #692]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036cc:	2104      	movs	r1, #4
 80036ce:	430a      	orrs	r2, r1
 80036d0:	621a      	str	r2, [r3, #32]
 80036d2:	4bab      	ldr	r3, [pc, #684]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036d4:	6a1a      	ldr	r2, [r3, #32]
 80036d6:	4baa      	ldr	r3, [pc, #680]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036d8:	2101      	movs	r1, #1
 80036da:	430a      	orrs	r2, r1
 80036dc:	621a      	str	r2, [r3, #32]
 80036de:	e00b      	b.n	80036f8 <HAL_RCC_OscConfig+0x398>
 80036e0:	4ba7      	ldr	r3, [pc, #668]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036e2:	6a1a      	ldr	r2, [r3, #32]
 80036e4:	4ba6      	ldr	r3, [pc, #664]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036e6:	2101      	movs	r1, #1
 80036e8:	438a      	bics	r2, r1
 80036ea:	621a      	str	r2, [r3, #32]
 80036ec:	4ba4      	ldr	r3, [pc, #656]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036ee:	6a1a      	ldr	r2, [r3, #32]
 80036f0:	4ba3      	ldr	r3, [pc, #652]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80036f2:	2104      	movs	r1, #4
 80036f4:	438a      	bics	r2, r1
 80036f6:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	689b      	ldr	r3, [r3, #8]
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	d014      	beq.n	800372a <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003700:	f7ff f956 	bl	80029b0 <HAL_GetTick>
 8003704:	0003      	movs	r3, r0
 8003706:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003708:	e009      	b.n	800371e <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800370a:	f7ff f951 	bl	80029b0 <HAL_GetTick>
 800370e:	0002      	movs	r2, r0
 8003710:	69bb      	ldr	r3, [r7, #24]
 8003712:	1ad3      	subs	r3, r2, r3
 8003714:	4a9b      	ldr	r2, [pc, #620]	; (8003984 <HAL_RCC_OscConfig+0x624>)
 8003716:	4293      	cmp	r3, r2
 8003718:	d901      	bls.n	800371e <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 800371a:	2303      	movs	r3, #3
 800371c:	e12b      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800371e:	4b98      	ldr	r3, [pc, #608]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003720:	6a1b      	ldr	r3, [r3, #32]
 8003722:	2202      	movs	r2, #2
 8003724:	4013      	ands	r3, r2
 8003726:	d0f0      	beq.n	800370a <HAL_RCC_OscConfig+0x3aa>
 8003728:	e013      	b.n	8003752 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800372a:	f7ff f941 	bl	80029b0 <HAL_GetTick>
 800372e:	0003      	movs	r3, r0
 8003730:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003732:	e009      	b.n	8003748 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003734:	f7ff f93c 	bl	80029b0 <HAL_GetTick>
 8003738:	0002      	movs	r2, r0
 800373a:	69bb      	ldr	r3, [r7, #24]
 800373c:	1ad3      	subs	r3, r2, r3
 800373e:	4a91      	ldr	r2, [pc, #580]	; (8003984 <HAL_RCC_OscConfig+0x624>)
 8003740:	4293      	cmp	r3, r2
 8003742:	d901      	bls.n	8003748 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8003744:	2303      	movs	r3, #3
 8003746:	e116      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003748:	4b8d      	ldr	r3, [pc, #564]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800374a:	6a1b      	ldr	r3, [r3, #32]
 800374c:	2202      	movs	r2, #2
 800374e:	4013      	ands	r3, r2
 8003750:	d1f0      	bne.n	8003734 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003752:	231f      	movs	r3, #31
 8003754:	18fb      	adds	r3, r7, r3
 8003756:	781b      	ldrb	r3, [r3, #0]
 8003758:	2b01      	cmp	r3, #1
 800375a:	d105      	bne.n	8003768 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800375c:	4b88      	ldr	r3, [pc, #544]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800375e:	69da      	ldr	r2, [r3, #28]
 8003760:	4b87      	ldr	r3, [pc, #540]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003762:	4989      	ldr	r1, [pc, #548]	; (8003988 <HAL_RCC_OscConfig+0x628>)
 8003764:	400a      	ands	r2, r1
 8003766:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	2210      	movs	r2, #16
 800376e:	4013      	ands	r3, r2
 8003770:	d063      	beq.n	800383a <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	695b      	ldr	r3, [r3, #20]
 8003776:	2b01      	cmp	r3, #1
 8003778:	d12a      	bne.n	80037d0 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800377a:	4b81      	ldr	r3, [pc, #516]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800377c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800377e:	4b80      	ldr	r3, [pc, #512]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003780:	2104      	movs	r1, #4
 8003782:	430a      	orrs	r2, r1
 8003784:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8003786:	4b7e      	ldr	r3, [pc, #504]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003788:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800378a:	4b7d      	ldr	r3, [pc, #500]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800378c:	2101      	movs	r1, #1
 800378e:	430a      	orrs	r2, r1
 8003790:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003792:	f7ff f90d 	bl	80029b0 <HAL_GetTick>
 8003796:	0003      	movs	r3, r0
 8003798:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800379a:	e008      	b.n	80037ae <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800379c:	f7ff f908 	bl	80029b0 <HAL_GetTick>
 80037a0:	0002      	movs	r2, r0
 80037a2:	69bb      	ldr	r3, [r7, #24]
 80037a4:	1ad3      	subs	r3, r2, r3
 80037a6:	2b02      	cmp	r3, #2
 80037a8:	d901      	bls.n	80037ae <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 80037aa:	2303      	movs	r3, #3
 80037ac:	e0e3      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80037ae:	4b74      	ldr	r3, [pc, #464]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80037b2:	2202      	movs	r2, #2
 80037b4:	4013      	ands	r3, r2
 80037b6:	d0f1      	beq.n	800379c <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80037b8:	4b71      	ldr	r3, [pc, #452]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80037bc:	22f8      	movs	r2, #248	; 0xf8
 80037be:	4393      	bics	r3, r2
 80037c0:	0019      	movs	r1, r3
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	699b      	ldr	r3, [r3, #24]
 80037c6:	00da      	lsls	r2, r3, #3
 80037c8:	4b6d      	ldr	r3, [pc, #436]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037ca:	430a      	orrs	r2, r1
 80037cc:	635a      	str	r2, [r3, #52]	; 0x34
 80037ce:	e034      	b.n	800383a <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	695b      	ldr	r3, [r3, #20]
 80037d4:	3305      	adds	r3, #5
 80037d6:	d111      	bne.n	80037fc <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 80037d8:	4b69      	ldr	r3, [pc, #420]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80037dc:	4b68      	ldr	r3, [pc, #416]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037de:	2104      	movs	r1, #4
 80037e0:	438a      	bics	r2, r1
 80037e2:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80037e4:	4b66      	ldr	r3, [pc, #408]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80037e8:	22f8      	movs	r2, #248	; 0xf8
 80037ea:	4393      	bics	r3, r2
 80037ec:	0019      	movs	r1, r3
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	699b      	ldr	r3, [r3, #24]
 80037f2:	00da      	lsls	r2, r3, #3
 80037f4:	4b62      	ldr	r3, [pc, #392]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037f6:	430a      	orrs	r2, r1
 80037f8:	635a      	str	r2, [r3, #52]	; 0x34
 80037fa:	e01e      	b.n	800383a <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80037fc:	4b60      	ldr	r3, [pc, #384]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80037fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003800:	4b5f      	ldr	r3, [pc, #380]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003802:	2104      	movs	r1, #4
 8003804:	430a      	orrs	r2, r1
 8003806:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003808:	4b5d      	ldr	r3, [pc, #372]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800380a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800380c:	4b5c      	ldr	r3, [pc, #368]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800380e:	2101      	movs	r1, #1
 8003810:	438a      	bics	r2, r1
 8003812:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003814:	f7ff f8cc 	bl	80029b0 <HAL_GetTick>
 8003818:	0003      	movs	r3, r0
 800381a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800381c:	e008      	b.n	8003830 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800381e:	f7ff f8c7 	bl	80029b0 <HAL_GetTick>
 8003822:	0002      	movs	r2, r0
 8003824:	69bb      	ldr	r3, [r7, #24]
 8003826:	1ad3      	subs	r3, r2, r3
 8003828:	2b02      	cmp	r3, #2
 800382a:	d901      	bls.n	8003830 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 800382c:	2303      	movs	r3, #3
 800382e:	e0a2      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003830:	4b53      	ldr	r3, [pc, #332]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003832:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003834:	2202      	movs	r2, #2
 8003836:	4013      	ands	r3, r2
 8003838:	d1f1      	bne.n	800381e <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	6a1b      	ldr	r3, [r3, #32]
 800383e:	2b00      	cmp	r3, #0
 8003840:	d100      	bne.n	8003844 <HAL_RCC_OscConfig+0x4e4>
 8003842:	e097      	b.n	8003974 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003844:	4b4e      	ldr	r3, [pc, #312]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003846:	685b      	ldr	r3, [r3, #4]
 8003848:	220c      	movs	r2, #12
 800384a:	4013      	ands	r3, r2
 800384c:	2b08      	cmp	r3, #8
 800384e:	d100      	bne.n	8003852 <HAL_RCC_OscConfig+0x4f2>
 8003850:	e06b      	b.n	800392a <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	6a1b      	ldr	r3, [r3, #32]
 8003856:	2b02      	cmp	r3, #2
 8003858:	d14c      	bne.n	80038f4 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800385a:	4b49      	ldr	r3, [pc, #292]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800385c:	681a      	ldr	r2, [r3, #0]
 800385e:	4b48      	ldr	r3, [pc, #288]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003860:	494a      	ldr	r1, [pc, #296]	; (800398c <HAL_RCC_OscConfig+0x62c>)
 8003862:	400a      	ands	r2, r1
 8003864:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003866:	f7ff f8a3 	bl	80029b0 <HAL_GetTick>
 800386a:	0003      	movs	r3, r0
 800386c:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800386e:	e008      	b.n	8003882 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003870:	f7ff f89e 	bl	80029b0 <HAL_GetTick>
 8003874:	0002      	movs	r2, r0
 8003876:	69bb      	ldr	r3, [r7, #24]
 8003878:	1ad3      	subs	r3, r2, r3
 800387a:	2b02      	cmp	r3, #2
 800387c:	d901      	bls.n	8003882 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 800387e:	2303      	movs	r3, #3
 8003880:	e079      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003882:	4b3f      	ldr	r3, [pc, #252]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003884:	681a      	ldr	r2, [r3, #0]
 8003886:	2380      	movs	r3, #128	; 0x80
 8003888:	049b      	lsls	r3, r3, #18
 800388a:	4013      	ands	r3, r2
 800388c:	d1f0      	bne.n	8003870 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800388e:	4b3c      	ldr	r3, [pc, #240]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003892:	220f      	movs	r2, #15
 8003894:	4393      	bics	r3, r2
 8003896:	0019      	movs	r1, r3
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800389c:	4b38      	ldr	r3, [pc, #224]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800389e:	430a      	orrs	r2, r1
 80038a0:	62da      	str	r2, [r3, #44]	; 0x2c
 80038a2:	4b37      	ldr	r3, [pc, #220]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038a4:	685b      	ldr	r3, [r3, #4]
 80038a6:	4a3a      	ldr	r2, [pc, #232]	; (8003990 <HAL_RCC_OscConfig+0x630>)
 80038a8:	4013      	ands	r3, r2
 80038aa:	0019      	movs	r1, r3
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b4:	431a      	orrs	r2, r3
 80038b6:	4b32      	ldr	r3, [pc, #200]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038b8:	430a      	orrs	r2, r1
 80038ba:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80038bc:	4b30      	ldr	r3, [pc, #192]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038be:	681a      	ldr	r2, [r3, #0]
 80038c0:	4b2f      	ldr	r3, [pc, #188]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038c2:	2180      	movs	r1, #128	; 0x80
 80038c4:	0449      	lsls	r1, r1, #17
 80038c6:	430a      	orrs	r2, r1
 80038c8:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80038ca:	f7ff f871 	bl	80029b0 <HAL_GetTick>
 80038ce:	0003      	movs	r3, r0
 80038d0:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80038d2:	e008      	b.n	80038e6 <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80038d4:	f7ff f86c 	bl	80029b0 <HAL_GetTick>
 80038d8:	0002      	movs	r2, r0
 80038da:	69bb      	ldr	r3, [r7, #24]
 80038dc:	1ad3      	subs	r3, r2, r3
 80038de:	2b02      	cmp	r3, #2
 80038e0:	d901      	bls.n	80038e6 <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 80038e2:	2303      	movs	r3, #3
 80038e4:	e047      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80038e6:	4b26      	ldr	r3, [pc, #152]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038e8:	681a      	ldr	r2, [r3, #0]
 80038ea:	2380      	movs	r3, #128	; 0x80
 80038ec:	049b      	lsls	r3, r3, #18
 80038ee:	4013      	ands	r3, r2
 80038f0:	d0f0      	beq.n	80038d4 <HAL_RCC_OscConfig+0x574>
 80038f2:	e03f      	b.n	8003974 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80038f4:	4b22      	ldr	r3, [pc, #136]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038f6:	681a      	ldr	r2, [r3, #0]
 80038f8:	4b21      	ldr	r3, [pc, #132]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 80038fa:	4924      	ldr	r1, [pc, #144]	; (800398c <HAL_RCC_OscConfig+0x62c>)
 80038fc:	400a      	ands	r2, r1
 80038fe:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003900:	f7ff f856 	bl	80029b0 <HAL_GetTick>
 8003904:	0003      	movs	r3, r0
 8003906:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003908:	e008      	b.n	800391c <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800390a:	f7ff f851 	bl	80029b0 <HAL_GetTick>
 800390e:	0002      	movs	r2, r0
 8003910:	69bb      	ldr	r3, [r7, #24]
 8003912:	1ad3      	subs	r3, r2, r3
 8003914:	2b02      	cmp	r3, #2
 8003916:	d901      	bls.n	800391c <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8003918:	2303      	movs	r3, #3
 800391a:	e02c      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800391c:	4b18      	ldr	r3, [pc, #96]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800391e:	681a      	ldr	r2, [r3, #0]
 8003920:	2380      	movs	r3, #128	; 0x80
 8003922:	049b      	lsls	r3, r3, #18
 8003924:	4013      	ands	r3, r2
 8003926:	d1f0      	bne.n	800390a <HAL_RCC_OscConfig+0x5aa>
 8003928:	e024      	b.n	8003974 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	6a1b      	ldr	r3, [r3, #32]
 800392e:	2b01      	cmp	r3, #1
 8003930:	d101      	bne.n	8003936 <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8003932:	2301      	movs	r3, #1
 8003934:	e01f      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003936:	4b12      	ldr	r3, [pc, #72]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 8003938:	685b      	ldr	r3, [r3, #4]
 800393a:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 800393c:	4b10      	ldr	r3, [pc, #64]	; (8003980 <HAL_RCC_OscConfig+0x620>)
 800393e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003940:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003942:	697a      	ldr	r2, [r7, #20]
 8003944:	2380      	movs	r3, #128	; 0x80
 8003946:	025b      	lsls	r3, r3, #9
 8003948:	401a      	ands	r2, r3
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800394e:	429a      	cmp	r2, r3
 8003950:	d10e      	bne.n	8003970 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003952:	693b      	ldr	r3, [r7, #16]
 8003954:	220f      	movs	r2, #15
 8003956:	401a      	ands	r2, r3
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800395c:	429a      	cmp	r2, r3
 800395e:	d107      	bne.n	8003970 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003960:	697a      	ldr	r2, [r7, #20]
 8003962:	23f0      	movs	r3, #240	; 0xf0
 8003964:	039b      	lsls	r3, r3, #14
 8003966:	401a      	ands	r2, r3
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800396c:	429a      	cmp	r2, r3
 800396e:	d001      	beq.n	8003974 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8003970:	2301      	movs	r3, #1
 8003972:	e000      	b.n	8003976 <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8003974:	2300      	movs	r3, #0
}
 8003976:	0018      	movs	r0, r3
 8003978:	46bd      	mov	sp, r7
 800397a:	b008      	add	sp, #32
 800397c:	bd80      	pop	{r7, pc}
 800397e:	46c0      	nop			; (mov r8, r8)
 8003980:	40021000 	.word	0x40021000
 8003984:	00001388 	.word	0x00001388
 8003988:	efffffff 	.word	0xefffffff
 800398c:	feffffff 	.word	0xfeffffff
 8003990:	ffc2ffff 	.word	0xffc2ffff

08003994 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003994:	b580      	push	{r7, lr}
 8003996:	b084      	sub	sp, #16
 8003998:	af00      	add	r7, sp, #0
 800399a:	6078      	str	r0, [r7, #4]
 800399c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d101      	bne.n	80039a8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80039a4:	2301      	movs	r3, #1
 80039a6:	e0b3      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80039a8:	4b5b      	ldr	r3, [pc, #364]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	2201      	movs	r2, #1
 80039ae:	4013      	ands	r3, r2
 80039b0:	683a      	ldr	r2, [r7, #0]
 80039b2:	429a      	cmp	r2, r3
 80039b4:	d911      	bls.n	80039da <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80039b6:	4b58      	ldr	r3, [pc, #352]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	2201      	movs	r2, #1
 80039bc:	4393      	bics	r3, r2
 80039be:	0019      	movs	r1, r3
 80039c0:	4b55      	ldr	r3, [pc, #340]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 80039c2:	683a      	ldr	r2, [r7, #0]
 80039c4:	430a      	orrs	r2, r1
 80039c6:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80039c8:	4b53      	ldr	r3, [pc, #332]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	2201      	movs	r2, #1
 80039ce:	4013      	ands	r3, r2
 80039d0:	683a      	ldr	r2, [r7, #0]
 80039d2:	429a      	cmp	r2, r3
 80039d4:	d001      	beq.n	80039da <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 80039d6:	2301      	movs	r3, #1
 80039d8:	e09a      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	2202      	movs	r2, #2
 80039e0:	4013      	ands	r3, r2
 80039e2:	d015      	beq.n	8003a10 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	2204      	movs	r2, #4
 80039ea:	4013      	ands	r3, r2
 80039ec:	d006      	beq.n	80039fc <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 80039ee:	4b4b      	ldr	r3, [pc, #300]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 80039f0:	685a      	ldr	r2, [r3, #4]
 80039f2:	4b4a      	ldr	r3, [pc, #296]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 80039f4:	21e0      	movs	r1, #224	; 0xe0
 80039f6:	00c9      	lsls	r1, r1, #3
 80039f8:	430a      	orrs	r2, r1
 80039fa:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80039fc:	4b47      	ldr	r3, [pc, #284]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 80039fe:	685b      	ldr	r3, [r3, #4]
 8003a00:	22f0      	movs	r2, #240	; 0xf0
 8003a02:	4393      	bics	r3, r2
 8003a04:	0019      	movs	r1, r3
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	689a      	ldr	r2, [r3, #8]
 8003a0a:	4b44      	ldr	r3, [pc, #272]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a0c:	430a      	orrs	r2, r1
 8003a0e:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	2201      	movs	r2, #1
 8003a16:	4013      	ands	r3, r2
 8003a18:	d040      	beq.n	8003a9c <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	685b      	ldr	r3, [r3, #4]
 8003a1e:	2b01      	cmp	r3, #1
 8003a20:	d107      	bne.n	8003a32 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003a22:	4b3e      	ldr	r3, [pc, #248]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a24:	681a      	ldr	r2, [r3, #0]
 8003a26:	2380      	movs	r3, #128	; 0x80
 8003a28:	029b      	lsls	r3, r3, #10
 8003a2a:	4013      	ands	r3, r2
 8003a2c:	d114      	bne.n	8003a58 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003a2e:	2301      	movs	r3, #1
 8003a30:	e06e      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	2b02      	cmp	r3, #2
 8003a38:	d107      	bne.n	8003a4a <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003a3a:	4b38      	ldr	r3, [pc, #224]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a3c:	681a      	ldr	r2, [r3, #0]
 8003a3e:	2380      	movs	r3, #128	; 0x80
 8003a40:	049b      	lsls	r3, r3, #18
 8003a42:	4013      	ands	r3, r2
 8003a44:	d108      	bne.n	8003a58 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003a46:	2301      	movs	r3, #1
 8003a48:	e062      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003a4a:	4b34      	ldr	r3, [pc, #208]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	2202      	movs	r2, #2
 8003a50:	4013      	ands	r3, r2
 8003a52:	d101      	bne.n	8003a58 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003a54:	2301      	movs	r3, #1
 8003a56:	e05b      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003a58:	4b30      	ldr	r3, [pc, #192]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a5a:	685b      	ldr	r3, [r3, #4]
 8003a5c:	2203      	movs	r2, #3
 8003a5e:	4393      	bics	r3, r2
 8003a60:	0019      	movs	r1, r3
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	685a      	ldr	r2, [r3, #4]
 8003a66:	4b2d      	ldr	r3, [pc, #180]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a68:	430a      	orrs	r2, r1
 8003a6a:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003a6c:	f7fe ffa0 	bl	80029b0 <HAL_GetTick>
 8003a70:	0003      	movs	r3, r0
 8003a72:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003a74:	e009      	b.n	8003a8a <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003a76:	f7fe ff9b 	bl	80029b0 <HAL_GetTick>
 8003a7a:	0002      	movs	r2, r0
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	1ad3      	subs	r3, r2, r3
 8003a80:	4a27      	ldr	r2, [pc, #156]	; (8003b20 <HAL_RCC_ClockConfig+0x18c>)
 8003a82:	4293      	cmp	r3, r2
 8003a84:	d901      	bls.n	8003a8a <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003a86:	2303      	movs	r3, #3
 8003a88:	e042      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003a8a:	4b24      	ldr	r3, [pc, #144]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003a8c:	685b      	ldr	r3, [r3, #4]
 8003a8e:	220c      	movs	r2, #12
 8003a90:	401a      	ands	r2, r3
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	685b      	ldr	r3, [r3, #4]
 8003a96:	009b      	lsls	r3, r3, #2
 8003a98:	429a      	cmp	r2, r3
 8003a9a:	d1ec      	bne.n	8003a76 <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003a9c:	4b1e      	ldr	r3, [pc, #120]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	2201      	movs	r2, #1
 8003aa2:	4013      	ands	r3, r2
 8003aa4:	683a      	ldr	r2, [r7, #0]
 8003aa6:	429a      	cmp	r2, r3
 8003aa8:	d211      	bcs.n	8003ace <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003aaa:	4b1b      	ldr	r3, [pc, #108]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	2201      	movs	r2, #1
 8003ab0:	4393      	bics	r3, r2
 8003ab2:	0019      	movs	r1, r3
 8003ab4:	4b18      	ldr	r3, [pc, #96]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 8003ab6:	683a      	ldr	r2, [r7, #0]
 8003ab8:	430a      	orrs	r2, r1
 8003aba:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003abc:	4b16      	ldr	r3, [pc, #88]	; (8003b18 <HAL_RCC_ClockConfig+0x184>)
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	2201      	movs	r2, #1
 8003ac2:	4013      	ands	r3, r2
 8003ac4:	683a      	ldr	r2, [r7, #0]
 8003ac6:	429a      	cmp	r2, r3
 8003ac8:	d001      	beq.n	8003ace <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003aca:	2301      	movs	r3, #1
 8003acc:	e020      	b.n	8003b10 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	2204      	movs	r2, #4
 8003ad4:	4013      	ands	r3, r2
 8003ad6:	d009      	beq.n	8003aec <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003ad8:	4b10      	ldr	r3, [pc, #64]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003ada:	685b      	ldr	r3, [r3, #4]
 8003adc:	4a11      	ldr	r2, [pc, #68]	; (8003b24 <HAL_RCC_ClockConfig+0x190>)
 8003ade:	4013      	ands	r3, r2
 8003ae0:	0019      	movs	r1, r3
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	68da      	ldr	r2, [r3, #12]
 8003ae6:	4b0d      	ldr	r3, [pc, #52]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003ae8:	430a      	orrs	r2, r1
 8003aea:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003aec:	f000 f820 	bl	8003b30 <HAL_RCC_GetSysClockFreq>
 8003af0:	0001      	movs	r1, r0
 8003af2:	4b0a      	ldr	r3, [pc, #40]	; (8003b1c <HAL_RCC_ClockConfig+0x188>)
 8003af4:	685b      	ldr	r3, [r3, #4]
 8003af6:	091b      	lsrs	r3, r3, #4
 8003af8:	220f      	movs	r2, #15
 8003afa:	4013      	ands	r3, r2
 8003afc:	4a0a      	ldr	r2, [pc, #40]	; (8003b28 <HAL_RCC_ClockConfig+0x194>)
 8003afe:	5cd3      	ldrb	r3, [r2, r3]
 8003b00:	000a      	movs	r2, r1
 8003b02:	40da      	lsrs	r2, r3
 8003b04:	4b09      	ldr	r3, [pc, #36]	; (8003b2c <HAL_RCC_ClockConfig+0x198>)
 8003b06:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003b08:	2003      	movs	r0, #3
 8003b0a:	f7fe ff0b 	bl	8002924 <HAL_InitTick>
  
  return HAL_OK;
 8003b0e:	2300      	movs	r3, #0
}
 8003b10:	0018      	movs	r0, r3
 8003b12:	46bd      	mov	sp, r7
 8003b14:	b004      	add	sp, #16
 8003b16:	bd80      	pop	{r7, pc}
 8003b18:	40022000 	.word	0x40022000
 8003b1c:	40021000 	.word	0x40021000
 8003b20:	00001388 	.word	0x00001388
 8003b24:	fffff8ff 	.word	0xfffff8ff
 8003b28:	08009158 	.word	0x08009158
 8003b2c:	20000000 	.word	0x20000000

08003b30 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003b30:	b590      	push	{r4, r7, lr}
 8003b32:	b08f      	sub	sp, #60	; 0x3c
 8003b34:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003b36:	2314      	movs	r3, #20
 8003b38:	18fb      	adds	r3, r7, r3
 8003b3a:	4a2b      	ldr	r2, [pc, #172]	; (8003be8 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003b3c:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003b3e:	c313      	stmia	r3!, {r0, r1, r4}
 8003b40:	6812      	ldr	r2, [r2, #0]
 8003b42:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003b44:	1d3b      	adds	r3, r7, #4
 8003b46:	4a29      	ldr	r2, [pc, #164]	; (8003bec <HAL_RCC_GetSysClockFreq+0xbc>)
 8003b48:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003b4a:	c313      	stmia	r3!, {r0, r1, r4}
 8003b4c:	6812      	ldr	r2, [r2, #0]
 8003b4e:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8003b50:	2300      	movs	r3, #0
 8003b52:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b54:	2300      	movs	r3, #0
 8003b56:	62bb      	str	r3, [r7, #40]	; 0x28
 8003b58:	2300      	movs	r3, #0
 8003b5a:	637b      	str	r3, [r7, #52]	; 0x34
 8003b5c:	2300      	movs	r3, #0
 8003b5e:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 8003b60:	2300      	movs	r3, #0
 8003b62:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8003b64:	4b22      	ldr	r3, [pc, #136]	; (8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>)
 8003b66:	685b      	ldr	r3, [r3, #4]
 8003b68:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003b6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b6c:	220c      	movs	r2, #12
 8003b6e:	4013      	ands	r3, r2
 8003b70:	2b04      	cmp	r3, #4
 8003b72:	d002      	beq.n	8003b7a <HAL_RCC_GetSysClockFreq+0x4a>
 8003b74:	2b08      	cmp	r3, #8
 8003b76:	d003      	beq.n	8003b80 <HAL_RCC_GetSysClockFreq+0x50>
 8003b78:	e02d      	b.n	8003bd6 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003b7a:	4b1e      	ldr	r3, [pc, #120]	; (8003bf4 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003b7c:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003b7e:	e02d      	b.n	8003bdc <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003b80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b82:	0c9b      	lsrs	r3, r3, #18
 8003b84:	220f      	movs	r2, #15
 8003b86:	4013      	ands	r3, r2
 8003b88:	2214      	movs	r2, #20
 8003b8a:	18ba      	adds	r2, r7, r2
 8003b8c:	5cd3      	ldrb	r3, [r2, r3]
 8003b8e:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003b90:	4b17      	ldr	r3, [pc, #92]	; (8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>)
 8003b92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b94:	220f      	movs	r2, #15
 8003b96:	4013      	ands	r3, r2
 8003b98:	1d3a      	adds	r2, r7, #4
 8003b9a:	5cd3      	ldrb	r3, [r2, r3]
 8003b9c:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003b9e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003ba0:	2380      	movs	r3, #128	; 0x80
 8003ba2:	025b      	lsls	r3, r3, #9
 8003ba4:	4013      	ands	r3, r2
 8003ba6:	d009      	beq.n	8003bbc <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003ba8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003baa:	4812      	ldr	r0, [pc, #72]	; (8003bf4 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003bac:	f7fc fac8 	bl	8000140 <__udivsi3>
 8003bb0:	0003      	movs	r3, r0
 8003bb2:	001a      	movs	r2, r3
 8003bb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bb6:	4353      	muls	r3, r2
 8003bb8:	637b      	str	r3, [r7, #52]	; 0x34
 8003bba:	e009      	b.n	8003bd0 <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8003bbc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8003bbe:	000a      	movs	r2, r1
 8003bc0:	0152      	lsls	r2, r2, #5
 8003bc2:	1a52      	subs	r2, r2, r1
 8003bc4:	0193      	lsls	r3, r2, #6
 8003bc6:	1a9b      	subs	r3, r3, r2
 8003bc8:	00db      	lsls	r3, r3, #3
 8003bca:	185b      	adds	r3, r3, r1
 8003bcc:	021b      	lsls	r3, r3, #8
 8003bce:	637b      	str	r3, [r7, #52]	; 0x34
#endif
      }
      sysclockfreq = pllclk;
 8003bd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003bd2:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003bd4:	e002      	b.n	8003bdc <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8003bd6:	4b07      	ldr	r3, [pc, #28]	; (8003bf4 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003bd8:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003bda:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003bdc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8003bde:	0018      	movs	r0, r3
 8003be0:	46bd      	mov	sp, r7
 8003be2:	b00f      	add	sp, #60	; 0x3c
 8003be4:	bd90      	pop	{r4, r7, pc}
 8003be6:	46c0      	nop			; (mov r8, r8)
 8003be8:	080090b8 	.word	0x080090b8
 8003bec:	080090c8 	.word	0x080090c8
 8003bf0:	40021000 	.word	0x40021000
 8003bf4:	007a1200 	.word	0x007a1200

08003bf8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8003bf8:	b580      	push	{r7, lr}
 8003bfa:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8003bfc:	4b02      	ldr	r3, [pc, #8]	; (8003c08 <HAL_RCC_GetHCLKFreq+0x10>)
 8003bfe:	681b      	ldr	r3, [r3, #0]
}
 8003c00:	0018      	movs	r0, r3
 8003c02:	46bd      	mov	sp, r7
 8003c04:	bd80      	pop	{r7, pc}
 8003c06:	46c0      	nop			; (mov r8, r8)
 8003c08:	20000000 	.word	0x20000000

08003c0c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003c0c:	b580      	push	{r7, lr}
 8003c0e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003c10:	f7ff fff2 	bl	8003bf8 <HAL_RCC_GetHCLKFreq>
 8003c14:	0001      	movs	r1, r0
 8003c16:	4b06      	ldr	r3, [pc, #24]	; (8003c30 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003c18:	685b      	ldr	r3, [r3, #4]
 8003c1a:	0a1b      	lsrs	r3, r3, #8
 8003c1c:	2207      	movs	r2, #7
 8003c1e:	4013      	ands	r3, r2
 8003c20:	4a04      	ldr	r2, [pc, #16]	; (8003c34 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003c22:	5cd3      	ldrb	r3, [r2, r3]
 8003c24:	40d9      	lsrs	r1, r3
 8003c26:	000b      	movs	r3, r1
}    
 8003c28:	0018      	movs	r0, r3
 8003c2a:	46bd      	mov	sp, r7
 8003c2c:	bd80      	pop	{r7, pc}
 8003c2e:	46c0      	nop			; (mov r8, r8)
 8003c30:	40021000 	.word	0x40021000
 8003c34:	08009168 	.word	0x08009168

08003c38 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8003c38:	b580      	push	{r7, lr}
 8003c3a:	b086      	sub	sp, #24
 8003c3c:	af00      	add	r7, sp, #0
 8003c3e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8003c40:	2300      	movs	r3, #0
 8003c42:	613b      	str	r3, [r7, #16]
  uint32_t temp_reg = 0U;
 8003c44:	2300      	movs	r3, #0
 8003c46:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	2380      	movs	r3, #128	; 0x80
 8003c4e:	025b      	lsls	r3, r3, #9
 8003c50:	4013      	ands	r3, r2
 8003c52:	d100      	bne.n	8003c56 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 8003c54:	e08e      	b.n	8003d74 <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
    
    FlagStatus       pwrclkchanged = RESET;
 8003c56:	2017      	movs	r0, #23
 8003c58:	183b      	adds	r3, r7, r0
 8003c5a:	2200      	movs	r2, #0
 8003c5c:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003c5e:	4b5f      	ldr	r3, [pc, #380]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003c60:	69da      	ldr	r2, [r3, #28]
 8003c62:	2380      	movs	r3, #128	; 0x80
 8003c64:	055b      	lsls	r3, r3, #21
 8003c66:	4013      	ands	r3, r2
 8003c68:	d110      	bne.n	8003c8c <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 8003c6a:	4b5c      	ldr	r3, [pc, #368]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003c6c:	69da      	ldr	r2, [r3, #28]
 8003c6e:	4b5b      	ldr	r3, [pc, #364]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003c70:	2180      	movs	r1, #128	; 0x80
 8003c72:	0549      	lsls	r1, r1, #21
 8003c74:	430a      	orrs	r2, r1
 8003c76:	61da      	str	r2, [r3, #28]
 8003c78:	4b58      	ldr	r3, [pc, #352]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003c7a:	69da      	ldr	r2, [r3, #28]
 8003c7c:	2380      	movs	r3, #128	; 0x80
 8003c7e:	055b      	lsls	r3, r3, #21
 8003c80:	4013      	ands	r3, r2
 8003c82:	60bb      	str	r3, [r7, #8]
 8003c84:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8003c86:	183b      	adds	r3, r7, r0
 8003c88:	2201      	movs	r2, #1
 8003c8a:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003c8c:	4b54      	ldr	r3, [pc, #336]	; (8003de0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003c8e:	681a      	ldr	r2, [r3, #0]
 8003c90:	2380      	movs	r3, #128	; 0x80
 8003c92:	005b      	lsls	r3, r3, #1
 8003c94:	4013      	ands	r3, r2
 8003c96:	d11a      	bne.n	8003cce <HAL_RCCEx_PeriphCLKConfig+0x96>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003c98:	4b51      	ldr	r3, [pc, #324]	; (8003de0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003c9a:	681a      	ldr	r2, [r3, #0]
 8003c9c:	4b50      	ldr	r3, [pc, #320]	; (8003de0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003c9e:	2180      	movs	r1, #128	; 0x80
 8003ca0:	0049      	lsls	r1, r1, #1
 8003ca2:	430a      	orrs	r2, r1
 8003ca4:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003ca6:	f7fe fe83 	bl	80029b0 <HAL_GetTick>
 8003caa:	0003      	movs	r3, r0
 8003cac:	613b      	str	r3, [r7, #16]
      
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003cae:	e008      	b.n	8003cc2 <HAL_RCCEx_PeriphCLKConfig+0x8a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003cb0:	f7fe fe7e 	bl	80029b0 <HAL_GetTick>
 8003cb4:	0002      	movs	r2, r0
 8003cb6:	693b      	ldr	r3, [r7, #16]
 8003cb8:	1ad3      	subs	r3, r2, r3
 8003cba:	2b64      	cmp	r3, #100	; 0x64
 8003cbc:	d901      	bls.n	8003cc2 <HAL_RCCEx_PeriphCLKConfig+0x8a>
        {
          return HAL_TIMEOUT;
 8003cbe:	2303      	movs	r3, #3
 8003cc0:	e087      	b.n	8003dd2 <HAL_RCCEx_PeriphCLKConfig+0x19a>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003cc2:	4b47      	ldr	r3, [pc, #284]	; (8003de0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003cc4:	681a      	ldr	r2, [r3, #0]
 8003cc6:	2380      	movs	r3, #128	; 0x80
 8003cc8:	005b      	lsls	r3, r3, #1
 8003cca:	4013      	ands	r3, r2
 8003ccc:	d0f0      	beq.n	8003cb0 <HAL_RCCEx_PeriphCLKConfig+0x78>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8003cce:	4b43      	ldr	r3, [pc, #268]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003cd0:	6a1a      	ldr	r2, [r3, #32]
 8003cd2:	23c0      	movs	r3, #192	; 0xc0
 8003cd4:	009b      	lsls	r3, r3, #2
 8003cd6:	4013      	ands	r3, r2
 8003cd8:	60fb      	str	r3, [r7, #12]
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d034      	beq.n	8003d4a <HAL_RCCEx_PeriphCLKConfig+0x112>
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	685a      	ldr	r2, [r3, #4]
 8003ce4:	23c0      	movs	r3, #192	; 0xc0
 8003ce6:	009b      	lsls	r3, r3, #2
 8003ce8:	4013      	ands	r3, r2
 8003cea:	68fa      	ldr	r2, [r7, #12]
 8003cec:	429a      	cmp	r2, r3
 8003cee:	d02c      	beq.n	8003d4a <HAL_RCCEx_PeriphCLKConfig+0x112>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003cf0:	4b3a      	ldr	r3, [pc, #232]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003cf2:	6a1b      	ldr	r3, [r3, #32]
 8003cf4:	4a3b      	ldr	r2, [pc, #236]	; (8003de4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8003cf6:	4013      	ands	r3, r2
 8003cf8:	60fb      	str	r3, [r7, #12]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8003cfa:	4b38      	ldr	r3, [pc, #224]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003cfc:	6a1a      	ldr	r2, [r3, #32]
 8003cfe:	4b37      	ldr	r3, [pc, #220]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d00:	2180      	movs	r1, #128	; 0x80
 8003d02:	0249      	lsls	r1, r1, #9
 8003d04:	430a      	orrs	r2, r1
 8003d06:	621a      	str	r2, [r3, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003d08:	4b34      	ldr	r3, [pc, #208]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d0a:	6a1a      	ldr	r2, [r3, #32]
 8003d0c:	4b33      	ldr	r3, [pc, #204]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d0e:	4936      	ldr	r1, [pc, #216]	; (8003de8 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8003d10:	400a      	ands	r2, r1
 8003d12:	621a      	str	r2, [r3, #32]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 8003d14:	4b31      	ldr	r3, [pc, #196]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d16:	68fa      	ldr	r2, [r7, #12]
 8003d18:	621a      	str	r2, [r3, #32]
      
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 8003d1a:	68fb      	ldr	r3, [r7, #12]
 8003d1c:	2201      	movs	r2, #1
 8003d1e:	4013      	ands	r3, r2
 8003d20:	d013      	beq.n	8003d4a <HAL_RCCEx_PeriphCLKConfig+0x112>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003d22:	f7fe fe45 	bl	80029b0 <HAL_GetTick>
 8003d26:	0003      	movs	r3, r0
 8003d28:	613b      	str	r3, [r7, #16]
        
        /* Wait till LSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003d2a:	e009      	b.n	8003d40 <HAL_RCCEx_PeriphCLKConfig+0x108>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8003d2c:	f7fe fe40 	bl	80029b0 <HAL_GetTick>
 8003d30:	0002      	movs	r2, r0
 8003d32:	693b      	ldr	r3, [r7, #16]
 8003d34:	1ad3      	subs	r3, r2, r3
 8003d36:	4a2d      	ldr	r2, [pc, #180]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8003d38:	4293      	cmp	r3, r2
 8003d3a:	d901      	bls.n	8003d40 <HAL_RCCEx_PeriphCLKConfig+0x108>
          {
            return HAL_TIMEOUT;
 8003d3c:	2303      	movs	r3, #3
 8003d3e:	e048      	b.n	8003dd2 <HAL_RCCEx_PeriphCLKConfig+0x19a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003d40:	4b26      	ldr	r3, [pc, #152]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d42:	6a1b      	ldr	r3, [r3, #32]
 8003d44:	2202      	movs	r2, #2
 8003d46:	4013      	ands	r3, r2
 8003d48:	d0f0      	beq.n	8003d2c <HAL_RCCEx_PeriphCLKConfig+0xf4>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003d4a:	4b24      	ldr	r3, [pc, #144]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d4c:	6a1b      	ldr	r3, [r3, #32]
 8003d4e:	4a25      	ldr	r2, [pc, #148]	; (8003de4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8003d50:	4013      	ands	r3, r2
 8003d52:	0019      	movs	r1, r3
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	685a      	ldr	r2, [r3, #4]
 8003d58:	4b20      	ldr	r3, [pc, #128]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d5a:	430a      	orrs	r2, r1
 8003d5c:	621a      	str	r2, [r3, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003d5e:	2317      	movs	r3, #23
 8003d60:	18fb      	adds	r3, r7, r3
 8003d62:	781b      	ldrb	r3, [r3, #0]
 8003d64:	2b01      	cmp	r3, #1
 8003d66:	d105      	bne.n	8003d74 <HAL_RCCEx_PeriphCLKConfig+0x13c>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003d68:	4b1c      	ldr	r3, [pc, #112]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d6a:	69da      	ldr	r2, [r3, #28]
 8003d6c:	4b1b      	ldr	r3, [pc, #108]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d6e:	4920      	ldr	r1, [pc, #128]	; (8003df0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8003d70:	400a      	ands	r2, r1
 8003d72:	61da      	str	r2, [r3, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	2201      	movs	r2, #1
 8003d7a:	4013      	ands	r3, r2
 8003d7c:	d009      	beq.n	8003d92 <HAL_RCCEx_PeriphCLKConfig+0x15a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8003d7e:	4b17      	ldr	r3, [pc, #92]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d82:	2203      	movs	r2, #3
 8003d84:	4393      	bics	r3, r2
 8003d86:	0019      	movs	r1, r3
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	689a      	ldr	r2, [r3, #8]
 8003d8c:	4b13      	ldr	r3, [pc, #76]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d8e:	430a      	orrs	r2, r1
 8003d90:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	2220      	movs	r2, #32
 8003d98:	4013      	ands	r3, r2
 8003d9a:	d009      	beq.n	8003db0 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003d9c:	4b0f      	ldr	r3, [pc, #60]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003d9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003da0:	2210      	movs	r2, #16
 8003da2:	4393      	bics	r3, r2
 8003da4:	0019      	movs	r1, r3
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	68da      	ldr	r2, [r3, #12]
 8003daa:	4b0c      	ldr	r3, [pc, #48]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003dac:	430a      	orrs	r2, r1
 8003dae:	631a      	str	r2, [r3, #48]	; 0x30
#if defined(STM32F042x6) || defined(STM32F048xx)\
 || defined(STM32F051x8) || defined(STM32F058xx)\
 || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 || defined(STM32F091xC) || defined(STM32F098xx)
  /*------------------------------ CEC clock Configuration -------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	681a      	ldr	r2, [r3, #0]
 8003db4:	2380      	movs	r3, #128	; 0x80
 8003db6:	00db      	lsls	r3, r3, #3
 8003db8:	4013      	ands	r3, r2
 8003dba:	d009      	beq.n	8003dd0 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8003dbc:	4b07      	ldr	r3, [pc, #28]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003dbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003dc0:	2240      	movs	r2, #64	; 0x40
 8003dc2:	4393      	bics	r3, r2
 8003dc4:	0019      	movs	r1, r3
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	691a      	ldr	r2, [r3, #16]
 8003dca:	4b04      	ldr	r3, [pc, #16]	; (8003ddc <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003dcc:	430a      	orrs	r2, r1
 8003dce:	631a      	str	r2, [r3, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8003dd0:	2300      	movs	r3, #0
}
 8003dd2:	0018      	movs	r0, r3
 8003dd4:	46bd      	mov	sp, r7
 8003dd6:	b006      	add	sp, #24
 8003dd8:	bd80      	pop	{r7, pc}
 8003dda:	46c0      	nop			; (mov r8, r8)
 8003ddc:	40021000 	.word	0x40021000
 8003de0:	40007000 	.word	0x40007000
 8003de4:	fffffcff 	.word	0xfffffcff
 8003de8:	fffeffff 	.word	0xfffeffff
 8003dec:	00001388 	.word	0x00001388
 8003df0:	efffffff 	.word	0xefffffff

08003df4 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8003df4:	b580      	push	{r7, lr}
 8003df6:	b082      	sub	sp, #8
 8003df8:	af00      	add	r7, sp, #0
 8003dfa:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	d101      	bne.n	8003e06 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8003e02:	2301      	movs	r3, #1
 8003e04:	e044      	b.n	8003e90 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d107      	bne.n	8003e1e <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	2274      	movs	r2, #116	; 0x74
 8003e12:	2100      	movs	r1, #0
 8003e14:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	0018      	movs	r0, r3
 8003e1a:	f7fe fc1d 	bl	8002658 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	2224      	movs	r2, #36	; 0x24
 8003e22:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	681a      	ldr	r2, [r3, #0]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	2101      	movs	r1, #1
 8003e30:	438a      	bics	r2, r1
 8003e32:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	0018      	movs	r0, r3
 8003e38:	f000 f8da 	bl	8003ff0 <UART_SetConfig>
 8003e3c:	0003      	movs	r3, r0
 8003e3e:	2b01      	cmp	r3, #1
 8003e40:	d101      	bne.n	8003e46 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 8003e42:	2301      	movs	r3, #1
 8003e44:	e024      	b.n	8003e90 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e4a:	2b00      	cmp	r3, #0
 8003e4c:	d003      	beq.n	8003e56 <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	0018      	movs	r0, r3
 8003e52:	f000 fa0d 	bl	8004270 <UART_AdvFeatureConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	685a      	ldr	r2, [r3, #4]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	490d      	ldr	r1, [pc, #52]	; (8003e98 <HAL_UART_Init+0xa4>)
 8003e62:	400a      	ands	r2, r1
 8003e64:	605a      	str	r2, [r3, #4]
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
#endif /* USART_CR2_LINEN */
#if defined (USART_CR3_SCEN)
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	689a      	ldr	r2, [r3, #8]
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	212a      	movs	r1, #42	; 0x2a
 8003e72:	438a      	bics	r2, r1
 8003e74:	609a      	str	r2, [r3, #8]
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	681a      	ldr	r2, [r3, #0]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	2101      	movs	r1, #1
 8003e82:	430a      	orrs	r2, r1
 8003e84:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	0018      	movs	r0, r3
 8003e8a:	f000 faa5 	bl	80043d8 <UART_CheckIdleState>
 8003e8e:	0003      	movs	r3, r0
}
 8003e90:	0018      	movs	r0, r3
 8003e92:	46bd      	mov	sp, r7
 8003e94:	b002      	add	sp, #8
 8003e96:	bd80      	pop	{r7, pc}
 8003e98:	ffffb7ff 	.word	0xffffb7ff

08003e9c <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003e9c:	b580      	push	{r7, lr}
 8003e9e:	b08a      	sub	sp, #40	; 0x28
 8003ea0:	af02      	add	r7, sp, #8
 8003ea2:	60f8      	str	r0, [r7, #12]
 8003ea4:	60b9      	str	r1, [r7, #8]
 8003ea6:	603b      	str	r3, [r7, #0]
 8003ea8:	1dbb      	adds	r3, r7, #6
 8003eaa:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003eb0:	2b20      	cmp	r3, #32
 8003eb2:	d000      	beq.n	8003eb6 <HAL_UART_Transmit+0x1a>
 8003eb4:	e096      	b.n	8003fe4 <HAL_UART_Transmit+0x148>
  {
    if ((pData == NULL) || (Size == 0U))
 8003eb6:	68bb      	ldr	r3, [r7, #8]
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d003      	beq.n	8003ec4 <HAL_UART_Transmit+0x28>
 8003ebc:	1dbb      	adds	r3, r7, #6
 8003ebe:	881b      	ldrh	r3, [r3, #0]
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d101      	bne.n	8003ec8 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8003ec4:	2301      	movs	r3, #1
 8003ec6:	e08e      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	689a      	ldr	r2, [r3, #8]
 8003ecc:	2380      	movs	r3, #128	; 0x80
 8003ece:	015b      	lsls	r3, r3, #5
 8003ed0:	429a      	cmp	r2, r3
 8003ed2:	d109      	bne.n	8003ee8 <HAL_UART_Transmit+0x4c>
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	691b      	ldr	r3, [r3, #16]
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d105      	bne.n	8003ee8 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8003edc:	68bb      	ldr	r3, [r7, #8]
 8003ede:	2201      	movs	r2, #1
 8003ee0:	4013      	ands	r3, r2
 8003ee2:	d001      	beq.n	8003ee8 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8003ee4:	2301      	movs	r3, #1
 8003ee6:	e07e      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
      }
    }

    __HAL_LOCK(huart);
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	2274      	movs	r2, #116	; 0x74
 8003eec:	5c9b      	ldrb	r3, [r3, r2]
 8003eee:	2b01      	cmp	r3, #1
 8003ef0:	d101      	bne.n	8003ef6 <HAL_UART_Transmit+0x5a>
 8003ef2:	2302      	movs	r3, #2
 8003ef4:	e077      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	2274      	movs	r2, #116	; 0x74
 8003efa:	2101      	movs	r1, #1
 8003efc:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	2280      	movs	r2, #128	; 0x80
 8003f02:	2100      	movs	r1, #0
 8003f04:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003f06:	68fb      	ldr	r3, [r7, #12]
 8003f08:	2221      	movs	r2, #33	; 0x21
 8003f0a:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8003f0c:	f7fe fd50 	bl	80029b0 <HAL_GetTick>
 8003f10:	0003      	movs	r3, r0
 8003f12:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	1dba      	adds	r2, r7, #6
 8003f18:	2150      	movs	r1, #80	; 0x50
 8003f1a:	8812      	ldrh	r2, [r2, #0]
 8003f1c:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	1dba      	adds	r2, r7, #6
 8003f22:	2152      	movs	r1, #82	; 0x52
 8003f24:	8812      	ldrh	r2, [r2, #0]
 8003f26:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	689a      	ldr	r2, [r3, #8]
 8003f2c:	2380      	movs	r3, #128	; 0x80
 8003f2e:	015b      	lsls	r3, r3, #5
 8003f30:	429a      	cmp	r2, r3
 8003f32:	d108      	bne.n	8003f46 <HAL_UART_Transmit+0xaa>
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	691b      	ldr	r3, [r3, #16]
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d104      	bne.n	8003f46 <HAL_UART_Transmit+0xaa>
    {
      pdata8bits  = NULL;
 8003f3c:	2300      	movs	r3, #0
 8003f3e:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8003f40:	68bb      	ldr	r3, [r7, #8]
 8003f42:	61bb      	str	r3, [r7, #24]
 8003f44:	e003      	b.n	8003f4e <HAL_UART_Transmit+0xb2>
    }
    else
    {
      pdata8bits  = pData;
 8003f46:	68bb      	ldr	r3, [r7, #8]
 8003f48:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8003f4e:	68fb      	ldr	r3, [r7, #12]
 8003f50:	2274      	movs	r2, #116	; 0x74
 8003f52:	2100      	movs	r1, #0
 8003f54:	5499      	strb	r1, [r3, r2]

    while (huart->TxXferCount > 0U)
 8003f56:	e02d      	b.n	8003fb4 <HAL_UART_Transmit+0x118>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003f58:	697a      	ldr	r2, [r7, #20]
 8003f5a:	68f8      	ldr	r0, [r7, #12]
 8003f5c:	683b      	ldr	r3, [r7, #0]
 8003f5e:	9300      	str	r3, [sp, #0]
 8003f60:	0013      	movs	r3, r2
 8003f62:	2200      	movs	r2, #0
 8003f64:	2180      	movs	r1, #128	; 0x80
 8003f66:	f000 fa7f 	bl	8004468 <UART_WaitOnFlagUntilTimeout>
 8003f6a:	1e03      	subs	r3, r0, #0
 8003f6c:	d001      	beq.n	8003f72 <HAL_UART_Transmit+0xd6>
      {
        return HAL_TIMEOUT;
 8003f6e:	2303      	movs	r3, #3
 8003f70:	e039      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
      }
      if (pdata8bits == NULL)
 8003f72:	69fb      	ldr	r3, [r7, #28]
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d10b      	bne.n	8003f90 <HAL_UART_Transmit+0xf4>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003f78:	69bb      	ldr	r3, [r7, #24]
 8003f7a:	881a      	ldrh	r2, [r3, #0]
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	05d2      	lsls	r2, r2, #23
 8003f82:	0dd2      	lsrs	r2, r2, #23
 8003f84:	b292      	uxth	r2, r2
 8003f86:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8003f88:	69bb      	ldr	r3, [r7, #24]
 8003f8a:	3302      	adds	r3, #2
 8003f8c:	61bb      	str	r3, [r7, #24]
 8003f8e:	e008      	b.n	8003fa2 <HAL_UART_Transmit+0x106>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003f90:	69fb      	ldr	r3, [r7, #28]
 8003f92:	781a      	ldrb	r2, [r3, #0]
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	b292      	uxth	r2, r2
 8003f9a:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8003f9c:	69fb      	ldr	r3, [r7, #28]
 8003f9e:	3301      	adds	r3, #1
 8003fa0:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8003fa2:	68fb      	ldr	r3, [r7, #12]
 8003fa4:	2252      	movs	r2, #82	; 0x52
 8003fa6:	5a9b      	ldrh	r3, [r3, r2]
 8003fa8:	b29b      	uxth	r3, r3
 8003faa:	3b01      	subs	r3, #1
 8003fac:	b299      	uxth	r1, r3
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	2252      	movs	r2, #82	; 0x52
 8003fb2:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	2252      	movs	r2, #82	; 0x52
 8003fb8:	5a9b      	ldrh	r3, [r3, r2]
 8003fba:	b29b      	uxth	r3, r3
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d1cb      	bne.n	8003f58 <HAL_UART_Transmit+0xbc>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003fc0:	697a      	ldr	r2, [r7, #20]
 8003fc2:	68f8      	ldr	r0, [r7, #12]
 8003fc4:	683b      	ldr	r3, [r7, #0]
 8003fc6:	9300      	str	r3, [sp, #0]
 8003fc8:	0013      	movs	r3, r2
 8003fca:	2200      	movs	r2, #0
 8003fcc:	2140      	movs	r1, #64	; 0x40
 8003fce:	f000 fa4b 	bl	8004468 <UART_WaitOnFlagUntilTimeout>
 8003fd2:	1e03      	subs	r3, r0, #0
 8003fd4:	d001      	beq.n	8003fda <HAL_UART_Transmit+0x13e>
    {
      return HAL_TIMEOUT;
 8003fd6:	2303      	movs	r3, #3
 8003fd8:	e005      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8003fda:	68fb      	ldr	r3, [r7, #12]
 8003fdc:	2220      	movs	r2, #32
 8003fde:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	e000      	b.n	8003fe6 <HAL_UART_Transmit+0x14a>
  }
  else
  {
    return HAL_BUSY;
 8003fe4:	2302      	movs	r3, #2
  }
}
 8003fe6:	0018      	movs	r0, r3
 8003fe8:	46bd      	mov	sp, r7
 8003fea:	b008      	add	sp, #32
 8003fec:	bd80      	pop	{r7, pc}
	...

08003ff0 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003ff0:	b580      	push	{r7, lr}
 8003ff2:	b088      	sub	sp, #32
 8003ff4:	af00      	add	r7, sp, #0
 8003ff6:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8003ff8:	231e      	movs	r3, #30
 8003ffa:	18fb      	adds	r3, r7, r3
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	689a      	ldr	r2, [r3, #8]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	691b      	ldr	r3, [r3, #16]
 8004008:	431a      	orrs	r2, r3
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	695b      	ldr	r3, [r3, #20]
 800400e:	431a      	orrs	r2, r3
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	69db      	ldr	r3, [r3, #28]
 8004014:	4313      	orrs	r3, r2
 8004016:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	4a8d      	ldr	r2, [pc, #564]	; (8004254 <UART_SetConfig+0x264>)
 8004020:	4013      	ands	r3, r2
 8004022:	0019      	movs	r1, r3
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	697a      	ldr	r2, [r7, #20]
 800402a:	430a      	orrs	r2, r1
 800402c:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	685b      	ldr	r3, [r3, #4]
 8004034:	4a88      	ldr	r2, [pc, #544]	; (8004258 <UART_SetConfig+0x268>)
 8004036:	4013      	ands	r3, r2
 8004038:	0019      	movs	r1, r3
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	68da      	ldr	r2, [r3, #12]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	430a      	orrs	r2, r1
 8004044:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	699b      	ldr	r3, [r3, #24]
 800404a:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	6a1b      	ldr	r3, [r3, #32]
 8004050:	697a      	ldr	r2, [r7, #20]
 8004052:	4313      	orrs	r3, r2
 8004054:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	689b      	ldr	r3, [r3, #8]
 800405c:	4a7f      	ldr	r2, [pc, #508]	; (800425c <UART_SetConfig+0x26c>)
 800405e:	4013      	ands	r3, r2
 8004060:	0019      	movs	r1, r3
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	697a      	ldr	r2, [r7, #20]
 8004068:	430a      	orrs	r2, r1
 800406a:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a7b      	ldr	r2, [pc, #492]	; (8004260 <UART_SetConfig+0x270>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d127      	bne.n	80040c6 <UART_SetConfig+0xd6>
 8004076:	4b7b      	ldr	r3, [pc, #492]	; (8004264 <UART_SetConfig+0x274>)
 8004078:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800407a:	2203      	movs	r2, #3
 800407c:	4013      	ands	r3, r2
 800407e:	2b03      	cmp	r3, #3
 8004080:	d00d      	beq.n	800409e <UART_SetConfig+0xae>
 8004082:	d81b      	bhi.n	80040bc <UART_SetConfig+0xcc>
 8004084:	2b02      	cmp	r3, #2
 8004086:	d014      	beq.n	80040b2 <UART_SetConfig+0xc2>
 8004088:	d818      	bhi.n	80040bc <UART_SetConfig+0xcc>
 800408a:	2b00      	cmp	r3, #0
 800408c:	d002      	beq.n	8004094 <UART_SetConfig+0xa4>
 800408e:	2b01      	cmp	r3, #1
 8004090:	d00a      	beq.n	80040a8 <UART_SetConfig+0xb8>
 8004092:	e013      	b.n	80040bc <UART_SetConfig+0xcc>
 8004094:	231f      	movs	r3, #31
 8004096:	18fb      	adds	r3, r7, r3
 8004098:	2200      	movs	r2, #0
 800409a:	701a      	strb	r2, [r3, #0]
 800409c:	e021      	b.n	80040e2 <UART_SetConfig+0xf2>
 800409e:	231f      	movs	r3, #31
 80040a0:	18fb      	adds	r3, r7, r3
 80040a2:	2202      	movs	r2, #2
 80040a4:	701a      	strb	r2, [r3, #0]
 80040a6:	e01c      	b.n	80040e2 <UART_SetConfig+0xf2>
 80040a8:	231f      	movs	r3, #31
 80040aa:	18fb      	adds	r3, r7, r3
 80040ac:	2204      	movs	r2, #4
 80040ae:	701a      	strb	r2, [r3, #0]
 80040b0:	e017      	b.n	80040e2 <UART_SetConfig+0xf2>
 80040b2:	231f      	movs	r3, #31
 80040b4:	18fb      	adds	r3, r7, r3
 80040b6:	2208      	movs	r2, #8
 80040b8:	701a      	strb	r2, [r3, #0]
 80040ba:	e012      	b.n	80040e2 <UART_SetConfig+0xf2>
 80040bc:	231f      	movs	r3, #31
 80040be:	18fb      	adds	r3, r7, r3
 80040c0:	2210      	movs	r2, #16
 80040c2:	701a      	strb	r2, [r3, #0]
 80040c4:	e00d      	b.n	80040e2 <UART_SetConfig+0xf2>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	4a67      	ldr	r2, [pc, #412]	; (8004268 <UART_SetConfig+0x278>)
 80040cc:	4293      	cmp	r3, r2
 80040ce:	d104      	bne.n	80040da <UART_SetConfig+0xea>
 80040d0:	231f      	movs	r3, #31
 80040d2:	18fb      	adds	r3, r7, r3
 80040d4:	2200      	movs	r2, #0
 80040d6:	701a      	strb	r2, [r3, #0]
 80040d8:	e003      	b.n	80040e2 <UART_SetConfig+0xf2>
 80040da:	231f      	movs	r3, #31
 80040dc:	18fb      	adds	r3, r7, r3
 80040de:	2210      	movs	r2, #16
 80040e0:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	69da      	ldr	r2, [r3, #28]
 80040e6:	2380      	movs	r3, #128	; 0x80
 80040e8:	021b      	lsls	r3, r3, #8
 80040ea:	429a      	cmp	r2, r3
 80040ec:	d15d      	bne.n	80041aa <UART_SetConfig+0x1ba>
  {
    switch (clocksource)
 80040ee:	231f      	movs	r3, #31
 80040f0:	18fb      	adds	r3, r7, r3
 80040f2:	781b      	ldrb	r3, [r3, #0]
 80040f4:	2b08      	cmp	r3, #8
 80040f6:	d015      	beq.n	8004124 <UART_SetConfig+0x134>
 80040f8:	dc18      	bgt.n	800412c <UART_SetConfig+0x13c>
 80040fa:	2b04      	cmp	r3, #4
 80040fc:	d00d      	beq.n	800411a <UART_SetConfig+0x12a>
 80040fe:	dc15      	bgt.n	800412c <UART_SetConfig+0x13c>
 8004100:	2b00      	cmp	r3, #0
 8004102:	d002      	beq.n	800410a <UART_SetConfig+0x11a>
 8004104:	2b02      	cmp	r3, #2
 8004106:	d005      	beq.n	8004114 <UART_SetConfig+0x124>
 8004108:	e010      	b.n	800412c <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800410a:	f7ff fd7f 	bl	8003c0c <HAL_RCC_GetPCLK1Freq>
 800410e:	0003      	movs	r3, r0
 8004110:	61bb      	str	r3, [r7, #24]
        break;
 8004112:	e012      	b.n	800413a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8004114:	4b55      	ldr	r3, [pc, #340]	; (800426c <UART_SetConfig+0x27c>)
 8004116:	61bb      	str	r3, [r7, #24]
        break;
 8004118:	e00f      	b.n	800413a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800411a:	f7ff fd09 	bl	8003b30 <HAL_RCC_GetSysClockFreq>
 800411e:	0003      	movs	r3, r0
 8004120:	61bb      	str	r3, [r7, #24]
        break;
 8004122:	e00a      	b.n	800413a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8004124:	2380      	movs	r3, #128	; 0x80
 8004126:	021b      	lsls	r3, r3, #8
 8004128:	61bb      	str	r3, [r7, #24]
        break;
 800412a:	e006      	b.n	800413a <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 800412c:	2300      	movs	r3, #0
 800412e:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8004130:	231e      	movs	r3, #30
 8004132:	18fb      	adds	r3, r7, r3
 8004134:	2201      	movs	r2, #1
 8004136:	701a      	strb	r2, [r3, #0]
        break;
 8004138:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800413a:	69bb      	ldr	r3, [r7, #24]
 800413c:	2b00      	cmp	r3, #0
 800413e:	d100      	bne.n	8004142 <UART_SetConfig+0x152>
 8004140:	e07b      	b.n	800423a <UART_SetConfig+0x24a>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004142:	69bb      	ldr	r3, [r7, #24]
 8004144:	005a      	lsls	r2, r3, #1
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	685b      	ldr	r3, [r3, #4]
 800414a:	085b      	lsrs	r3, r3, #1
 800414c:	18d2      	adds	r2, r2, r3
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	685b      	ldr	r3, [r3, #4]
 8004152:	0019      	movs	r1, r3
 8004154:	0010      	movs	r0, r2
 8004156:	f7fb fff3 	bl	8000140 <__udivsi3>
 800415a:	0003      	movs	r3, r0
 800415c:	b29b      	uxth	r3, r3
 800415e:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004160:	693b      	ldr	r3, [r7, #16]
 8004162:	2b0f      	cmp	r3, #15
 8004164:	d91c      	bls.n	80041a0 <UART_SetConfig+0x1b0>
 8004166:	693a      	ldr	r2, [r7, #16]
 8004168:	2380      	movs	r3, #128	; 0x80
 800416a:	025b      	lsls	r3, r3, #9
 800416c:	429a      	cmp	r2, r3
 800416e:	d217      	bcs.n	80041a0 <UART_SetConfig+0x1b0>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004170:	693b      	ldr	r3, [r7, #16]
 8004172:	b29a      	uxth	r2, r3
 8004174:	200e      	movs	r0, #14
 8004176:	183b      	adds	r3, r7, r0
 8004178:	210f      	movs	r1, #15
 800417a:	438a      	bics	r2, r1
 800417c:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800417e:	693b      	ldr	r3, [r7, #16]
 8004180:	085b      	lsrs	r3, r3, #1
 8004182:	b29b      	uxth	r3, r3
 8004184:	2207      	movs	r2, #7
 8004186:	4013      	ands	r3, r2
 8004188:	b299      	uxth	r1, r3
 800418a:	183b      	adds	r3, r7, r0
 800418c:	183a      	adds	r2, r7, r0
 800418e:	8812      	ldrh	r2, [r2, #0]
 8004190:	430a      	orrs	r2, r1
 8004192:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	681b      	ldr	r3, [r3, #0]
 8004198:	183a      	adds	r2, r7, r0
 800419a:	8812      	ldrh	r2, [r2, #0]
 800419c:	60da      	str	r2, [r3, #12]
 800419e:	e04c      	b.n	800423a <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 80041a0:	231e      	movs	r3, #30
 80041a2:	18fb      	adds	r3, r7, r3
 80041a4:	2201      	movs	r2, #1
 80041a6:	701a      	strb	r2, [r3, #0]
 80041a8:	e047      	b.n	800423a <UART_SetConfig+0x24a>
      }
    }
  }
  else
  {
    switch (clocksource)
 80041aa:	231f      	movs	r3, #31
 80041ac:	18fb      	adds	r3, r7, r3
 80041ae:	781b      	ldrb	r3, [r3, #0]
 80041b0:	2b08      	cmp	r3, #8
 80041b2:	d015      	beq.n	80041e0 <UART_SetConfig+0x1f0>
 80041b4:	dc18      	bgt.n	80041e8 <UART_SetConfig+0x1f8>
 80041b6:	2b04      	cmp	r3, #4
 80041b8:	d00d      	beq.n	80041d6 <UART_SetConfig+0x1e6>
 80041ba:	dc15      	bgt.n	80041e8 <UART_SetConfig+0x1f8>
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d002      	beq.n	80041c6 <UART_SetConfig+0x1d6>
 80041c0:	2b02      	cmp	r3, #2
 80041c2:	d005      	beq.n	80041d0 <UART_SetConfig+0x1e0>
 80041c4:	e010      	b.n	80041e8 <UART_SetConfig+0x1f8>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80041c6:	f7ff fd21 	bl	8003c0c <HAL_RCC_GetPCLK1Freq>
 80041ca:	0003      	movs	r3, r0
 80041cc:	61bb      	str	r3, [r7, #24]
        break;
 80041ce:	e012      	b.n	80041f6 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80041d0:	4b26      	ldr	r3, [pc, #152]	; (800426c <UART_SetConfig+0x27c>)
 80041d2:	61bb      	str	r3, [r7, #24]
        break;
 80041d4:	e00f      	b.n	80041f6 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80041d6:	f7ff fcab 	bl	8003b30 <HAL_RCC_GetSysClockFreq>
 80041da:	0003      	movs	r3, r0
 80041dc:	61bb      	str	r3, [r7, #24]
        break;
 80041de:	e00a      	b.n	80041f6 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80041e0:	2380      	movs	r3, #128	; 0x80
 80041e2:	021b      	lsls	r3, r3, #8
 80041e4:	61bb      	str	r3, [r7, #24]
        break;
 80041e6:	e006      	b.n	80041f6 <UART_SetConfig+0x206>
      default:
        pclk = 0U;
 80041e8:	2300      	movs	r3, #0
 80041ea:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80041ec:	231e      	movs	r3, #30
 80041ee:	18fb      	adds	r3, r7, r3
 80041f0:	2201      	movs	r2, #1
 80041f2:	701a      	strb	r2, [r3, #0]
        break;
 80041f4:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 80041f6:	69bb      	ldr	r3, [r7, #24]
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d01e      	beq.n	800423a <UART_SetConfig+0x24a>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	685b      	ldr	r3, [r3, #4]
 8004200:	085a      	lsrs	r2, r3, #1
 8004202:	69bb      	ldr	r3, [r7, #24]
 8004204:	18d2      	adds	r2, r2, r3
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	685b      	ldr	r3, [r3, #4]
 800420a:	0019      	movs	r1, r3
 800420c:	0010      	movs	r0, r2
 800420e:	f7fb ff97 	bl	8000140 <__udivsi3>
 8004212:	0003      	movs	r3, r0
 8004214:	b29b      	uxth	r3, r3
 8004216:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004218:	693b      	ldr	r3, [r7, #16]
 800421a:	2b0f      	cmp	r3, #15
 800421c:	d909      	bls.n	8004232 <UART_SetConfig+0x242>
 800421e:	693a      	ldr	r2, [r7, #16]
 8004220:	2380      	movs	r3, #128	; 0x80
 8004222:	025b      	lsls	r3, r3, #9
 8004224:	429a      	cmp	r2, r3
 8004226:	d204      	bcs.n	8004232 <UART_SetConfig+0x242>
      {
        huart->Instance->BRR = usartdiv;
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	693a      	ldr	r2, [r7, #16]
 800422e:	60da      	str	r2, [r3, #12]
 8004230:	e003      	b.n	800423a <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 8004232:	231e      	movs	r3, #30
 8004234:	18fb      	adds	r3, r7, r3
 8004236:	2201      	movs	r2, #1
 8004238:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	2200      	movs	r2, #0
 800423e:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	2200      	movs	r2, #0
 8004244:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8004246:	231e      	movs	r3, #30
 8004248:	18fb      	adds	r3, r7, r3
 800424a:	781b      	ldrb	r3, [r3, #0]
}
 800424c:	0018      	movs	r0, r3
 800424e:	46bd      	mov	sp, r7
 8004250:	b008      	add	sp, #32
 8004252:	bd80      	pop	{r7, pc}
 8004254:	ffff69f3 	.word	0xffff69f3
 8004258:	ffffcfff 	.word	0xffffcfff
 800425c:	fffff4ff 	.word	0xfffff4ff
 8004260:	40013800 	.word	0x40013800
 8004264:	40021000 	.word	0x40021000
 8004268:	40004400 	.word	0x40004400
 800426c:	007a1200 	.word	0x007a1200

08004270 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8004270:	b580      	push	{r7, lr}
 8004272:	b082      	sub	sp, #8
 8004274:	af00      	add	r7, sp, #0
 8004276:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800427c:	2201      	movs	r2, #1
 800427e:	4013      	ands	r3, r2
 8004280:	d00b      	beq.n	800429a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	685b      	ldr	r3, [r3, #4]
 8004288:	4a4a      	ldr	r2, [pc, #296]	; (80043b4 <UART_AdvFeatureConfig+0x144>)
 800428a:	4013      	ands	r3, r2
 800428c:	0019      	movs	r1, r3
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	430a      	orrs	r2, r1
 8004298:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800429e:	2202      	movs	r2, #2
 80042a0:	4013      	ands	r3, r2
 80042a2:	d00b      	beq.n	80042bc <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	685b      	ldr	r3, [r3, #4]
 80042aa:	4a43      	ldr	r2, [pc, #268]	; (80043b8 <UART_AdvFeatureConfig+0x148>)
 80042ac:	4013      	ands	r3, r2
 80042ae:	0019      	movs	r1, r3
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	430a      	orrs	r2, r1
 80042ba:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042c0:	2204      	movs	r2, #4
 80042c2:	4013      	ands	r3, r2
 80042c4:	d00b      	beq.n	80042de <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	681b      	ldr	r3, [r3, #0]
 80042ca:	685b      	ldr	r3, [r3, #4]
 80042cc:	4a3b      	ldr	r2, [pc, #236]	; (80043bc <UART_AdvFeatureConfig+0x14c>)
 80042ce:	4013      	ands	r3, r2
 80042d0:	0019      	movs	r1, r3
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	430a      	orrs	r2, r1
 80042dc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042e2:	2208      	movs	r2, #8
 80042e4:	4013      	ands	r3, r2
 80042e6:	d00b      	beq.n	8004300 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	685b      	ldr	r3, [r3, #4]
 80042ee:	4a34      	ldr	r2, [pc, #208]	; (80043c0 <UART_AdvFeatureConfig+0x150>)
 80042f0:	4013      	ands	r3, r2
 80042f2:	0019      	movs	r1, r3
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	430a      	orrs	r2, r1
 80042fe:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004304:	2210      	movs	r2, #16
 8004306:	4013      	ands	r3, r2
 8004308:	d00b      	beq.n	8004322 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	689b      	ldr	r3, [r3, #8]
 8004310:	4a2c      	ldr	r2, [pc, #176]	; (80043c4 <UART_AdvFeatureConfig+0x154>)
 8004312:	4013      	ands	r3, r2
 8004314:	0019      	movs	r1, r3
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	430a      	orrs	r2, r1
 8004320:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004326:	2220      	movs	r2, #32
 8004328:	4013      	ands	r3, r2
 800432a:	d00b      	beq.n	8004344 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	689b      	ldr	r3, [r3, #8]
 8004332:	4a25      	ldr	r2, [pc, #148]	; (80043c8 <UART_AdvFeatureConfig+0x158>)
 8004334:	4013      	ands	r3, r2
 8004336:	0019      	movs	r1, r3
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	430a      	orrs	r2, r1
 8004342:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004348:	2240      	movs	r2, #64	; 0x40
 800434a:	4013      	ands	r3, r2
 800434c:	d01d      	beq.n	800438a <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	685b      	ldr	r3, [r3, #4]
 8004354:	4a1d      	ldr	r2, [pc, #116]	; (80043cc <UART_AdvFeatureConfig+0x15c>)
 8004356:	4013      	ands	r3, r2
 8004358:	0019      	movs	r1, r3
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	430a      	orrs	r2, r1
 8004364:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800436a:	2380      	movs	r3, #128	; 0x80
 800436c:	035b      	lsls	r3, r3, #13
 800436e:	429a      	cmp	r2, r3
 8004370:	d10b      	bne.n	800438a <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	685b      	ldr	r3, [r3, #4]
 8004378:	4a15      	ldr	r2, [pc, #84]	; (80043d0 <UART_AdvFeatureConfig+0x160>)
 800437a:	4013      	ands	r3, r2
 800437c:	0019      	movs	r1, r3
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	430a      	orrs	r2, r1
 8004388:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800438e:	2280      	movs	r2, #128	; 0x80
 8004390:	4013      	ands	r3, r2
 8004392:	d00b      	beq.n	80043ac <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	685b      	ldr	r3, [r3, #4]
 800439a:	4a0e      	ldr	r2, [pc, #56]	; (80043d4 <UART_AdvFeatureConfig+0x164>)
 800439c:	4013      	ands	r3, r2
 800439e:	0019      	movs	r1, r3
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	430a      	orrs	r2, r1
 80043aa:	605a      	str	r2, [r3, #4]
  }
}
 80043ac:	46c0      	nop			; (mov r8, r8)
 80043ae:	46bd      	mov	sp, r7
 80043b0:	b002      	add	sp, #8
 80043b2:	bd80      	pop	{r7, pc}
 80043b4:	fffdffff 	.word	0xfffdffff
 80043b8:	fffeffff 	.word	0xfffeffff
 80043bc:	fffbffff 	.word	0xfffbffff
 80043c0:	ffff7fff 	.word	0xffff7fff
 80043c4:	ffffefff 	.word	0xffffefff
 80043c8:	ffffdfff 	.word	0xffffdfff
 80043cc:	ffefffff 	.word	0xffefffff
 80043d0:	ff9fffff 	.word	0xff9fffff
 80043d4:	fff7ffff 	.word	0xfff7ffff

080043d8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 80043d8:	b580      	push	{r7, lr}
 80043da:	b086      	sub	sp, #24
 80043dc:	af02      	add	r7, sp, #8
 80043de:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	2280      	movs	r2, #128	; 0x80
 80043e4:	2100      	movs	r1, #0
 80043e6:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 80043e8:	f7fe fae2 	bl	80029b0 <HAL_GetTick>
 80043ec:	0003      	movs	r3, r0
 80043ee:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	2208      	movs	r2, #8
 80043f8:	4013      	ands	r3, r2
 80043fa:	2b08      	cmp	r3, #8
 80043fc:	d10c      	bne.n	8004418 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	2280      	movs	r2, #128	; 0x80
 8004402:	0391      	lsls	r1, r2, #14
 8004404:	6878      	ldr	r0, [r7, #4]
 8004406:	4a17      	ldr	r2, [pc, #92]	; (8004464 <UART_CheckIdleState+0x8c>)
 8004408:	9200      	str	r2, [sp, #0]
 800440a:	2200      	movs	r2, #0
 800440c:	f000 f82c 	bl	8004468 <UART_WaitOnFlagUntilTimeout>
 8004410:	1e03      	subs	r3, r0, #0
 8004412:	d001      	beq.n	8004418 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004414:	2303      	movs	r3, #3
 8004416:	e021      	b.n	800445c <UART_CheckIdleState+0x84>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	2204      	movs	r2, #4
 8004420:	4013      	ands	r3, r2
 8004422:	2b04      	cmp	r3, #4
 8004424:	d10c      	bne.n	8004440 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004426:	68fb      	ldr	r3, [r7, #12]
 8004428:	2280      	movs	r2, #128	; 0x80
 800442a:	03d1      	lsls	r1, r2, #15
 800442c:	6878      	ldr	r0, [r7, #4]
 800442e:	4a0d      	ldr	r2, [pc, #52]	; (8004464 <UART_CheckIdleState+0x8c>)
 8004430:	9200      	str	r2, [sp, #0]
 8004432:	2200      	movs	r2, #0
 8004434:	f000 f818 	bl	8004468 <UART_WaitOnFlagUntilTimeout>
 8004438:	1e03      	subs	r3, r0, #0
 800443a:	d001      	beq.n	8004440 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 800443c:	2303      	movs	r3, #3
 800443e:	e00d      	b.n	800445c <UART_CheckIdleState+0x84>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	2220      	movs	r2, #32
 8004444:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	2220      	movs	r2, #32
 800444a:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	2200      	movs	r2, #0
 8004450:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	2274      	movs	r2, #116	; 0x74
 8004456:	2100      	movs	r1, #0
 8004458:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800445a:	2300      	movs	r3, #0
}
 800445c:	0018      	movs	r0, r3
 800445e:	46bd      	mov	sp, r7
 8004460:	b004      	add	sp, #16
 8004462:	bd80      	pop	{r7, pc}
 8004464:	01ffffff 	.word	0x01ffffff

08004468 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8004468:	b580      	push	{r7, lr}
 800446a:	b094      	sub	sp, #80	; 0x50
 800446c:	af00      	add	r7, sp, #0
 800446e:	60f8      	str	r0, [r7, #12]
 8004470:	60b9      	str	r1, [r7, #8]
 8004472:	603b      	str	r3, [r7, #0]
 8004474:	1dfb      	adds	r3, r7, #7
 8004476:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004478:	e0a3      	b.n	80045c2 <UART_WaitOnFlagUntilTimeout+0x15a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800447a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800447c:	3301      	adds	r3, #1
 800447e:	d100      	bne.n	8004482 <UART_WaitOnFlagUntilTimeout+0x1a>
 8004480:	e09f      	b.n	80045c2 <UART_WaitOnFlagUntilTimeout+0x15a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004482:	f7fe fa95 	bl	80029b0 <HAL_GetTick>
 8004486:	0002      	movs	r2, r0
 8004488:	683b      	ldr	r3, [r7, #0]
 800448a:	1ad3      	subs	r3, r2, r3
 800448c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800448e:	429a      	cmp	r2, r3
 8004490:	d302      	bcc.n	8004498 <UART_WaitOnFlagUntilTimeout+0x30>
 8004492:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8004494:	2b00      	cmp	r3, #0
 8004496:	d13d      	bne.n	8004514 <UART_WaitOnFlagUntilTimeout+0xac>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004498:	f3ef 8310 	mrs	r3, PRIMASK
 800449c:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 800449e:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80044a0:	647b      	str	r3, [r7, #68]	; 0x44
 80044a2:	2301      	movs	r3, #1
 80044a4:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80044a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044a8:	f383 8810 	msr	PRIMASK, r3
}
 80044ac:	46c0      	nop			; (mov r8, r8)
 80044ae:	68fb      	ldr	r3, [r7, #12]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	681a      	ldr	r2, [r3, #0]
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	494c      	ldr	r1, [pc, #304]	; (80045ec <UART_WaitOnFlagUntilTimeout+0x184>)
 80044ba:	400a      	ands	r2, r1
 80044bc:	601a      	str	r2, [r3, #0]
 80044be:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80044c0:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80044c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80044c4:	f383 8810 	msr	PRIMASK, r3
}
 80044c8:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80044ca:	f3ef 8310 	mrs	r3, PRIMASK
 80044ce:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 80044d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80044d2:	643b      	str	r3, [r7, #64]	; 0x40
 80044d4:	2301      	movs	r3, #1
 80044d6:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80044d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80044da:	f383 8810 	msr	PRIMASK, r3
}
 80044de:	46c0      	nop			; (mov r8, r8)
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	689a      	ldr	r2, [r3, #8]
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	2101      	movs	r1, #1
 80044ec:	438a      	bics	r2, r1
 80044ee:	609a      	str	r2, [r3, #8]
 80044f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80044f2:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80044f4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80044f6:	f383 8810 	msr	PRIMASK, r3
}
 80044fa:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 80044fc:	68fb      	ldr	r3, [r7, #12]
 80044fe:	2220      	movs	r2, #32
 8004500:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	2220      	movs	r2, #32
 8004506:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	2274      	movs	r2, #116	; 0x74
 800450c:	2100      	movs	r1, #0
 800450e:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8004510:	2303      	movs	r3, #3
 8004512:	e067      	b.n	80045e4 <UART_WaitOnFlagUntilTimeout+0x17c>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	2204      	movs	r2, #4
 800451c:	4013      	ands	r3, r2
 800451e:	d050      	beq.n	80045c2 <UART_WaitOnFlagUntilTimeout+0x15a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004520:	68fb      	ldr	r3, [r7, #12]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	69da      	ldr	r2, [r3, #28]
 8004526:	2380      	movs	r3, #128	; 0x80
 8004528:	011b      	lsls	r3, r3, #4
 800452a:	401a      	ands	r2, r3
 800452c:	2380      	movs	r3, #128	; 0x80
 800452e:	011b      	lsls	r3, r3, #4
 8004530:	429a      	cmp	r2, r3
 8004532:	d146      	bne.n	80045c2 <UART_WaitOnFlagUntilTimeout+0x15a>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8004534:	68fb      	ldr	r3, [r7, #12]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	2280      	movs	r2, #128	; 0x80
 800453a:	0112      	lsls	r2, r2, #4
 800453c:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800453e:	f3ef 8310 	mrs	r3, PRIMASK
 8004542:	613b      	str	r3, [r7, #16]
  return(result);
 8004544:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004546:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004548:	2301      	movs	r3, #1
 800454a:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800454c:	697b      	ldr	r3, [r7, #20]
 800454e:	f383 8810 	msr	PRIMASK, r3
}
 8004552:	46c0      	nop			; (mov r8, r8)
 8004554:	68fb      	ldr	r3, [r7, #12]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	681a      	ldr	r2, [r3, #0]
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	4923      	ldr	r1, [pc, #140]	; (80045ec <UART_WaitOnFlagUntilTimeout+0x184>)
 8004560:	400a      	ands	r2, r1
 8004562:	601a      	str	r2, [r3, #0]
 8004564:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004566:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004568:	69bb      	ldr	r3, [r7, #24]
 800456a:	f383 8810 	msr	PRIMASK, r3
}
 800456e:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004570:	f3ef 8310 	mrs	r3, PRIMASK
 8004574:	61fb      	str	r3, [r7, #28]
  return(result);
 8004576:	69fb      	ldr	r3, [r7, #28]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004578:	64bb      	str	r3, [r7, #72]	; 0x48
 800457a:	2301      	movs	r3, #1
 800457c:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800457e:	6a3b      	ldr	r3, [r7, #32]
 8004580:	f383 8810 	msr	PRIMASK, r3
}
 8004584:	46c0      	nop			; (mov r8, r8)
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	689a      	ldr	r2, [r3, #8]
 800458c:	68fb      	ldr	r3, [r7, #12]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	2101      	movs	r1, #1
 8004592:	438a      	bics	r2, r1
 8004594:	609a      	str	r2, [r3, #8]
 8004596:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004598:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800459a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800459c:	f383 8810 	msr	PRIMASK, r3
}
 80045a0:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	2220      	movs	r2, #32
 80045a6:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 80045a8:	68fb      	ldr	r3, [r7, #12]
 80045aa:	2220      	movs	r2, #32
 80045ac:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	2280      	movs	r2, #128	; 0x80
 80045b2:	2120      	movs	r1, #32
 80045b4:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	2274      	movs	r2, #116	; 0x74
 80045ba:	2100      	movs	r1, #0
 80045bc:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 80045be:	2303      	movs	r3, #3
 80045c0:	e010      	b.n	80045e4 <UART_WaitOnFlagUntilTimeout+0x17c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80045c2:	68fb      	ldr	r3, [r7, #12]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	69db      	ldr	r3, [r3, #28]
 80045c8:	68ba      	ldr	r2, [r7, #8]
 80045ca:	4013      	ands	r3, r2
 80045cc:	68ba      	ldr	r2, [r7, #8]
 80045ce:	1ad3      	subs	r3, r2, r3
 80045d0:	425a      	negs	r2, r3
 80045d2:	4153      	adcs	r3, r2
 80045d4:	b2db      	uxtb	r3, r3
 80045d6:	001a      	movs	r2, r3
 80045d8:	1dfb      	adds	r3, r7, #7
 80045da:	781b      	ldrb	r3, [r3, #0]
 80045dc:	429a      	cmp	r2, r3
 80045de:	d100      	bne.n	80045e2 <UART_WaitOnFlagUntilTimeout+0x17a>
 80045e0:	e74b      	b.n	800447a <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80045e2:	2300      	movs	r3, #0
}
 80045e4:	0018      	movs	r0, r3
 80045e6:	46bd      	mov	sp, r7
 80045e8:	b014      	add	sp, #80	; 0x50
 80045ea:	bd80      	pop	{r7, pc}
 80045ec:	fffffe5f 	.word	0xfffffe5f

080045f0 <__errno>:
 80045f0:	4b01      	ldr	r3, [pc, #4]	; (80045f8 <__errno+0x8>)
 80045f2:	6818      	ldr	r0, [r3, #0]
 80045f4:	4770      	bx	lr
 80045f6:	46c0      	nop			; (mov r8, r8)
 80045f8:	2000000c 	.word	0x2000000c

080045fc <__libc_init_array>:
 80045fc:	b570      	push	{r4, r5, r6, lr}
 80045fe:	2600      	movs	r6, #0
 8004600:	4d0c      	ldr	r5, [pc, #48]	; (8004634 <__libc_init_array+0x38>)
 8004602:	4c0d      	ldr	r4, [pc, #52]	; (8004638 <__libc_init_array+0x3c>)
 8004604:	1b64      	subs	r4, r4, r5
 8004606:	10a4      	asrs	r4, r4, #2
 8004608:	42a6      	cmp	r6, r4
 800460a:	d109      	bne.n	8004620 <__libc_init_array+0x24>
 800460c:	2600      	movs	r6, #0
 800460e:	f004 fd47 	bl	80090a0 <_init>
 8004612:	4d0a      	ldr	r5, [pc, #40]	; (800463c <__libc_init_array+0x40>)
 8004614:	4c0a      	ldr	r4, [pc, #40]	; (8004640 <__libc_init_array+0x44>)
 8004616:	1b64      	subs	r4, r4, r5
 8004618:	10a4      	asrs	r4, r4, #2
 800461a:	42a6      	cmp	r6, r4
 800461c:	d105      	bne.n	800462a <__libc_init_array+0x2e>
 800461e:	bd70      	pop	{r4, r5, r6, pc}
 8004620:	00b3      	lsls	r3, r6, #2
 8004622:	58eb      	ldr	r3, [r5, r3]
 8004624:	4798      	blx	r3
 8004626:	3601      	adds	r6, #1
 8004628:	e7ee      	b.n	8004608 <__libc_init_array+0xc>
 800462a:	00b3      	lsls	r3, r6, #2
 800462c:	58eb      	ldr	r3, [r5, r3]
 800462e:	4798      	blx	r3
 8004630:	3601      	adds	r6, #1
 8004632:	e7f2      	b.n	800461a <__libc_init_array+0x1e>
 8004634:	08009614 	.word	0x08009614
 8004638:	08009614 	.word	0x08009614
 800463c:	08009614 	.word	0x08009614
 8004640:	08009618 	.word	0x08009618

08004644 <memset>:
 8004644:	0003      	movs	r3, r0
 8004646:	1882      	adds	r2, r0, r2
 8004648:	4293      	cmp	r3, r2
 800464a:	d100      	bne.n	800464e <memset+0xa>
 800464c:	4770      	bx	lr
 800464e:	7019      	strb	r1, [r3, #0]
 8004650:	3301      	adds	r3, #1
 8004652:	e7f9      	b.n	8004648 <memset+0x4>

08004654 <__cvt>:
 8004654:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004656:	001e      	movs	r6, r3
 8004658:	2300      	movs	r3, #0
 800465a:	0014      	movs	r4, r2
 800465c:	b08b      	sub	sp, #44	; 0x2c
 800465e:	429e      	cmp	r6, r3
 8004660:	da04      	bge.n	800466c <__cvt+0x18>
 8004662:	2180      	movs	r1, #128	; 0x80
 8004664:	0609      	lsls	r1, r1, #24
 8004666:	1873      	adds	r3, r6, r1
 8004668:	001e      	movs	r6, r3
 800466a:	232d      	movs	r3, #45	; 0x2d
 800466c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800466e:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004670:	7013      	strb	r3, [r2, #0]
 8004672:	2320      	movs	r3, #32
 8004674:	2203      	movs	r2, #3
 8004676:	439f      	bics	r7, r3
 8004678:	2f46      	cmp	r7, #70	; 0x46
 800467a:	d007      	beq.n	800468c <__cvt+0x38>
 800467c:	003b      	movs	r3, r7
 800467e:	3b45      	subs	r3, #69	; 0x45
 8004680:	4259      	negs	r1, r3
 8004682:	414b      	adcs	r3, r1
 8004684:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004686:	3a01      	subs	r2, #1
 8004688:	18cb      	adds	r3, r1, r3
 800468a:	9310      	str	r3, [sp, #64]	; 0x40
 800468c:	ab09      	add	r3, sp, #36	; 0x24
 800468e:	9304      	str	r3, [sp, #16]
 8004690:	ab08      	add	r3, sp, #32
 8004692:	9303      	str	r3, [sp, #12]
 8004694:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004696:	9200      	str	r2, [sp, #0]
 8004698:	9302      	str	r3, [sp, #8]
 800469a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800469c:	0022      	movs	r2, r4
 800469e:	9301      	str	r3, [sp, #4]
 80046a0:	0033      	movs	r3, r6
 80046a2:	f001 fdc3 	bl	800622c <_dtoa_r>
 80046a6:	0005      	movs	r5, r0
 80046a8:	2f47      	cmp	r7, #71	; 0x47
 80046aa:	d102      	bne.n	80046b2 <__cvt+0x5e>
 80046ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046ae:	07db      	lsls	r3, r3, #31
 80046b0:	d528      	bpl.n	8004704 <__cvt+0xb0>
 80046b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80046b4:	18eb      	adds	r3, r5, r3
 80046b6:	9307      	str	r3, [sp, #28]
 80046b8:	2f46      	cmp	r7, #70	; 0x46
 80046ba:	d114      	bne.n	80046e6 <__cvt+0x92>
 80046bc:	782b      	ldrb	r3, [r5, #0]
 80046be:	2b30      	cmp	r3, #48	; 0x30
 80046c0:	d10c      	bne.n	80046dc <__cvt+0x88>
 80046c2:	2200      	movs	r2, #0
 80046c4:	2300      	movs	r3, #0
 80046c6:	0020      	movs	r0, r4
 80046c8:	0031      	movs	r1, r6
 80046ca:	f7fb febf 	bl	800044c <__aeabi_dcmpeq>
 80046ce:	2800      	cmp	r0, #0
 80046d0:	d104      	bne.n	80046dc <__cvt+0x88>
 80046d2:	2301      	movs	r3, #1
 80046d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80046d6:	1a9b      	subs	r3, r3, r2
 80046d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80046da:	6013      	str	r3, [r2, #0]
 80046dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80046de:	9a07      	ldr	r2, [sp, #28]
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	18d3      	adds	r3, r2, r3
 80046e4:	9307      	str	r3, [sp, #28]
 80046e6:	2200      	movs	r2, #0
 80046e8:	2300      	movs	r3, #0
 80046ea:	0020      	movs	r0, r4
 80046ec:	0031      	movs	r1, r6
 80046ee:	f7fb fead 	bl	800044c <__aeabi_dcmpeq>
 80046f2:	2800      	cmp	r0, #0
 80046f4:	d001      	beq.n	80046fa <__cvt+0xa6>
 80046f6:	9b07      	ldr	r3, [sp, #28]
 80046f8:	9309      	str	r3, [sp, #36]	; 0x24
 80046fa:	2230      	movs	r2, #48	; 0x30
 80046fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80046fe:	9907      	ldr	r1, [sp, #28]
 8004700:	428b      	cmp	r3, r1
 8004702:	d306      	bcc.n	8004712 <__cvt+0xbe>
 8004704:	0028      	movs	r0, r5
 8004706:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004708:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800470a:	1b5b      	subs	r3, r3, r5
 800470c:	6013      	str	r3, [r2, #0]
 800470e:	b00b      	add	sp, #44	; 0x2c
 8004710:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004712:	1c59      	adds	r1, r3, #1
 8004714:	9109      	str	r1, [sp, #36]	; 0x24
 8004716:	701a      	strb	r2, [r3, #0]
 8004718:	e7f0      	b.n	80046fc <__cvt+0xa8>

0800471a <__exponent>:
 800471a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800471c:	1c83      	adds	r3, r0, #2
 800471e:	b087      	sub	sp, #28
 8004720:	9303      	str	r3, [sp, #12]
 8004722:	0005      	movs	r5, r0
 8004724:	000c      	movs	r4, r1
 8004726:	232b      	movs	r3, #43	; 0x2b
 8004728:	7002      	strb	r2, [r0, #0]
 800472a:	2900      	cmp	r1, #0
 800472c:	da01      	bge.n	8004732 <__exponent+0x18>
 800472e:	424c      	negs	r4, r1
 8004730:	3302      	adds	r3, #2
 8004732:	706b      	strb	r3, [r5, #1]
 8004734:	2c09      	cmp	r4, #9
 8004736:	dd31      	ble.n	800479c <__exponent+0x82>
 8004738:	270a      	movs	r7, #10
 800473a:	ab04      	add	r3, sp, #16
 800473c:	1dde      	adds	r6, r3, #7
 800473e:	0020      	movs	r0, r4
 8004740:	0039      	movs	r1, r7
 8004742:	9601      	str	r6, [sp, #4]
 8004744:	f7fb fe6c 	bl	8000420 <__aeabi_idivmod>
 8004748:	3e01      	subs	r6, #1
 800474a:	3130      	adds	r1, #48	; 0x30
 800474c:	0020      	movs	r0, r4
 800474e:	7031      	strb	r1, [r6, #0]
 8004750:	0039      	movs	r1, r7
 8004752:	9402      	str	r4, [sp, #8]
 8004754:	f7fb fd7e 	bl	8000254 <__divsi3>
 8004758:	9b02      	ldr	r3, [sp, #8]
 800475a:	0004      	movs	r4, r0
 800475c:	2b63      	cmp	r3, #99	; 0x63
 800475e:	dcee      	bgt.n	800473e <__exponent+0x24>
 8004760:	9b01      	ldr	r3, [sp, #4]
 8004762:	3430      	adds	r4, #48	; 0x30
 8004764:	1e9a      	subs	r2, r3, #2
 8004766:	0013      	movs	r3, r2
 8004768:	9903      	ldr	r1, [sp, #12]
 800476a:	7014      	strb	r4, [r2, #0]
 800476c:	a804      	add	r0, sp, #16
 800476e:	3007      	adds	r0, #7
 8004770:	4298      	cmp	r0, r3
 8004772:	d80e      	bhi.n	8004792 <__exponent+0x78>
 8004774:	ab04      	add	r3, sp, #16
 8004776:	3307      	adds	r3, #7
 8004778:	2000      	movs	r0, #0
 800477a:	429a      	cmp	r2, r3
 800477c:	d804      	bhi.n	8004788 <__exponent+0x6e>
 800477e:	ab04      	add	r3, sp, #16
 8004780:	3009      	adds	r0, #9
 8004782:	18c0      	adds	r0, r0, r3
 8004784:	9b01      	ldr	r3, [sp, #4]
 8004786:	1ac0      	subs	r0, r0, r3
 8004788:	9b03      	ldr	r3, [sp, #12]
 800478a:	1818      	adds	r0, r3, r0
 800478c:	1b40      	subs	r0, r0, r5
 800478e:	b007      	add	sp, #28
 8004790:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004792:	7818      	ldrb	r0, [r3, #0]
 8004794:	3301      	adds	r3, #1
 8004796:	7008      	strb	r0, [r1, #0]
 8004798:	3101      	adds	r1, #1
 800479a:	e7e7      	b.n	800476c <__exponent+0x52>
 800479c:	2330      	movs	r3, #48	; 0x30
 800479e:	18e4      	adds	r4, r4, r3
 80047a0:	70ab      	strb	r3, [r5, #2]
 80047a2:	1d28      	adds	r0, r5, #4
 80047a4:	70ec      	strb	r4, [r5, #3]
 80047a6:	e7f1      	b.n	800478c <__exponent+0x72>

080047a8 <_printf_float>:
 80047a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047aa:	b095      	sub	sp, #84	; 0x54
 80047ac:	000c      	movs	r4, r1
 80047ae:	9209      	str	r2, [sp, #36]	; 0x24
 80047b0:	001e      	movs	r6, r3
 80047b2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80047b4:	0007      	movs	r7, r0
 80047b6:	f002 fec7 	bl	8007548 <_localeconv_r>
 80047ba:	6803      	ldr	r3, [r0, #0]
 80047bc:	0018      	movs	r0, r3
 80047be:	930c      	str	r3, [sp, #48]	; 0x30
 80047c0:	f7fb fca2 	bl	8000108 <strlen>
 80047c4:	2300      	movs	r3, #0
 80047c6:	9312      	str	r3, [sp, #72]	; 0x48
 80047c8:	7e23      	ldrb	r3, [r4, #24]
 80047ca:	2207      	movs	r2, #7
 80047cc:	930a      	str	r3, [sp, #40]	; 0x28
 80047ce:	6823      	ldr	r3, [r4, #0]
 80047d0:	900e      	str	r0, [sp, #56]	; 0x38
 80047d2:	930d      	str	r3, [sp, #52]	; 0x34
 80047d4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80047d6:	682b      	ldr	r3, [r5, #0]
 80047d8:	05c9      	lsls	r1, r1, #23
 80047da:	d547      	bpl.n	800486c <_printf_float+0xc4>
 80047dc:	189b      	adds	r3, r3, r2
 80047de:	4393      	bics	r3, r2
 80047e0:	001a      	movs	r2, r3
 80047e2:	3208      	adds	r2, #8
 80047e4:	602a      	str	r2, [r5, #0]
 80047e6:	681a      	ldr	r2, [r3, #0]
 80047e8:	685b      	ldr	r3, [r3, #4]
 80047ea:	64a2      	str	r2, [r4, #72]	; 0x48
 80047ec:	64e3      	str	r3, [r4, #76]	; 0x4c
 80047ee:	2201      	movs	r2, #1
 80047f0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80047f2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80047f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80047f6:	006b      	lsls	r3, r5, #1
 80047f8:	085b      	lsrs	r3, r3, #1
 80047fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80047fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80047fe:	4ba7      	ldr	r3, [pc, #668]	; (8004a9c <_printf_float+0x2f4>)
 8004800:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004802:	4252      	negs	r2, r2
 8004804:	f7fd fbfc 	bl	8002000 <__aeabi_dcmpun>
 8004808:	2800      	cmp	r0, #0
 800480a:	d131      	bne.n	8004870 <_printf_float+0xc8>
 800480c:	2201      	movs	r2, #1
 800480e:	4ba3      	ldr	r3, [pc, #652]	; (8004a9c <_printf_float+0x2f4>)
 8004810:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004812:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004814:	4252      	negs	r2, r2
 8004816:	f7fb fe29 	bl	800046c <__aeabi_dcmple>
 800481a:	2800      	cmp	r0, #0
 800481c:	d128      	bne.n	8004870 <_printf_float+0xc8>
 800481e:	2200      	movs	r2, #0
 8004820:	2300      	movs	r3, #0
 8004822:	0029      	movs	r1, r5
 8004824:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004826:	f7fb fe17 	bl	8000458 <__aeabi_dcmplt>
 800482a:	2800      	cmp	r0, #0
 800482c:	d003      	beq.n	8004836 <_printf_float+0x8e>
 800482e:	0023      	movs	r3, r4
 8004830:	222d      	movs	r2, #45	; 0x2d
 8004832:	3343      	adds	r3, #67	; 0x43
 8004834:	701a      	strb	r2, [r3, #0]
 8004836:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004838:	4d99      	ldr	r5, [pc, #612]	; (8004aa0 <_printf_float+0x2f8>)
 800483a:	2b47      	cmp	r3, #71	; 0x47
 800483c:	d900      	bls.n	8004840 <_printf_float+0x98>
 800483e:	4d99      	ldr	r5, [pc, #612]	; (8004aa4 <_printf_float+0x2fc>)
 8004840:	2303      	movs	r3, #3
 8004842:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004844:	6123      	str	r3, [r4, #16]
 8004846:	3301      	adds	r3, #1
 8004848:	439a      	bics	r2, r3
 800484a:	2300      	movs	r3, #0
 800484c:	6022      	str	r2, [r4, #0]
 800484e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004850:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004852:	0021      	movs	r1, r4
 8004854:	0038      	movs	r0, r7
 8004856:	9600      	str	r6, [sp, #0]
 8004858:	aa13      	add	r2, sp, #76	; 0x4c
 800485a:	f000 f9e7 	bl	8004c2c <_printf_common>
 800485e:	1c43      	adds	r3, r0, #1
 8004860:	d000      	beq.n	8004864 <_printf_float+0xbc>
 8004862:	e0a2      	b.n	80049aa <_printf_float+0x202>
 8004864:	2001      	movs	r0, #1
 8004866:	4240      	negs	r0, r0
 8004868:	b015      	add	sp, #84	; 0x54
 800486a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800486c:	3307      	adds	r3, #7
 800486e:	e7b6      	b.n	80047de <_printf_float+0x36>
 8004870:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004872:	002b      	movs	r3, r5
 8004874:	0010      	movs	r0, r2
 8004876:	0029      	movs	r1, r5
 8004878:	f7fd fbc2 	bl	8002000 <__aeabi_dcmpun>
 800487c:	2800      	cmp	r0, #0
 800487e:	d00b      	beq.n	8004898 <_printf_float+0xf0>
 8004880:	2d00      	cmp	r5, #0
 8004882:	da03      	bge.n	800488c <_printf_float+0xe4>
 8004884:	0023      	movs	r3, r4
 8004886:	222d      	movs	r2, #45	; 0x2d
 8004888:	3343      	adds	r3, #67	; 0x43
 800488a:	701a      	strb	r2, [r3, #0]
 800488c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800488e:	4d86      	ldr	r5, [pc, #536]	; (8004aa8 <_printf_float+0x300>)
 8004890:	2b47      	cmp	r3, #71	; 0x47
 8004892:	d9d5      	bls.n	8004840 <_printf_float+0x98>
 8004894:	4d85      	ldr	r5, [pc, #532]	; (8004aac <_printf_float+0x304>)
 8004896:	e7d3      	b.n	8004840 <_printf_float+0x98>
 8004898:	2220      	movs	r2, #32
 800489a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800489c:	6863      	ldr	r3, [r4, #4]
 800489e:	4391      	bics	r1, r2
 80048a0:	910f      	str	r1, [sp, #60]	; 0x3c
 80048a2:	1c5a      	adds	r2, r3, #1
 80048a4:	d149      	bne.n	800493a <_printf_float+0x192>
 80048a6:	3307      	adds	r3, #7
 80048a8:	6063      	str	r3, [r4, #4]
 80048aa:	2380      	movs	r3, #128	; 0x80
 80048ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80048ae:	00db      	lsls	r3, r3, #3
 80048b0:	4313      	orrs	r3, r2
 80048b2:	2200      	movs	r2, #0
 80048b4:	9206      	str	r2, [sp, #24]
 80048b6:	aa12      	add	r2, sp, #72	; 0x48
 80048b8:	9205      	str	r2, [sp, #20]
 80048ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80048bc:	a908      	add	r1, sp, #32
 80048be:	9204      	str	r2, [sp, #16]
 80048c0:	aa11      	add	r2, sp, #68	; 0x44
 80048c2:	9203      	str	r2, [sp, #12]
 80048c4:	2223      	movs	r2, #35	; 0x23
 80048c6:	6023      	str	r3, [r4, #0]
 80048c8:	9301      	str	r3, [sp, #4]
 80048ca:	6863      	ldr	r3, [r4, #4]
 80048cc:	1852      	adds	r2, r2, r1
 80048ce:	9202      	str	r2, [sp, #8]
 80048d0:	9300      	str	r3, [sp, #0]
 80048d2:	0038      	movs	r0, r7
 80048d4:	002b      	movs	r3, r5
 80048d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80048d8:	f7ff febc 	bl	8004654 <__cvt>
 80048dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80048de:	0005      	movs	r5, r0
 80048e0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80048e2:	2b47      	cmp	r3, #71	; 0x47
 80048e4:	d108      	bne.n	80048f8 <_printf_float+0x150>
 80048e6:	1ccb      	adds	r3, r1, #3
 80048e8:	db02      	blt.n	80048f0 <_printf_float+0x148>
 80048ea:	6863      	ldr	r3, [r4, #4]
 80048ec:	4299      	cmp	r1, r3
 80048ee:	dd48      	ble.n	8004982 <_printf_float+0x1da>
 80048f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80048f2:	3b02      	subs	r3, #2
 80048f4:	b2db      	uxtb	r3, r3
 80048f6:	930a      	str	r3, [sp, #40]	; 0x28
 80048f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80048fa:	2b65      	cmp	r3, #101	; 0x65
 80048fc:	d824      	bhi.n	8004948 <_printf_float+0x1a0>
 80048fe:	0020      	movs	r0, r4
 8004900:	001a      	movs	r2, r3
 8004902:	3901      	subs	r1, #1
 8004904:	3050      	adds	r0, #80	; 0x50
 8004906:	9111      	str	r1, [sp, #68]	; 0x44
 8004908:	f7ff ff07 	bl	800471a <__exponent>
 800490c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800490e:	900b      	str	r0, [sp, #44]	; 0x2c
 8004910:	1813      	adds	r3, r2, r0
 8004912:	6123      	str	r3, [r4, #16]
 8004914:	2a01      	cmp	r2, #1
 8004916:	dc02      	bgt.n	800491e <_printf_float+0x176>
 8004918:	6822      	ldr	r2, [r4, #0]
 800491a:	07d2      	lsls	r2, r2, #31
 800491c:	d501      	bpl.n	8004922 <_printf_float+0x17a>
 800491e:	3301      	adds	r3, #1
 8004920:	6123      	str	r3, [r4, #16]
 8004922:	2323      	movs	r3, #35	; 0x23
 8004924:	aa08      	add	r2, sp, #32
 8004926:	189b      	adds	r3, r3, r2
 8004928:	781b      	ldrb	r3, [r3, #0]
 800492a:	2b00      	cmp	r3, #0
 800492c:	d100      	bne.n	8004930 <_printf_float+0x188>
 800492e:	e78f      	b.n	8004850 <_printf_float+0xa8>
 8004930:	0023      	movs	r3, r4
 8004932:	222d      	movs	r2, #45	; 0x2d
 8004934:	3343      	adds	r3, #67	; 0x43
 8004936:	701a      	strb	r2, [r3, #0]
 8004938:	e78a      	b.n	8004850 <_printf_float+0xa8>
 800493a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800493c:	2a47      	cmp	r2, #71	; 0x47
 800493e:	d1b4      	bne.n	80048aa <_printf_float+0x102>
 8004940:	2b00      	cmp	r3, #0
 8004942:	d1b2      	bne.n	80048aa <_printf_float+0x102>
 8004944:	3301      	adds	r3, #1
 8004946:	e7af      	b.n	80048a8 <_printf_float+0x100>
 8004948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800494a:	2b66      	cmp	r3, #102	; 0x66
 800494c:	d11b      	bne.n	8004986 <_printf_float+0x1de>
 800494e:	6863      	ldr	r3, [r4, #4]
 8004950:	2900      	cmp	r1, #0
 8004952:	dd0d      	ble.n	8004970 <_printf_float+0x1c8>
 8004954:	6121      	str	r1, [r4, #16]
 8004956:	2b00      	cmp	r3, #0
 8004958:	d102      	bne.n	8004960 <_printf_float+0x1b8>
 800495a:	6822      	ldr	r2, [r4, #0]
 800495c:	07d2      	lsls	r2, r2, #31
 800495e:	d502      	bpl.n	8004966 <_printf_float+0x1be>
 8004960:	3301      	adds	r3, #1
 8004962:	1859      	adds	r1, r3, r1
 8004964:	6121      	str	r1, [r4, #16]
 8004966:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004968:	65a3      	str	r3, [r4, #88]	; 0x58
 800496a:	2300      	movs	r3, #0
 800496c:	930b      	str	r3, [sp, #44]	; 0x2c
 800496e:	e7d8      	b.n	8004922 <_printf_float+0x17a>
 8004970:	2b00      	cmp	r3, #0
 8004972:	d103      	bne.n	800497c <_printf_float+0x1d4>
 8004974:	2201      	movs	r2, #1
 8004976:	6821      	ldr	r1, [r4, #0]
 8004978:	4211      	tst	r1, r2
 800497a:	d000      	beq.n	800497e <_printf_float+0x1d6>
 800497c:	1c9a      	adds	r2, r3, #2
 800497e:	6122      	str	r2, [r4, #16]
 8004980:	e7f1      	b.n	8004966 <_printf_float+0x1be>
 8004982:	2367      	movs	r3, #103	; 0x67
 8004984:	930a      	str	r3, [sp, #40]	; 0x28
 8004986:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004988:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800498a:	4293      	cmp	r3, r2
 800498c:	db06      	blt.n	800499c <_printf_float+0x1f4>
 800498e:	6822      	ldr	r2, [r4, #0]
 8004990:	6123      	str	r3, [r4, #16]
 8004992:	07d2      	lsls	r2, r2, #31
 8004994:	d5e7      	bpl.n	8004966 <_printf_float+0x1be>
 8004996:	3301      	adds	r3, #1
 8004998:	6123      	str	r3, [r4, #16]
 800499a:	e7e4      	b.n	8004966 <_printf_float+0x1be>
 800499c:	2101      	movs	r1, #1
 800499e:	2b00      	cmp	r3, #0
 80049a0:	dc01      	bgt.n	80049a6 <_printf_float+0x1fe>
 80049a2:	1849      	adds	r1, r1, r1
 80049a4:	1ac9      	subs	r1, r1, r3
 80049a6:	1852      	adds	r2, r2, r1
 80049a8:	e7e9      	b.n	800497e <_printf_float+0x1d6>
 80049aa:	6822      	ldr	r2, [r4, #0]
 80049ac:	0553      	lsls	r3, r2, #21
 80049ae:	d407      	bmi.n	80049c0 <_printf_float+0x218>
 80049b0:	6923      	ldr	r3, [r4, #16]
 80049b2:	002a      	movs	r2, r5
 80049b4:	0038      	movs	r0, r7
 80049b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80049b8:	47b0      	blx	r6
 80049ba:	1c43      	adds	r3, r0, #1
 80049bc:	d128      	bne.n	8004a10 <_printf_float+0x268>
 80049be:	e751      	b.n	8004864 <_printf_float+0xbc>
 80049c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049c2:	2b65      	cmp	r3, #101	; 0x65
 80049c4:	d800      	bhi.n	80049c8 <_printf_float+0x220>
 80049c6:	e0e1      	b.n	8004b8c <_printf_float+0x3e4>
 80049c8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80049ca:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80049cc:	2200      	movs	r2, #0
 80049ce:	2300      	movs	r3, #0
 80049d0:	f7fb fd3c 	bl	800044c <__aeabi_dcmpeq>
 80049d4:	2800      	cmp	r0, #0
 80049d6:	d031      	beq.n	8004a3c <_printf_float+0x294>
 80049d8:	2301      	movs	r3, #1
 80049da:	0038      	movs	r0, r7
 80049dc:	4a34      	ldr	r2, [pc, #208]	; (8004ab0 <_printf_float+0x308>)
 80049de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80049e0:	47b0      	blx	r6
 80049e2:	1c43      	adds	r3, r0, #1
 80049e4:	d100      	bne.n	80049e8 <_printf_float+0x240>
 80049e6:	e73d      	b.n	8004864 <_printf_float+0xbc>
 80049e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80049ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80049ec:	4293      	cmp	r3, r2
 80049ee:	db02      	blt.n	80049f6 <_printf_float+0x24e>
 80049f0:	6823      	ldr	r3, [r4, #0]
 80049f2:	07db      	lsls	r3, r3, #31
 80049f4:	d50c      	bpl.n	8004a10 <_printf_float+0x268>
 80049f6:	0038      	movs	r0, r7
 80049f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80049fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80049fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80049fe:	47b0      	blx	r6
 8004a00:	2500      	movs	r5, #0
 8004a02:	1c43      	adds	r3, r0, #1
 8004a04:	d100      	bne.n	8004a08 <_printf_float+0x260>
 8004a06:	e72d      	b.n	8004864 <_printf_float+0xbc>
 8004a08:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004a0a:	3b01      	subs	r3, #1
 8004a0c:	42ab      	cmp	r3, r5
 8004a0e:	dc0a      	bgt.n	8004a26 <_printf_float+0x27e>
 8004a10:	6823      	ldr	r3, [r4, #0]
 8004a12:	079b      	lsls	r3, r3, #30
 8004a14:	d500      	bpl.n	8004a18 <_printf_float+0x270>
 8004a16:	e106      	b.n	8004c26 <_printf_float+0x47e>
 8004a18:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004a1a:	68e0      	ldr	r0, [r4, #12]
 8004a1c:	4298      	cmp	r0, r3
 8004a1e:	db00      	blt.n	8004a22 <_printf_float+0x27a>
 8004a20:	e722      	b.n	8004868 <_printf_float+0xc0>
 8004a22:	0018      	movs	r0, r3
 8004a24:	e720      	b.n	8004868 <_printf_float+0xc0>
 8004a26:	0022      	movs	r2, r4
 8004a28:	2301      	movs	r3, #1
 8004a2a:	0038      	movs	r0, r7
 8004a2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004a2e:	321a      	adds	r2, #26
 8004a30:	47b0      	blx	r6
 8004a32:	1c43      	adds	r3, r0, #1
 8004a34:	d100      	bne.n	8004a38 <_printf_float+0x290>
 8004a36:	e715      	b.n	8004864 <_printf_float+0xbc>
 8004a38:	3501      	adds	r5, #1
 8004a3a:	e7e5      	b.n	8004a08 <_printf_float+0x260>
 8004a3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a3e:	2b00      	cmp	r3, #0
 8004a40:	dc38      	bgt.n	8004ab4 <_printf_float+0x30c>
 8004a42:	2301      	movs	r3, #1
 8004a44:	0038      	movs	r0, r7
 8004a46:	4a1a      	ldr	r2, [pc, #104]	; (8004ab0 <_printf_float+0x308>)
 8004a48:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004a4a:	47b0      	blx	r6
 8004a4c:	1c43      	adds	r3, r0, #1
 8004a4e:	d100      	bne.n	8004a52 <_printf_float+0x2aa>
 8004a50:	e708      	b.n	8004864 <_printf_float+0xbc>
 8004a52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004a56:	4313      	orrs	r3, r2
 8004a58:	d102      	bne.n	8004a60 <_printf_float+0x2b8>
 8004a5a:	6823      	ldr	r3, [r4, #0]
 8004a5c:	07db      	lsls	r3, r3, #31
 8004a5e:	d5d7      	bpl.n	8004a10 <_printf_float+0x268>
 8004a60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004a62:	0038      	movs	r0, r7
 8004a64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004a66:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004a68:	47b0      	blx	r6
 8004a6a:	1c43      	adds	r3, r0, #1
 8004a6c:	d100      	bne.n	8004a70 <_printf_float+0x2c8>
 8004a6e:	e6f9      	b.n	8004864 <_printf_float+0xbc>
 8004a70:	2300      	movs	r3, #0
 8004a72:	930a      	str	r3, [sp, #40]	; 0x28
 8004a74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a76:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a78:	425b      	negs	r3, r3
 8004a7a:	4293      	cmp	r3, r2
 8004a7c:	dc01      	bgt.n	8004a82 <_printf_float+0x2da>
 8004a7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004a80:	e797      	b.n	80049b2 <_printf_float+0x20a>
 8004a82:	0022      	movs	r2, r4
 8004a84:	2301      	movs	r3, #1
 8004a86:	0038      	movs	r0, r7
 8004a88:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004a8a:	321a      	adds	r2, #26
 8004a8c:	47b0      	blx	r6
 8004a8e:	1c43      	adds	r3, r0, #1
 8004a90:	d100      	bne.n	8004a94 <_printf_float+0x2ec>
 8004a92:	e6e7      	b.n	8004864 <_printf_float+0xbc>
 8004a94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a96:	3301      	adds	r3, #1
 8004a98:	e7eb      	b.n	8004a72 <_printf_float+0x2ca>
 8004a9a:	46c0      	nop			; (mov r8, r8)
 8004a9c:	7fefffff 	.word	0x7fefffff
 8004aa0:	08009174 	.word	0x08009174
 8004aa4:	08009178 	.word	0x08009178
 8004aa8:	0800917c 	.word	0x0800917c
 8004aac:	08009180 	.word	0x08009180
 8004ab0:	08009184 	.word	0x08009184
 8004ab4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ab6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004ab8:	920a      	str	r2, [sp, #40]	; 0x28
 8004aba:	429a      	cmp	r2, r3
 8004abc:	dd00      	ble.n	8004ac0 <_printf_float+0x318>
 8004abe:	930a      	str	r3, [sp, #40]	; 0x28
 8004ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	dc3c      	bgt.n	8004b40 <_printf_float+0x398>
 8004ac6:	2300      	movs	r3, #0
 8004ac8:	930d      	str	r3, [sp, #52]	; 0x34
 8004aca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004acc:	43db      	mvns	r3, r3
 8004ace:	17db      	asrs	r3, r3, #31
 8004ad0:	930f      	str	r3, [sp, #60]	; 0x3c
 8004ad2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004ad4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004ad6:	930b      	str	r3, [sp, #44]	; 0x2c
 8004ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ada:	4013      	ands	r3, r2
 8004adc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004ade:	1ad3      	subs	r3, r2, r3
 8004ae0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004ae2:	4293      	cmp	r3, r2
 8004ae4:	dc34      	bgt.n	8004b50 <_printf_float+0x3a8>
 8004ae6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004ae8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004aea:	4293      	cmp	r3, r2
 8004aec:	db3d      	blt.n	8004b6a <_printf_float+0x3c2>
 8004aee:	6823      	ldr	r3, [r4, #0]
 8004af0:	07db      	lsls	r3, r3, #31
 8004af2:	d43a      	bmi.n	8004b6a <_printf_float+0x3c2>
 8004af4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004af6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004af8:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004afa:	1ad3      	subs	r3, r2, r3
 8004afc:	1a52      	subs	r2, r2, r1
 8004afe:	920a      	str	r2, [sp, #40]	; 0x28
 8004b00:	429a      	cmp	r2, r3
 8004b02:	dd00      	ble.n	8004b06 <_printf_float+0x35e>
 8004b04:	930a      	str	r3, [sp, #40]	; 0x28
 8004b06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	dc36      	bgt.n	8004b7a <_printf_float+0x3d2>
 8004b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b0e:	2500      	movs	r5, #0
 8004b10:	43db      	mvns	r3, r3
 8004b12:	17db      	asrs	r3, r3, #31
 8004b14:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004b18:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004b1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004b1c:	1a9b      	subs	r3, r3, r2
 8004b1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004b20:	400a      	ands	r2, r1
 8004b22:	1a9b      	subs	r3, r3, r2
 8004b24:	42ab      	cmp	r3, r5
 8004b26:	dc00      	bgt.n	8004b2a <_printf_float+0x382>
 8004b28:	e772      	b.n	8004a10 <_printf_float+0x268>
 8004b2a:	0022      	movs	r2, r4
 8004b2c:	2301      	movs	r3, #1
 8004b2e:	0038      	movs	r0, r7
 8004b30:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b32:	321a      	adds	r2, #26
 8004b34:	47b0      	blx	r6
 8004b36:	1c43      	adds	r3, r0, #1
 8004b38:	d100      	bne.n	8004b3c <_printf_float+0x394>
 8004b3a:	e693      	b.n	8004864 <_printf_float+0xbc>
 8004b3c:	3501      	adds	r5, #1
 8004b3e:	e7ea      	b.n	8004b16 <_printf_float+0x36e>
 8004b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b42:	002a      	movs	r2, r5
 8004b44:	0038      	movs	r0, r7
 8004b46:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b48:	47b0      	blx	r6
 8004b4a:	1c43      	adds	r3, r0, #1
 8004b4c:	d1bb      	bne.n	8004ac6 <_printf_float+0x31e>
 8004b4e:	e689      	b.n	8004864 <_printf_float+0xbc>
 8004b50:	0022      	movs	r2, r4
 8004b52:	2301      	movs	r3, #1
 8004b54:	0038      	movs	r0, r7
 8004b56:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b58:	321a      	adds	r2, #26
 8004b5a:	47b0      	blx	r6
 8004b5c:	1c43      	adds	r3, r0, #1
 8004b5e:	d100      	bne.n	8004b62 <_printf_float+0x3ba>
 8004b60:	e680      	b.n	8004864 <_printf_float+0xbc>
 8004b62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004b64:	3301      	adds	r3, #1
 8004b66:	930d      	str	r3, [sp, #52]	; 0x34
 8004b68:	e7b3      	b.n	8004ad2 <_printf_float+0x32a>
 8004b6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004b6c:	0038      	movs	r0, r7
 8004b6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004b70:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b72:	47b0      	blx	r6
 8004b74:	1c43      	adds	r3, r0, #1
 8004b76:	d1bd      	bne.n	8004af4 <_printf_float+0x34c>
 8004b78:	e674      	b.n	8004864 <_printf_float+0xbc>
 8004b7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b7c:	0038      	movs	r0, r7
 8004b7e:	18ea      	adds	r2, r5, r3
 8004b80:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b84:	47b0      	blx	r6
 8004b86:	1c43      	adds	r3, r0, #1
 8004b88:	d1c0      	bne.n	8004b0c <_printf_float+0x364>
 8004b8a:	e66b      	b.n	8004864 <_printf_float+0xbc>
 8004b8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004b8e:	2b01      	cmp	r3, #1
 8004b90:	dc02      	bgt.n	8004b98 <_printf_float+0x3f0>
 8004b92:	2301      	movs	r3, #1
 8004b94:	421a      	tst	r2, r3
 8004b96:	d034      	beq.n	8004c02 <_printf_float+0x45a>
 8004b98:	2301      	movs	r3, #1
 8004b9a:	002a      	movs	r2, r5
 8004b9c:	0038      	movs	r0, r7
 8004b9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ba0:	47b0      	blx	r6
 8004ba2:	1c43      	adds	r3, r0, #1
 8004ba4:	d100      	bne.n	8004ba8 <_printf_float+0x400>
 8004ba6:	e65d      	b.n	8004864 <_printf_float+0xbc>
 8004ba8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004baa:	0038      	movs	r0, r7
 8004bac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004bae:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004bb0:	47b0      	blx	r6
 8004bb2:	1c43      	adds	r3, r0, #1
 8004bb4:	d100      	bne.n	8004bb8 <_printf_float+0x410>
 8004bb6:	e655      	b.n	8004864 <_printf_float+0xbc>
 8004bb8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004bba:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004bbc:	2200      	movs	r2, #0
 8004bbe:	2300      	movs	r3, #0
 8004bc0:	f7fb fc44 	bl	800044c <__aeabi_dcmpeq>
 8004bc4:	2800      	cmp	r0, #0
 8004bc6:	d11a      	bne.n	8004bfe <_printf_float+0x456>
 8004bc8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004bca:	1c6a      	adds	r2, r5, #1
 8004bcc:	3b01      	subs	r3, #1
 8004bce:	0038      	movs	r0, r7
 8004bd0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004bd2:	47b0      	blx	r6
 8004bd4:	1c43      	adds	r3, r0, #1
 8004bd6:	d10e      	bne.n	8004bf6 <_printf_float+0x44e>
 8004bd8:	e644      	b.n	8004864 <_printf_float+0xbc>
 8004bda:	0022      	movs	r2, r4
 8004bdc:	2301      	movs	r3, #1
 8004bde:	0038      	movs	r0, r7
 8004be0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004be2:	321a      	adds	r2, #26
 8004be4:	47b0      	blx	r6
 8004be6:	1c43      	adds	r3, r0, #1
 8004be8:	d100      	bne.n	8004bec <_printf_float+0x444>
 8004bea:	e63b      	b.n	8004864 <_printf_float+0xbc>
 8004bec:	3501      	adds	r5, #1
 8004bee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004bf0:	3b01      	subs	r3, #1
 8004bf2:	42ab      	cmp	r3, r5
 8004bf4:	dcf1      	bgt.n	8004bda <_printf_float+0x432>
 8004bf6:	0022      	movs	r2, r4
 8004bf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bfa:	3250      	adds	r2, #80	; 0x50
 8004bfc:	e6da      	b.n	80049b4 <_printf_float+0x20c>
 8004bfe:	2500      	movs	r5, #0
 8004c00:	e7f5      	b.n	8004bee <_printf_float+0x446>
 8004c02:	002a      	movs	r2, r5
 8004c04:	e7e3      	b.n	8004bce <_printf_float+0x426>
 8004c06:	0022      	movs	r2, r4
 8004c08:	2301      	movs	r3, #1
 8004c0a:	0038      	movs	r0, r7
 8004c0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c0e:	3219      	adds	r2, #25
 8004c10:	47b0      	blx	r6
 8004c12:	1c43      	adds	r3, r0, #1
 8004c14:	d100      	bne.n	8004c18 <_printf_float+0x470>
 8004c16:	e625      	b.n	8004864 <_printf_float+0xbc>
 8004c18:	3501      	adds	r5, #1
 8004c1a:	68e3      	ldr	r3, [r4, #12]
 8004c1c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004c1e:	1a9b      	subs	r3, r3, r2
 8004c20:	42ab      	cmp	r3, r5
 8004c22:	dcf0      	bgt.n	8004c06 <_printf_float+0x45e>
 8004c24:	e6f8      	b.n	8004a18 <_printf_float+0x270>
 8004c26:	2500      	movs	r5, #0
 8004c28:	e7f7      	b.n	8004c1a <_printf_float+0x472>
 8004c2a:	46c0      	nop			; (mov r8, r8)

08004c2c <_printf_common>:
 8004c2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004c2e:	0015      	movs	r5, r2
 8004c30:	9301      	str	r3, [sp, #4]
 8004c32:	688a      	ldr	r2, [r1, #8]
 8004c34:	690b      	ldr	r3, [r1, #16]
 8004c36:	000c      	movs	r4, r1
 8004c38:	9000      	str	r0, [sp, #0]
 8004c3a:	4293      	cmp	r3, r2
 8004c3c:	da00      	bge.n	8004c40 <_printf_common+0x14>
 8004c3e:	0013      	movs	r3, r2
 8004c40:	0022      	movs	r2, r4
 8004c42:	602b      	str	r3, [r5, #0]
 8004c44:	3243      	adds	r2, #67	; 0x43
 8004c46:	7812      	ldrb	r2, [r2, #0]
 8004c48:	2a00      	cmp	r2, #0
 8004c4a:	d001      	beq.n	8004c50 <_printf_common+0x24>
 8004c4c:	3301      	adds	r3, #1
 8004c4e:	602b      	str	r3, [r5, #0]
 8004c50:	6823      	ldr	r3, [r4, #0]
 8004c52:	069b      	lsls	r3, r3, #26
 8004c54:	d502      	bpl.n	8004c5c <_printf_common+0x30>
 8004c56:	682b      	ldr	r3, [r5, #0]
 8004c58:	3302      	adds	r3, #2
 8004c5a:	602b      	str	r3, [r5, #0]
 8004c5c:	6822      	ldr	r2, [r4, #0]
 8004c5e:	2306      	movs	r3, #6
 8004c60:	0017      	movs	r7, r2
 8004c62:	401f      	ands	r7, r3
 8004c64:	421a      	tst	r2, r3
 8004c66:	d027      	beq.n	8004cb8 <_printf_common+0x8c>
 8004c68:	0023      	movs	r3, r4
 8004c6a:	3343      	adds	r3, #67	; 0x43
 8004c6c:	781b      	ldrb	r3, [r3, #0]
 8004c6e:	1e5a      	subs	r2, r3, #1
 8004c70:	4193      	sbcs	r3, r2
 8004c72:	6822      	ldr	r2, [r4, #0]
 8004c74:	0692      	lsls	r2, r2, #26
 8004c76:	d430      	bmi.n	8004cda <_printf_common+0xae>
 8004c78:	0022      	movs	r2, r4
 8004c7a:	9901      	ldr	r1, [sp, #4]
 8004c7c:	9800      	ldr	r0, [sp, #0]
 8004c7e:	9e08      	ldr	r6, [sp, #32]
 8004c80:	3243      	adds	r2, #67	; 0x43
 8004c82:	47b0      	blx	r6
 8004c84:	1c43      	adds	r3, r0, #1
 8004c86:	d025      	beq.n	8004cd4 <_printf_common+0xa8>
 8004c88:	2306      	movs	r3, #6
 8004c8a:	6820      	ldr	r0, [r4, #0]
 8004c8c:	682a      	ldr	r2, [r5, #0]
 8004c8e:	68e1      	ldr	r1, [r4, #12]
 8004c90:	2500      	movs	r5, #0
 8004c92:	4003      	ands	r3, r0
 8004c94:	2b04      	cmp	r3, #4
 8004c96:	d103      	bne.n	8004ca0 <_printf_common+0x74>
 8004c98:	1a8d      	subs	r5, r1, r2
 8004c9a:	43eb      	mvns	r3, r5
 8004c9c:	17db      	asrs	r3, r3, #31
 8004c9e:	401d      	ands	r5, r3
 8004ca0:	68a3      	ldr	r3, [r4, #8]
 8004ca2:	6922      	ldr	r2, [r4, #16]
 8004ca4:	4293      	cmp	r3, r2
 8004ca6:	dd01      	ble.n	8004cac <_printf_common+0x80>
 8004ca8:	1a9b      	subs	r3, r3, r2
 8004caa:	18ed      	adds	r5, r5, r3
 8004cac:	2700      	movs	r7, #0
 8004cae:	42bd      	cmp	r5, r7
 8004cb0:	d120      	bne.n	8004cf4 <_printf_common+0xc8>
 8004cb2:	2000      	movs	r0, #0
 8004cb4:	e010      	b.n	8004cd8 <_printf_common+0xac>
 8004cb6:	3701      	adds	r7, #1
 8004cb8:	68e3      	ldr	r3, [r4, #12]
 8004cba:	682a      	ldr	r2, [r5, #0]
 8004cbc:	1a9b      	subs	r3, r3, r2
 8004cbe:	42bb      	cmp	r3, r7
 8004cc0:	ddd2      	ble.n	8004c68 <_printf_common+0x3c>
 8004cc2:	0022      	movs	r2, r4
 8004cc4:	2301      	movs	r3, #1
 8004cc6:	9901      	ldr	r1, [sp, #4]
 8004cc8:	9800      	ldr	r0, [sp, #0]
 8004cca:	9e08      	ldr	r6, [sp, #32]
 8004ccc:	3219      	adds	r2, #25
 8004cce:	47b0      	blx	r6
 8004cd0:	1c43      	adds	r3, r0, #1
 8004cd2:	d1f0      	bne.n	8004cb6 <_printf_common+0x8a>
 8004cd4:	2001      	movs	r0, #1
 8004cd6:	4240      	negs	r0, r0
 8004cd8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004cda:	2030      	movs	r0, #48	; 0x30
 8004cdc:	18e1      	adds	r1, r4, r3
 8004cde:	3143      	adds	r1, #67	; 0x43
 8004ce0:	7008      	strb	r0, [r1, #0]
 8004ce2:	0021      	movs	r1, r4
 8004ce4:	1c5a      	adds	r2, r3, #1
 8004ce6:	3145      	adds	r1, #69	; 0x45
 8004ce8:	7809      	ldrb	r1, [r1, #0]
 8004cea:	18a2      	adds	r2, r4, r2
 8004cec:	3243      	adds	r2, #67	; 0x43
 8004cee:	3302      	adds	r3, #2
 8004cf0:	7011      	strb	r1, [r2, #0]
 8004cf2:	e7c1      	b.n	8004c78 <_printf_common+0x4c>
 8004cf4:	0022      	movs	r2, r4
 8004cf6:	2301      	movs	r3, #1
 8004cf8:	9901      	ldr	r1, [sp, #4]
 8004cfa:	9800      	ldr	r0, [sp, #0]
 8004cfc:	9e08      	ldr	r6, [sp, #32]
 8004cfe:	321a      	adds	r2, #26
 8004d00:	47b0      	blx	r6
 8004d02:	1c43      	adds	r3, r0, #1
 8004d04:	d0e6      	beq.n	8004cd4 <_printf_common+0xa8>
 8004d06:	3701      	adds	r7, #1
 8004d08:	e7d1      	b.n	8004cae <_printf_common+0x82>
	...

08004d0c <_printf_i>:
 8004d0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d0e:	b08b      	sub	sp, #44	; 0x2c
 8004d10:	9206      	str	r2, [sp, #24]
 8004d12:	000a      	movs	r2, r1
 8004d14:	3243      	adds	r2, #67	; 0x43
 8004d16:	9307      	str	r3, [sp, #28]
 8004d18:	9005      	str	r0, [sp, #20]
 8004d1a:	9204      	str	r2, [sp, #16]
 8004d1c:	7e0a      	ldrb	r2, [r1, #24]
 8004d1e:	000c      	movs	r4, r1
 8004d20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004d22:	2a78      	cmp	r2, #120	; 0x78
 8004d24:	d807      	bhi.n	8004d36 <_printf_i+0x2a>
 8004d26:	2a62      	cmp	r2, #98	; 0x62
 8004d28:	d809      	bhi.n	8004d3e <_printf_i+0x32>
 8004d2a:	2a00      	cmp	r2, #0
 8004d2c:	d100      	bne.n	8004d30 <_printf_i+0x24>
 8004d2e:	e0c1      	b.n	8004eb4 <_printf_i+0x1a8>
 8004d30:	2a58      	cmp	r2, #88	; 0x58
 8004d32:	d100      	bne.n	8004d36 <_printf_i+0x2a>
 8004d34:	e08c      	b.n	8004e50 <_printf_i+0x144>
 8004d36:	0026      	movs	r6, r4
 8004d38:	3642      	adds	r6, #66	; 0x42
 8004d3a:	7032      	strb	r2, [r6, #0]
 8004d3c:	e022      	b.n	8004d84 <_printf_i+0x78>
 8004d3e:	0010      	movs	r0, r2
 8004d40:	3863      	subs	r0, #99	; 0x63
 8004d42:	2815      	cmp	r0, #21
 8004d44:	d8f7      	bhi.n	8004d36 <_printf_i+0x2a>
 8004d46:	f7fb f9f1 	bl	800012c <__gnu_thumb1_case_shi>
 8004d4a:	0016      	.short	0x0016
 8004d4c:	fff6001f 	.word	0xfff6001f
 8004d50:	fff6fff6 	.word	0xfff6fff6
 8004d54:	001ffff6 	.word	0x001ffff6
 8004d58:	fff6fff6 	.word	0xfff6fff6
 8004d5c:	fff6fff6 	.word	0xfff6fff6
 8004d60:	003600a8 	.word	0x003600a8
 8004d64:	fff6009a 	.word	0xfff6009a
 8004d68:	00b9fff6 	.word	0x00b9fff6
 8004d6c:	0036fff6 	.word	0x0036fff6
 8004d70:	fff6fff6 	.word	0xfff6fff6
 8004d74:	009e      	.short	0x009e
 8004d76:	0026      	movs	r6, r4
 8004d78:	681a      	ldr	r2, [r3, #0]
 8004d7a:	3642      	adds	r6, #66	; 0x42
 8004d7c:	1d11      	adds	r1, r2, #4
 8004d7e:	6019      	str	r1, [r3, #0]
 8004d80:	6813      	ldr	r3, [r2, #0]
 8004d82:	7033      	strb	r3, [r6, #0]
 8004d84:	2301      	movs	r3, #1
 8004d86:	e0a7      	b.n	8004ed8 <_printf_i+0x1cc>
 8004d88:	6808      	ldr	r0, [r1, #0]
 8004d8a:	6819      	ldr	r1, [r3, #0]
 8004d8c:	1d0a      	adds	r2, r1, #4
 8004d8e:	0605      	lsls	r5, r0, #24
 8004d90:	d50b      	bpl.n	8004daa <_printf_i+0x9e>
 8004d92:	680d      	ldr	r5, [r1, #0]
 8004d94:	601a      	str	r2, [r3, #0]
 8004d96:	2d00      	cmp	r5, #0
 8004d98:	da03      	bge.n	8004da2 <_printf_i+0x96>
 8004d9a:	232d      	movs	r3, #45	; 0x2d
 8004d9c:	9a04      	ldr	r2, [sp, #16]
 8004d9e:	426d      	negs	r5, r5
 8004da0:	7013      	strb	r3, [r2, #0]
 8004da2:	4b61      	ldr	r3, [pc, #388]	; (8004f28 <_printf_i+0x21c>)
 8004da4:	270a      	movs	r7, #10
 8004da6:	9303      	str	r3, [sp, #12]
 8004da8:	e01b      	b.n	8004de2 <_printf_i+0xd6>
 8004daa:	680d      	ldr	r5, [r1, #0]
 8004dac:	601a      	str	r2, [r3, #0]
 8004dae:	0641      	lsls	r1, r0, #25
 8004db0:	d5f1      	bpl.n	8004d96 <_printf_i+0x8a>
 8004db2:	b22d      	sxth	r5, r5
 8004db4:	e7ef      	b.n	8004d96 <_printf_i+0x8a>
 8004db6:	680d      	ldr	r5, [r1, #0]
 8004db8:	6819      	ldr	r1, [r3, #0]
 8004dba:	1d08      	adds	r0, r1, #4
 8004dbc:	6018      	str	r0, [r3, #0]
 8004dbe:	062e      	lsls	r6, r5, #24
 8004dc0:	d501      	bpl.n	8004dc6 <_printf_i+0xba>
 8004dc2:	680d      	ldr	r5, [r1, #0]
 8004dc4:	e003      	b.n	8004dce <_printf_i+0xc2>
 8004dc6:	066d      	lsls	r5, r5, #25
 8004dc8:	d5fb      	bpl.n	8004dc2 <_printf_i+0xb6>
 8004dca:	680d      	ldr	r5, [r1, #0]
 8004dcc:	b2ad      	uxth	r5, r5
 8004dce:	4b56      	ldr	r3, [pc, #344]	; (8004f28 <_printf_i+0x21c>)
 8004dd0:	2708      	movs	r7, #8
 8004dd2:	9303      	str	r3, [sp, #12]
 8004dd4:	2a6f      	cmp	r2, #111	; 0x6f
 8004dd6:	d000      	beq.n	8004dda <_printf_i+0xce>
 8004dd8:	3702      	adds	r7, #2
 8004dda:	0023      	movs	r3, r4
 8004ddc:	2200      	movs	r2, #0
 8004dde:	3343      	adds	r3, #67	; 0x43
 8004de0:	701a      	strb	r2, [r3, #0]
 8004de2:	6863      	ldr	r3, [r4, #4]
 8004de4:	60a3      	str	r3, [r4, #8]
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	db03      	blt.n	8004df2 <_printf_i+0xe6>
 8004dea:	2204      	movs	r2, #4
 8004dec:	6821      	ldr	r1, [r4, #0]
 8004dee:	4391      	bics	r1, r2
 8004df0:	6021      	str	r1, [r4, #0]
 8004df2:	2d00      	cmp	r5, #0
 8004df4:	d102      	bne.n	8004dfc <_printf_i+0xf0>
 8004df6:	9e04      	ldr	r6, [sp, #16]
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	d00c      	beq.n	8004e16 <_printf_i+0x10a>
 8004dfc:	9e04      	ldr	r6, [sp, #16]
 8004dfe:	0028      	movs	r0, r5
 8004e00:	0039      	movs	r1, r7
 8004e02:	f7fb fa23 	bl	800024c <__aeabi_uidivmod>
 8004e06:	9b03      	ldr	r3, [sp, #12]
 8004e08:	3e01      	subs	r6, #1
 8004e0a:	5c5b      	ldrb	r3, [r3, r1]
 8004e0c:	7033      	strb	r3, [r6, #0]
 8004e0e:	002b      	movs	r3, r5
 8004e10:	0005      	movs	r5, r0
 8004e12:	429f      	cmp	r7, r3
 8004e14:	d9f3      	bls.n	8004dfe <_printf_i+0xf2>
 8004e16:	2f08      	cmp	r7, #8
 8004e18:	d109      	bne.n	8004e2e <_printf_i+0x122>
 8004e1a:	6823      	ldr	r3, [r4, #0]
 8004e1c:	07db      	lsls	r3, r3, #31
 8004e1e:	d506      	bpl.n	8004e2e <_printf_i+0x122>
 8004e20:	6863      	ldr	r3, [r4, #4]
 8004e22:	6922      	ldr	r2, [r4, #16]
 8004e24:	4293      	cmp	r3, r2
 8004e26:	dc02      	bgt.n	8004e2e <_printf_i+0x122>
 8004e28:	2330      	movs	r3, #48	; 0x30
 8004e2a:	3e01      	subs	r6, #1
 8004e2c:	7033      	strb	r3, [r6, #0]
 8004e2e:	9b04      	ldr	r3, [sp, #16]
 8004e30:	1b9b      	subs	r3, r3, r6
 8004e32:	6123      	str	r3, [r4, #16]
 8004e34:	9b07      	ldr	r3, [sp, #28]
 8004e36:	0021      	movs	r1, r4
 8004e38:	9300      	str	r3, [sp, #0]
 8004e3a:	9805      	ldr	r0, [sp, #20]
 8004e3c:	9b06      	ldr	r3, [sp, #24]
 8004e3e:	aa09      	add	r2, sp, #36	; 0x24
 8004e40:	f7ff fef4 	bl	8004c2c <_printf_common>
 8004e44:	1c43      	adds	r3, r0, #1
 8004e46:	d14c      	bne.n	8004ee2 <_printf_i+0x1d6>
 8004e48:	2001      	movs	r0, #1
 8004e4a:	4240      	negs	r0, r0
 8004e4c:	b00b      	add	sp, #44	; 0x2c
 8004e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e50:	3145      	adds	r1, #69	; 0x45
 8004e52:	700a      	strb	r2, [r1, #0]
 8004e54:	4a34      	ldr	r2, [pc, #208]	; (8004f28 <_printf_i+0x21c>)
 8004e56:	9203      	str	r2, [sp, #12]
 8004e58:	681a      	ldr	r2, [r3, #0]
 8004e5a:	6821      	ldr	r1, [r4, #0]
 8004e5c:	ca20      	ldmia	r2!, {r5}
 8004e5e:	601a      	str	r2, [r3, #0]
 8004e60:	0608      	lsls	r0, r1, #24
 8004e62:	d516      	bpl.n	8004e92 <_printf_i+0x186>
 8004e64:	07cb      	lsls	r3, r1, #31
 8004e66:	d502      	bpl.n	8004e6e <_printf_i+0x162>
 8004e68:	2320      	movs	r3, #32
 8004e6a:	4319      	orrs	r1, r3
 8004e6c:	6021      	str	r1, [r4, #0]
 8004e6e:	2710      	movs	r7, #16
 8004e70:	2d00      	cmp	r5, #0
 8004e72:	d1b2      	bne.n	8004dda <_printf_i+0xce>
 8004e74:	2320      	movs	r3, #32
 8004e76:	6822      	ldr	r2, [r4, #0]
 8004e78:	439a      	bics	r2, r3
 8004e7a:	6022      	str	r2, [r4, #0]
 8004e7c:	e7ad      	b.n	8004dda <_printf_i+0xce>
 8004e7e:	2220      	movs	r2, #32
 8004e80:	6809      	ldr	r1, [r1, #0]
 8004e82:	430a      	orrs	r2, r1
 8004e84:	6022      	str	r2, [r4, #0]
 8004e86:	0022      	movs	r2, r4
 8004e88:	2178      	movs	r1, #120	; 0x78
 8004e8a:	3245      	adds	r2, #69	; 0x45
 8004e8c:	7011      	strb	r1, [r2, #0]
 8004e8e:	4a27      	ldr	r2, [pc, #156]	; (8004f2c <_printf_i+0x220>)
 8004e90:	e7e1      	b.n	8004e56 <_printf_i+0x14a>
 8004e92:	0648      	lsls	r0, r1, #25
 8004e94:	d5e6      	bpl.n	8004e64 <_printf_i+0x158>
 8004e96:	b2ad      	uxth	r5, r5
 8004e98:	e7e4      	b.n	8004e64 <_printf_i+0x158>
 8004e9a:	681a      	ldr	r2, [r3, #0]
 8004e9c:	680d      	ldr	r5, [r1, #0]
 8004e9e:	1d10      	adds	r0, r2, #4
 8004ea0:	6949      	ldr	r1, [r1, #20]
 8004ea2:	6018      	str	r0, [r3, #0]
 8004ea4:	6813      	ldr	r3, [r2, #0]
 8004ea6:	062e      	lsls	r6, r5, #24
 8004ea8:	d501      	bpl.n	8004eae <_printf_i+0x1a2>
 8004eaa:	6019      	str	r1, [r3, #0]
 8004eac:	e002      	b.n	8004eb4 <_printf_i+0x1a8>
 8004eae:	066d      	lsls	r5, r5, #25
 8004eb0:	d5fb      	bpl.n	8004eaa <_printf_i+0x19e>
 8004eb2:	8019      	strh	r1, [r3, #0]
 8004eb4:	2300      	movs	r3, #0
 8004eb6:	9e04      	ldr	r6, [sp, #16]
 8004eb8:	6123      	str	r3, [r4, #16]
 8004eba:	e7bb      	b.n	8004e34 <_printf_i+0x128>
 8004ebc:	681a      	ldr	r2, [r3, #0]
 8004ebe:	1d11      	adds	r1, r2, #4
 8004ec0:	6019      	str	r1, [r3, #0]
 8004ec2:	6816      	ldr	r6, [r2, #0]
 8004ec4:	2100      	movs	r1, #0
 8004ec6:	0030      	movs	r0, r6
 8004ec8:	6862      	ldr	r2, [r4, #4]
 8004eca:	f002 fb5d 	bl	8007588 <memchr>
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d001      	beq.n	8004ed6 <_printf_i+0x1ca>
 8004ed2:	1b80      	subs	r0, r0, r6
 8004ed4:	6060      	str	r0, [r4, #4]
 8004ed6:	6863      	ldr	r3, [r4, #4]
 8004ed8:	6123      	str	r3, [r4, #16]
 8004eda:	2300      	movs	r3, #0
 8004edc:	9a04      	ldr	r2, [sp, #16]
 8004ede:	7013      	strb	r3, [r2, #0]
 8004ee0:	e7a8      	b.n	8004e34 <_printf_i+0x128>
 8004ee2:	6923      	ldr	r3, [r4, #16]
 8004ee4:	0032      	movs	r2, r6
 8004ee6:	9906      	ldr	r1, [sp, #24]
 8004ee8:	9805      	ldr	r0, [sp, #20]
 8004eea:	9d07      	ldr	r5, [sp, #28]
 8004eec:	47a8      	blx	r5
 8004eee:	1c43      	adds	r3, r0, #1
 8004ef0:	d0aa      	beq.n	8004e48 <_printf_i+0x13c>
 8004ef2:	6823      	ldr	r3, [r4, #0]
 8004ef4:	079b      	lsls	r3, r3, #30
 8004ef6:	d415      	bmi.n	8004f24 <_printf_i+0x218>
 8004ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004efa:	68e0      	ldr	r0, [r4, #12]
 8004efc:	4298      	cmp	r0, r3
 8004efe:	daa5      	bge.n	8004e4c <_printf_i+0x140>
 8004f00:	0018      	movs	r0, r3
 8004f02:	e7a3      	b.n	8004e4c <_printf_i+0x140>
 8004f04:	0022      	movs	r2, r4
 8004f06:	2301      	movs	r3, #1
 8004f08:	9906      	ldr	r1, [sp, #24]
 8004f0a:	9805      	ldr	r0, [sp, #20]
 8004f0c:	9e07      	ldr	r6, [sp, #28]
 8004f0e:	3219      	adds	r2, #25
 8004f10:	47b0      	blx	r6
 8004f12:	1c43      	adds	r3, r0, #1
 8004f14:	d098      	beq.n	8004e48 <_printf_i+0x13c>
 8004f16:	3501      	adds	r5, #1
 8004f18:	68e3      	ldr	r3, [r4, #12]
 8004f1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004f1c:	1a9b      	subs	r3, r3, r2
 8004f1e:	42ab      	cmp	r3, r5
 8004f20:	dcf0      	bgt.n	8004f04 <_printf_i+0x1f8>
 8004f22:	e7e9      	b.n	8004ef8 <_printf_i+0x1ec>
 8004f24:	2500      	movs	r5, #0
 8004f26:	e7f7      	b.n	8004f18 <_printf_i+0x20c>
 8004f28:	08009186 	.word	0x08009186
 8004f2c:	08009197 	.word	0x08009197

08004f30 <_scanf_float>:
 8004f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f32:	b08b      	sub	sp, #44	; 0x2c
 8004f34:	0015      	movs	r5, r2
 8004f36:	9001      	str	r0, [sp, #4]
 8004f38:	22ae      	movs	r2, #174	; 0xae
 8004f3a:	2000      	movs	r0, #0
 8004f3c:	9306      	str	r3, [sp, #24]
 8004f3e:	688b      	ldr	r3, [r1, #8]
 8004f40:	000e      	movs	r6, r1
 8004f42:	1e59      	subs	r1, r3, #1
 8004f44:	0052      	lsls	r2, r2, #1
 8004f46:	9005      	str	r0, [sp, #20]
 8004f48:	4291      	cmp	r1, r2
 8004f4a:	d905      	bls.n	8004f58 <_scanf_float+0x28>
 8004f4c:	3b5e      	subs	r3, #94	; 0x5e
 8004f4e:	3bff      	subs	r3, #255	; 0xff
 8004f50:	9305      	str	r3, [sp, #20]
 8004f52:	235e      	movs	r3, #94	; 0x5e
 8004f54:	33ff      	adds	r3, #255	; 0xff
 8004f56:	60b3      	str	r3, [r6, #8]
 8004f58:	23f0      	movs	r3, #240	; 0xf0
 8004f5a:	6832      	ldr	r2, [r6, #0]
 8004f5c:	00db      	lsls	r3, r3, #3
 8004f5e:	4313      	orrs	r3, r2
 8004f60:	6033      	str	r3, [r6, #0]
 8004f62:	0033      	movs	r3, r6
 8004f64:	2400      	movs	r4, #0
 8004f66:	331c      	adds	r3, #28
 8004f68:	001f      	movs	r7, r3
 8004f6a:	9303      	str	r3, [sp, #12]
 8004f6c:	9402      	str	r4, [sp, #8]
 8004f6e:	9408      	str	r4, [sp, #32]
 8004f70:	9407      	str	r4, [sp, #28]
 8004f72:	9400      	str	r4, [sp, #0]
 8004f74:	9404      	str	r4, [sp, #16]
 8004f76:	68b2      	ldr	r2, [r6, #8]
 8004f78:	2a00      	cmp	r2, #0
 8004f7a:	d00a      	beq.n	8004f92 <_scanf_float+0x62>
 8004f7c:	682b      	ldr	r3, [r5, #0]
 8004f7e:	781b      	ldrb	r3, [r3, #0]
 8004f80:	2b4e      	cmp	r3, #78	; 0x4e
 8004f82:	d844      	bhi.n	800500e <_scanf_float+0xde>
 8004f84:	0018      	movs	r0, r3
 8004f86:	2b40      	cmp	r3, #64	; 0x40
 8004f88:	d82c      	bhi.n	8004fe4 <_scanf_float+0xb4>
 8004f8a:	382b      	subs	r0, #43	; 0x2b
 8004f8c:	b2c1      	uxtb	r1, r0
 8004f8e:	290e      	cmp	r1, #14
 8004f90:	d92a      	bls.n	8004fe8 <_scanf_float+0xb8>
 8004f92:	9b00      	ldr	r3, [sp, #0]
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d003      	beq.n	8004fa0 <_scanf_float+0x70>
 8004f98:	6832      	ldr	r2, [r6, #0]
 8004f9a:	4ba4      	ldr	r3, [pc, #656]	; (800522c <_scanf_float+0x2fc>)
 8004f9c:	4013      	ands	r3, r2
 8004f9e:	6033      	str	r3, [r6, #0]
 8004fa0:	9b02      	ldr	r3, [sp, #8]
 8004fa2:	3b01      	subs	r3, #1
 8004fa4:	2b01      	cmp	r3, #1
 8004fa6:	d900      	bls.n	8004faa <_scanf_float+0x7a>
 8004fa8:	e0f9      	b.n	800519e <_scanf_float+0x26e>
 8004faa:	24be      	movs	r4, #190	; 0xbe
 8004fac:	0064      	lsls	r4, r4, #1
 8004fae:	9b03      	ldr	r3, [sp, #12]
 8004fb0:	429f      	cmp	r7, r3
 8004fb2:	d900      	bls.n	8004fb6 <_scanf_float+0x86>
 8004fb4:	e0e9      	b.n	800518a <_scanf_float+0x25a>
 8004fb6:	2301      	movs	r3, #1
 8004fb8:	9302      	str	r3, [sp, #8]
 8004fba:	e185      	b.n	80052c8 <_scanf_float+0x398>
 8004fbc:	0018      	movs	r0, r3
 8004fbe:	3861      	subs	r0, #97	; 0x61
 8004fc0:	280d      	cmp	r0, #13
 8004fc2:	d8e6      	bhi.n	8004f92 <_scanf_float+0x62>
 8004fc4:	f7fb f8b2 	bl	800012c <__gnu_thumb1_case_shi>
 8004fc8:	ffe50083 	.word	0xffe50083
 8004fcc:	ffe5ffe5 	.word	0xffe5ffe5
 8004fd0:	00a200b6 	.word	0x00a200b6
 8004fd4:	ffe5ffe5 	.word	0xffe5ffe5
 8004fd8:	ffe50089 	.word	0xffe50089
 8004fdc:	ffe5ffe5 	.word	0xffe5ffe5
 8004fe0:	0065ffe5 	.word	0x0065ffe5
 8004fe4:	3841      	subs	r0, #65	; 0x41
 8004fe6:	e7eb      	b.n	8004fc0 <_scanf_float+0x90>
 8004fe8:	280e      	cmp	r0, #14
 8004fea:	d8d2      	bhi.n	8004f92 <_scanf_float+0x62>
 8004fec:	f7fb f89e 	bl	800012c <__gnu_thumb1_case_shi>
 8004ff0:	ffd1004b 	.word	0xffd1004b
 8004ff4:	0098004b 	.word	0x0098004b
 8004ff8:	0020ffd1 	.word	0x0020ffd1
 8004ffc:	00400040 	.word	0x00400040
 8005000:	00400040 	.word	0x00400040
 8005004:	00400040 	.word	0x00400040
 8005008:	00400040 	.word	0x00400040
 800500c:	0040      	.short	0x0040
 800500e:	2b6e      	cmp	r3, #110	; 0x6e
 8005010:	d809      	bhi.n	8005026 <_scanf_float+0xf6>
 8005012:	2b60      	cmp	r3, #96	; 0x60
 8005014:	d8d2      	bhi.n	8004fbc <_scanf_float+0x8c>
 8005016:	2b54      	cmp	r3, #84	; 0x54
 8005018:	d07d      	beq.n	8005116 <_scanf_float+0x1e6>
 800501a:	2b59      	cmp	r3, #89	; 0x59
 800501c:	d1b9      	bne.n	8004f92 <_scanf_float+0x62>
 800501e:	2c07      	cmp	r4, #7
 8005020:	d1b7      	bne.n	8004f92 <_scanf_float+0x62>
 8005022:	2408      	movs	r4, #8
 8005024:	e02c      	b.n	8005080 <_scanf_float+0x150>
 8005026:	2b74      	cmp	r3, #116	; 0x74
 8005028:	d075      	beq.n	8005116 <_scanf_float+0x1e6>
 800502a:	2b79      	cmp	r3, #121	; 0x79
 800502c:	d0f7      	beq.n	800501e <_scanf_float+0xee>
 800502e:	e7b0      	b.n	8004f92 <_scanf_float+0x62>
 8005030:	6831      	ldr	r1, [r6, #0]
 8005032:	05c8      	lsls	r0, r1, #23
 8005034:	d51c      	bpl.n	8005070 <_scanf_float+0x140>
 8005036:	2380      	movs	r3, #128	; 0x80
 8005038:	4399      	bics	r1, r3
 800503a:	9b00      	ldr	r3, [sp, #0]
 800503c:	6031      	str	r1, [r6, #0]
 800503e:	3301      	adds	r3, #1
 8005040:	9300      	str	r3, [sp, #0]
 8005042:	9b05      	ldr	r3, [sp, #20]
 8005044:	2b00      	cmp	r3, #0
 8005046:	d003      	beq.n	8005050 <_scanf_float+0x120>
 8005048:	3b01      	subs	r3, #1
 800504a:	3201      	adds	r2, #1
 800504c:	9305      	str	r3, [sp, #20]
 800504e:	60b2      	str	r2, [r6, #8]
 8005050:	68b3      	ldr	r3, [r6, #8]
 8005052:	3b01      	subs	r3, #1
 8005054:	60b3      	str	r3, [r6, #8]
 8005056:	6933      	ldr	r3, [r6, #16]
 8005058:	3301      	adds	r3, #1
 800505a:	6133      	str	r3, [r6, #16]
 800505c:	686b      	ldr	r3, [r5, #4]
 800505e:	3b01      	subs	r3, #1
 8005060:	606b      	str	r3, [r5, #4]
 8005062:	2b00      	cmp	r3, #0
 8005064:	dc00      	bgt.n	8005068 <_scanf_float+0x138>
 8005066:	e086      	b.n	8005176 <_scanf_float+0x246>
 8005068:	682b      	ldr	r3, [r5, #0]
 800506a:	3301      	adds	r3, #1
 800506c:	602b      	str	r3, [r5, #0]
 800506e:	e782      	b.n	8004f76 <_scanf_float+0x46>
 8005070:	9a02      	ldr	r2, [sp, #8]
 8005072:	1912      	adds	r2, r2, r4
 8005074:	2a00      	cmp	r2, #0
 8005076:	d18c      	bne.n	8004f92 <_scanf_float+0x62>
 8005078:	4a6d      	ldr	r2, [pc, #436]	; (8005230 <_scanf_float+0x300>)
 800507a:	6831      	ldr	r1, [r6, #0]
 800507c:	400a      	ands	r2, r1
 800507e:	6032      	str	r2, [r6, #0]
 8005080:	703b      	strb	r3, [r7, #0]
 8005082:	3701      	adds	r7, #1
 8005084:	e7e4      	b.n	8005050 <_scanf_float+0x120>
 8005086:	2180      	movs	r1, #128	; 0x80
 8005088:	6832      	ldr	r2, [r6, #0]
 800508a:	420a      	tst	r2, r1
 800508c:	d081      	beq.n	8004f92 <_scanf_float+0x62>
 800508e:	438a      	bics	r2, r1
 8005090:	e7f5      	b.n	800507e <_scanf_float+0x14e>
 8005092:	9a02      	ldr	r2, [sp, #8]
 8005094:	2a00      	cmp	r2, #0
 8005096:	d10f      	bne.n	80050b8 <_scanf_float+0x188>
 8005098:	9a00      	ldr	r2, [sp, #0]
 800509a:	2a00      	cmp	r2, #0
 800509c:	d10f      	bne.n	80050be <_scanf_float+0x18e>
 800509e:	6832      	ldr	r2, [r6, #0]
 80050a0:	21e0      	movs	r1, #224	; 0xe0
 80050a2:	0010      	movs	r0, r2
 80050a4:	00c9      	lsls	r1, r1, #3
 80050a6:	4008      	ands	r0, r1
 80050a8:	4288      	cmp	r0, r1
 80050aa:	d108      	bne.n	80050be <_scanf_float+0x18e>
 80050ac:	4961      	ldr	r1, [pc, #388]	; (8005234 <_scanf_float+0x304>)
 80050ae:	400a      	ands	r2, r1
 80050b0:	6032      	str	r2, [r6, #0]
 80050b2:	2201      	movs	r2, #1
 80050b4:	9202      	str	r2, [sp, #8]
 80050b6:	e7e3      	b.n	8005080 <_scanf_float+0x150>
 80050b8:	9a02      	ldr	r2, [sp, #8]
 80050ba:	2a02      	cmp	r2, #2
 80050bc:	d059      	beq.n	8005172 <_scanf_float+0x242>
 80050be:	2c01      	cmp	r4, #1
 80050c0:	d002      	beq.n	80050c8 <_scanf_float+0x198>
 80050c2:	2c04      	cmp	r4, #4
 80050c4:	d000      	beq.n	80050c8 <_scanf_float+0x198>
 80050c6:	e764      	b.n	8004f92 <_scanf_float+0x62>
 80050c8:	3401      	adds	r4, #1
 80050ca:	b2e4      	uxtb	r4, r4
 80050cc:	e7d8      	b.n	8005080 <_scanf_float+0x150>
 80050ce:	9a02      	ldr	r2, [sp, #8]
 80050d0:	2a01      	cmp	r2, #1
 80050d2:	d000      	beq.n	80050d6 <_scanf_float+0x1a6>
 80050d4:	e75d      	b.n	8004f92 <_scanf_float+0x62>
 80050d6:	2202      	movs	r2, #2
 80050d8:	e7ec      	b.n	80050b4 <_scanf_float+0x184>
 80050da:	2c00      	cmp	r4, #0
 80050dc:	d110      	bne.n	8005100 <_scanf_float+0x1d0>
 80050de:	9a00      	ldr	r2, [sp, #0]
 80050e0:	2a00      	cmp	r2, #0
 80050e2:	d000      	beq.n	80050e6 <_scanf_float+0x1b6>
 80050e4:	e758      	b.n	8004f98 <_scanf_float+0x68>
 80050e6:	6832      	ldr	r2, [r6, #0]
 80050e8:	21e0      	movs	r1, #224	; 0xe0
 80050ea:	0010      	movs	r0, r2
 80050ec:	00c9      	lsls	r1, r1, #3
 80050ee:	4008      	ands	r0, r1
 80050f0:	4288      	cmp	r0, r1
 80050f2:	d000      	beq.n	80050f6 <_scanf_float+0x1c6>
 80050f4:	e754      	b.n	8004fa0 <_scanf_float+0x70>
 80050f6:	494f      	ldr	r1, [pc, #316]	; (8005234 <_scanf_float+0x304>)
 80050f8:	3401      	adds	r4, #1
 80050fa:	400a      	ands	r2, r1
 80050fc:	6032      	str	r2, [r6, #0]
 80050fe:	e7bf      	b.n	8005080 <_scanf_float+0x150>
 8005100:	21fd      	movs	r1, #253	; 0xfd
 8005102:	1ee2      	subs	r2, r4, #3
 8005104:	420a      	tst	r2, r1
 8005106:	d000      	beq.n	800510a <_scanf_float+0x1da>
 8005108:	e743      	b.n	8004f92 <_scanf_float+0x62>
 800510a:	e7dd      	b.n	80050c8 <_scanf_float+0x198>
 800510c:	2c02      	cmp	r4, #2
 800510e:	d000      	beq.n	8005112 <_scanf_float+0x1e2>
 8005110:	e73f      	b.n	8004f92 <_scanf_float+0x62>
 8005112:	2403      	movs	r4, #3
 8005114:	e7b4      	b.n	8005080 <_scanf_float+0x150>
 8005116:	2c06      	cmp	r4, #6
 8005118:	d000      	beq.n	800511c <_scanf_float+0x1ec>
 800511a:	e73a      	b.n	8004f92 <_scanf_float+0x62>
 800511c:	2407      	movs	r4, #7
 800511e:	e7af      	b.n	8005080 <_scanf_float+0x150>
 8005120:	6832      	ldr	r2, [r6, #0]
 8005122:	0591      	lsls	r1, r2, #22
 8005124:	d400      	bmi.n	8005128 <_scanf_float+0x1f8>
 8005126:	e734      	b.n	8004f92 <_scanf_float+0x62>
 8005128:	4943      	ldr	r1, [pc, #268]	; (8005238 <_scanf_float+0x308>)
 800512a:	400a      	ands	r2, r1
 800512c:	6032      	str	r2, [r6, #0]
 800512e:	9a00      	ldr	r2, [sp, #0]
 8005130:	9204      	str	r2, [sp, #16]
 8005132:	e7a5      	b.n	8005080 <_scanf_float+0x150>
 8005134:	21a0      	movs	r1, #160	; 0xa0
 8005136:	2080      	movs	r0, #128	; 0x80
 8005138:	6832      	ldr	r2, [r6, #0]
 800513a:	00c9      	lsls	r1, r1, #3
 800513c:	4011      	ands	r1, r2
 800513e:	00c0      	lsls	r0, r0, #3
 8005140:	4281      	cmp	r1, r0
 8005142:	d006      	beq.n	8005152 <_scanf_float+0x222>
 8005144:	4202      	tst	r2, r0
 8005146:	d100      	bne.n	800514a <_scanf_float+0x21a>
 8005148:	e723      	b.n	8004f92 <_scanf_float+0x62>
 800514a:	9900      	ldr	r1, [sp, #0]
 800514c:	2900      	cmp	r1, #0
 800514e:	d100      	bne.n	8005152 <_scanf_float+0x222>
 8005150:	e726      	b.n	8004fa0 <_scanf_float+0x70>
 8005152:	0591      	lsls	r1, r2, #22
 8005154:	d404      	bmi.n	8005160 <_scanf_float+0x230>
 8005156:	9900      	ldr	r1, [sp, #0]
 8005158:	9804      	ldr	r0, [sp, #16]
 800515a:	9708      	str	r7, [sp, #32]
 800515c:	1a09      	subs	r1, r1, r0
 800515e:	9107      	str	r1, [sp, #28]
 8005160:	4934      	ldr	r1, [pc, #208]	; (8005234 <_scanf_float+0x304>)
 8005162:	400a      	ands	r2, r1
 8005164:	21c0      	movs	r1, #192	; 0xc0
 8005166:	0049      	lsls	r1, r1, #1
 8005168:	430a      	orrs	r2, r1
 800516a:	6032      	str	r2, [r6, #0]
 800516c:	2200      	movs	r2, #0
 800516e:	9200      	str	r2, [sp, #0]
 8005170:	e786      	b.n	8005080 <_scanf_float+0x150>
 8005172:	2203      	movs	r2, #3
 8005174:	e79e      	b.n	80050b4 <_scanf_float+0x184>
 8005176:	23c0      	movs	r3, #192	; 0xc0
 8005178:	005b      	lsls	r3, r3, #1
 800517a:	0029      	movs	r1, r5
 800517c:	58f3      	ldr	r3, [r6, r3]
 800517e:	9801      	ldr	r0, [sp, #4]
 8005180:	4798      	blx	r3
 8005182:	2800      	cmp	r0, #0
 8005184:	d100      	bne.n	8005188 <_scanf_float+0x258>
 8005186:	e6f6      	b.n	8004f76 <_scanf_float+0x46>
 8005188:	e703      	b.n	8004f92 <_scanf_float+0x62>
 800518a:	3f01      	subs	r7, #1
 800518c:	5933      	ldr	r3, [r6, r4]
 800518e:	002a      	movs	r2, r5
 8005190:	7839      	ldrb	r1, [r7, #0]
 8005192:	9801      	ldr	r0, [sp, #4]
 8005194:	4798      	blx	r3
 8005196:	6933      	ldr	r3, [r6, #16]
 8005198:	3b01      	subs	r3, #1
 800519a:	6133      	str	r3, [r6, #16]
 800519c:	e707      	b.n	8004fae <_scanf_float+0x7e>
 800519e:	1e63      	subs	r3, r4, #1
 80051a0:	2b06      	cmp	r3, #6
 80051a2:	d80e      	bhi.n	80051c2 <_scanf_float+0x292>
 80051a4:	9702      	str	r7, [sp, #8]
 80051a6:	2c02      	cmp	r4, #2
 80051a8:	d920      	bls.n	80051ec <_scanf_float+0x2bc>
 80051aa:	1be3      	subs	r3, r4, r7
 80051ac:	b2db      	uxtb	r3, r3
 80051ae:	9305      	str	r3, [sp, #20]
 80051b0:	9b02      	ldr	r3, [sp, #8]
 80051b2:	9a05      	ldr	r2, [sp, #20]
 80051b4:	189b      	adds	r3, r3, r2
 80051b6:	b2db      	uxtb	r3, r3
 80051b8:	2b03      	cmp	r3, #3
 80051ba:	d827      	bhi.n	800520c <_scanf_float+0x2dc>
 80051bc:	3c03      	subs	r4, #3
 80051be:	b2e4      	uxtb	r4, r4
 80051c0:	1b3f      	subs	r7, r7, r4
 80051c2:	6833      	ldr	r3, [r6, #0]
 80051c4:	05da      	lsls	r2, r3, #23
 80051c6:	d554      	bpl.n	8005272 <_scanf_float+0x342>
 80051c8:	055b      	lsls	r3, r3, #21
 80051ca:	d537      	bpl.n	800523c <_scanf_float+0x30c>
 80051cc:	24be      	movs	r4, #190	; 0xbe
 80051ce:	0064      	lsls	r4, r4, #1
 80051d0:	9b03      	ldr	r3, [sp, #12]
 80051d2:	429f      	cmp	r7, r3
 80051d4:	d800      	bhi.n	80051d8 <_scanf_float+0x2a8>
 80051d6:	e6ee      	b.n	8004fb6 <_scanf_float+0x86>
 80051d8:	3f01      	subs	r7, #1
 80051da:	5933      	ldr	r3, [r6, r4]
 80051dc:	002a      	movs	r2, r5
 80051de:	7839      	ldrb	r1, [r7, #0]
 80051e0:	9801      	ldr	r0, [sp, #4]
 80051e2:	4798      	blx	r3
 80051e4:	6933      	ldr	r3, [r6, #16]
 80051e6:	3b01      	subs	r3, #1
 80051e8:	6133      	str	r3, [r6, #16]
 80051ea:	e7f1      	b.n	80051d0 <_scanf_float+0x2a0>
 80051ec:	24be      	movs	r4, #190	; 0xbe
 80051ee:	0064      	lsls	r4, r4, #1
 80051f0:	9b03      	ldr	r3, [sp, #12]
 80051f2:	429f      	cmp	r7, r3
 80051f4:	d800      	bhi.n	80051f8 <_scanf_float+0x2c8>
 80051f6:	e6de      	b.n	8004fb6 <_scanf_float+0x86>
 80051f8:	3f01      	subs	r7, #1
 80051fa:	5933      	ldr	r3, [r6, r4]
 80051fc:	002a      	movs	r2, r5
 80051fe:	7839      	ldrb	r1, [r7, #0]
 8005200:	9801      	ldr	r0, [sp, #4]
 8005202:	4798      	blx	r3
 8005204:	6933      	ldr	r3, [r6, #16]
 8005206:	3b01      	subs	r3, #1
 8005208:	6133      	str	r3, [r6, #16]
 800520a:	e7f1      	b.n	80051f0 <_scanf_float+0x2c0>
 800520c:	9b02      	ldr	r3, [sp, #8]
 800520e:	002a      	movs	r2, r5
 8005210:	3b01      	subs	r3, #1
 8005212:	7819      	ldrb	r1, [r3, #0]
 8005214:	9302      	str	r3, [sp, #8]
 8005216:	23be      	movs	r3, #190	; 0xbe
 8005218:	005b      	lsls	r3, r3, #1
 800521a:	58f3      	ldr	r3, [r6, r3]
 800521c:	9801      	ldr	r0, [sp, #4]
 800521e:	9309      	str	r3, [sp, #36]	; 0x24
 8005220:	4798      	blx	r3
 8005222:	6933      	ldr	r3, [r6, #16]
 8005224:	3b01      	subs	r3, #1
 8005226:	6133      	str	r3, [r6, #16]
 8005228:	e7c2      	b.n	80051b0 <_scanf_float+0x280>
 800522a:	46c0      	nop			; (mov r8, r8)
 800522c:	fffffeff 	.word	0xfffffeff
 8005230:	fffffe7f 	.word	0xfffffe7f
 8005234:	fffff87f 	.word	0xfffff87f
 8005238:	fffffd7f 	.word	0xfffffd7f
 800523c:	6933      	ldr	r3, [r6, #16]
 800523e:	1e7c      	subs	r4, r7, #1
 8005240:	7821      	ldrb	r1, [r4, #0]
 8005242:	3b01      	subs	r3, #1
 8005244:	6133      	str	r3, [r6, #16]
 8005246:	2965      	cmp	r1, #101	; 0x65
 8005248:	d00c      	beq.n	8005264 <_scanf_float+0x334>
 800524a:	2945      	cmp	r1, #69	; 0x45
 800524c:	d00a      	beq.n	8005264 <_scanf_float+0x334>
 800524e:	23be      	movs	r3, #190	; 0xbe
 8005250:	005b      	lsls	r3, r3, #1
 8005252:	58f3      	ldr	r3, [r6, r3]
 8005254:	002a      	movs	r2, r5
 8005256:	9801      	ldr	r0, [sp, #4]
 8005258:	4798      	blx	r3
 800525a:	6933      	ldr	r3, [r6, #16]
 800525c:	1ebc      	subs	r4, r7, #2
 800525e:	3b01      	subs	r3, #1
 8005260:	7821      	ldrb	r1, [r4, #0]
 8005262:	6133      	str	r3, [r6, #16]
 8005264:	23be      	movs	r3, #190	; 0xbe
 8005266:	005b      	lsls	r3, r3, #1
 8005268:	002a      	movs	r2, r5
 800526a:	58f3      	ldr	r3, [r6, r3]
 800526c:	9801      	ldr	r0, [sp, #4]
 800526e:	4798      	blx	r3
 8005270:	0027      	movs	r7, r4
 8005272:	6832      	ldr	r2, [r6, #0]
 8005274:	2310      	movs	r3, #16
 8005276:	0011      	movs	r1, r2
 8005278:	4019      	ands	r1, r3
 800527a:	9102      	str	r1, [sp, #8]
 800527c:	421a      	tst	r2, r3
 800527e:	d158      	bne.n	8005332 <_scanf_float+0x402>
 8005280:	23c0      	movs	r3, #192	; 0xc0
 8005282:	7039      	strb	r1, [r7, #0]
 8005284:	6832      	ldr	r2, [r6, #0]
 8005286:	00db      	lsls	r3, r3, #3
 8005288:	4013      	ands	r3, r2
 800528a:	2280      	movs	r2, #128	; 0x80
 800528c:	00d2      	lsls	r2, r2, #3
 800528e:	4293      	cmp	r3, r2
 8005290:	d11d      	bne.n	80052ce <_scanf_float+0x39e>
 8005292:	9b04      	ldr	r3, [sp, #16]
 8005294:	9a00      	ldr	r2, [sp, #0]
 8005296:	9900      	ldr	r1, [sp, #0]
 8005298:	1a9a      	subs	r2, r3, r2
 800529a:	428b      	cmp	r3, r1
 800529c:	d124      	bne.n	80052e8 <_scanf_float+0x3b8>
 800529e:	2200      	movs	r2, #0
 80052a0:	9903      	ldr	r1, [sp, #12]
 80052a2:	9801      	ldr	r0, [sp, #4]
 80052a4:	f000 fe9c 	bl	8005fe0 <_strtod_r>
 80052a8:	9b06      	ldr	r3, [sp, #24]
 80052aa:	000d      	movs	r5, r1
 80052ac:	6831      	ldr	r1, [r6, #0]
 80052ae:	0004      	movs	r4, r0
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	078a      	lsls	r2, r1, #30
 80052b4:	d525      	bpl.n	8005302 <_scanf_float+0x3d2>
 80052b6:	1d1a      	adds	r2, r3, #4
 80052b8:	9906      	ldr	r1, [sp, #24]
 80052ba:	600a      	str	r2, [r1, #0]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	601c      	str	r4, [r3, #0]
 80052c0:	605d      	str	r5, [r3, #4]
 80052c2:	68f3      	ldr	r3, [r6, #12]
 80052c4:	3301      	adds	r3, #1
 80052c6:	60f3      	str	r3, [r6, #12]
 80052c8:	9802      	ldr	r0, [sp, #8]
 80052ca:	b00b      	add	sp, #44	; 0x2c
 80052cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80052ce:	9b07      	ldr	r3, [sp, #28]
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d0e4      	beq.n	800529e <_scanf_float+0x36e>
 80052d4:	9b08      	ldr	r3, [sp, #32]
 80052d6:	9a02      	ldr	r2, [sp, #8]
 80052d8:	1c59      	adds	r1, r3, #1
 80052da:	9801      	ldr	r0, [sp, #4]
 80052dc:	230a      	movs	r3, #10
 80052de:	f000 ff15 	bl	800610c <_strtol_r>
 80052e2:	9b07      	ldr	r3, [sp, #28]
 80052e4:	9f08      	ldr	r7, [sp, #32]
 80052e6:	1ac2      	subs	r2, r0, r3
 80052e8:	0033      	movs	r3, r6
 80052ea:	3370      	adds	r3, #112	; 0x70
 80052ec:	33ff      	adds	r3, #255	; 0xff
 80052ee:	429f      	cmp	r7, r3
 80052f0:	d302      	bcc.n	80052f8 <_scanf_float+0x3c8>
 80052f2:	0037      	movs	r7, r6
 80052f4:	376f      	adds	r7, #111	; 0x6f
 80052f6:	37ff      	adds	r7, #255	; 0xff
 80052f8:	0038      	movs	r0, r7
 80052fa:	490f      	ldr	r1, [pc, #60]	; (8005338 <_scanf_float+0x408>)
 80052fc:	f000 f824 	bl	8005348 <siprintf>
 8005300:	e7cd      	b.n	800529e <_scanf_float+0x36e>
 8005302:	1d1a      	adds	r2, r3, #4
 8005304:	0749      	lsls	r1, r1, #29
 8005306:	d4d7      	bmi.n	80052b8 <_scanf_float+0x388>
 8005308:	9906      	ldr	r1, [sp, #24]
 800530a:	0020      	movs	r0, r4
 800530c:	600a      	str	r2, [r1, #0]
 800530e:	681f      	ldr	r7, [r3, #0]
 8005310:	0022      	movs	r2, r4
 8005312:	002b      	movs	r3, r5
 8005314:	0029      	movs	r1, r5
 8005316:	f7fc fe73 	bl	8002000 <__aeabi_dcmpun>
 800531a:	2800      	cmp	r0, #0
 800531c:	d004      	beq.n	8005328 <_scanf_float+0x3f8>
 800531e:	4807      	ldr	r0, [pc, #28]	; (800533c <_scanf_float+0x40c>)
 8005320:	f000 f80e 	bl	8005340 <nanf>
 8005324:	6038      	str	r0, [r7, #0]
 8005326:	e7cc      	b.n	80052c2 <_scanf_float+0x392>
 8005328:	0020      	movs	r0, r4
 800532a:	0029      	movs	r1, r5
 800532c:	f7fc ff12 	bl	8002154 <__aeabi_d2f>
 8005330:	e7f8      	b.n	8005324 <_scanf_float+0x3f4>
 8005332:	2300      	movs	r3, #0
 8005334:	e640      	b.n	8004fb8 <_scanf_float+0x88>
 8005336:	46c0      	nop			; (mov r8, r8)
 8005338:	080091a8 	.word	0x080091a8
 800533c:	080095b0 	.word	0x080095b0

08005340 <nanf>:
 8005340:	4800      	ldr	r0, [pc, #0]	; (8005344 <nanf+0x4>)
 8005342:	4770      	bx	lr
 8005344:	7fc00000 	.word	0x7fc00000

08005348 <siprintf>:
 8005348:	b40e      	push	{r1, r2, r3}
 800534a:	b500      	push	{lr}
 800534c:	490b      	ldr	r1, [pc, #44]	; (800537c <siprintf+0x34>)
 800534e:	b09c      	sub	sp, #112	; 0x70
 8005350:	ab1d      	add	r3, sp, #116	; 0x74
 8005352:	9002      	str	r0, [sp, #8]
 8005354:	9006      	str	r0, [sp, #24]
 8005356:	9107      	str	r1, [sp, #28]
 8005358:	9104      	str	r1, [sp, #16]
 800535a:	4809      	ldr	r0, [pc, #36]	; (8005380 <siprintf+0x38>)
 800535c:	4909      	ldr	r1, [pc, #36]	; (8005384 <siprintf+0x3c>)
 800535e:	cb04      	ldmia	r3!, {r2}
 8005360:	9105      	str	r1, [sp, #20]
 8005362:	6800      	ldr	r0, [r0, #0]
 8005364:	a902      	add	r1, sp, #8
 8005366:	9301      	str	r3, [sp, #4]
 8005368:	f002 ff5c 	bl	8008224 <_svfiprintf_r>
 800536c:	2300      	movs	r3, #0
 800536e:	9a02      	ldr	r2, [sp, #8]
 8005370:	7013      	strb	r3, [r2, #0]
 8005372:	b01c      	add	sp, #112	; 0x70
 8005374:	bc08      	pop	{r3}
 8005376:	b003      	add	sp, #12
 8005378:	4718      	bx	r3
 800537a:	46c0      	nop			; (mov r8, r8)
 800537c:	7fffffff 	.word	0x7fffffff
 8005380:	2000000c 	.word	0x2000000c
 8005384:	ffff0208 	.word	0xffff0208

08005388 <sulp>:
 8005388:	b570      	push	{r4, r5, r6, lr}
 800538a:	0016      	movs	r6, r2
 800538c:	000d      	movs	r5, r1
 800538e:	f002 fc93 	bl	8007cb8 <__ulp>
 8005392:	2e00      	cmp	r6, #0
 8005394:	d00d      	beq.n	80053b2 <sulp+0x2a>
 8005396:	236b      	movs	r3, #107	; 0x6b
 8005398:	006a      	lsls	r2, r5, #1
 800539a:	0d52      	lsrs	r2, r2, #21
 800539c:	1a9b      	subs	r3, r3, r2
 800539e:	2b00      	cmp	r3, #0
 80053a0:	dd07      	ble.n	80053b2 <sulp+0x2a>
 80053a2:	2400      	movs	r4, #0
 80053a4:	4a03      	ldr	r2, [pc, #12]	; (80053b4 <sulp+0x2c>)
 80053a6:	051b      	lsls	r3, r3, #20
 80053a8:	189d      	adds	r5, r3, r2
 80053aa:	002b      	movs	r3, r5
 80053ac:	0022      	movs	r2, r4
 80053ae:	f7fc f829 	bl	8001404 <__aeabi_dmul>
 80053b2:	bd70      	pop	{r4, r5, r6, pc}
 80053b4:	3ff00000 	.word	0x3ff00000

080053b8 <_strtod_l>:
 80053b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053ba:	001d      	movs	r5, r3
 80053bc:	2300      	movs	r3, #0
 80053be:	b0a5      	sub	sp, #148	; 0x94
 80053c0:	9320      	str	r3, [sp, #128]	; 0x80
 80053c2:	4bac      	ldr	r3, [pc, #688]	; (8005674 <_strtod_l+0x2bc>)
 80053c4:	9005      	str	r0, [sp, #20]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	9108      	str	r1, [sp, #32]
 80053ca:	0018      	movs	r0, r3
 80053cc:	9307      	str	r3, [sp, #28]
 80053ce:	921b      	str	r2, [sp, #108]	; 0x6c
 80053d0:	f7fa fe9a 	bl	8000108 <strlen>
 80053d4:	2600      	movs	r6, #0
 80053d6:	0004      	movs	r4, r0
 80053d8:	2700      	movs	r7, #0
 80053da:	9b08      	ldr	r3, [sp, #32]
 80053dc:	931f      	str	r3, [sp, #124]	; 0x7c
 80053de:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80053e0:	7813      	ldrb	r3, [r2, #0]
 80053e2:	2b2b      	cmp	r3, #43	; 0x2b
 80053e4:	d058      	beq.n	8005498 <_strtod_l+0xe0>
 80053e6:	d844      	bhi.n	8005472 <_strtod_l+0xba>
 80053e8:	2b0d      	cmp	r3, #13
 80053ea:	d83d      	bhi.n	8005468 <_strtod_l+0xb0>
 80053ec:	2b08      	cmp	r3, #8
 80053ee:	d83d      	bhi.n	800546c <_strtod_l+0xb4>
 80053f0:	2b00      	cmp	r3, #0
 80053f2:	d047      	beq.n	8005484 <_strtod_l+0xcc>
 80053f4:	2300      	movs	r3, #0
 80053f6:	930e      	str	r3, [sp, #56]	; 0x38
 80053f8:	2200      	movs	r2, #0
 80053fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80053fc:	920a      	str	r2, [sp, #40]	; 0x28
 80053fe:	9306      	str	r3, [sp, #24]
 8005400:	781b      	ldrb	r3, [r3, #0]
 8005402:	2b30      	cmp	r3, #48	; 0x30
 8005404:	d000      	beq.n	8005408 <_strtod_l+0x50>
 8005406:	e07f      	b.n	8005508 <_strtod_l+0x150>
 8005408:	9b06      	ldr	r3, [sp, #24]
 800540a:	3220      	adds	r2, #32
 800540c:	785b      	ldrb	r3, [r3, #1]
 800540e:	4393      	bics	r3, r2
 8005410:	2b58      	cmp	r3, #88	; 0x58
 8005412:	d000      	beq.n	8005416 <_strtod_l+0x5e>
 8005414:	e06e      	b.n	80054f4 <_strtod_l+0x13c>
 8005416:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005418:	9502      	str	r5, [sp, #8]
 800541a:	9301      	str	r3, [sp, #4]
 800541c:	ab20      	add	r3, sp, #128	; 0x80
 800541e:	9300      	str	r3, [sp, #0]
 8005420:	4a95      	ldr	r2, [pc, #596]	; (8005678 <_strtod_l+0x2c0>)
 8005422:	ab21      	add	r3, sp, #132	; 0x84
 8005424:	9805      	ldr	r0, [sp, #20]
 8005426:	a91f      	add	r1, sp, #124	; 0x7c
 8005428:	f001 fd84 	bl	8006f34 <__gethex>
 800542c:	2307      	movs	r3, #7
 800542e:	0005      	movs	r5, r0
 8005430:	0004      	movs	r4, r0
 8005432:	401d      	ands	r5, r3
 8005434:	4218      	tst	r0, r3
 8005436:	d006      	beq.n	8005446 <_strtod_l+0x8e>
 8005438:	2d06      	cmp	r5, #6
 800543a:	d12f      	bne.n	800549c <_strtod_l+0xe4>
 800543c:	9b06      	ldr	r3, [sp, #24]
 800543e:	3301      	adds	r3, #1
 8005440:	931f      	str	r3, [sp, #124]	; 0x7c
 8005442:	2300      	movs	r3, #0
 8005444:	930e      	str	r3, [sp, #56]	; 0x38
 8005446:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005448:	2b00      	cmp	r3, #0
 800544a:	d002      	beq.n	8005452 <_strtod_l+0x9a>
 800544c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800544e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8005450:	601a      	str	r2, [r3, #0]
 8005452:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005454:	2b00      	cmp	r3, #0
 8005456:	d01c      	beq.n	8005492 <_strtod_l+0xda>
 8005458:	2380      	movs	r3, #128	; 0x80
 800545a:	0032      	movs	r2, r6
 800545c:	061b      	lsls	r3, r3, #24
 800545e:	18fb      	adds	r3, r7, r3
 8005460:	0010      	movs	r0, r2
 8005462:	0019      	movs	r1, r3
 8005464:	b025      	add	sp, #148	; 0x94
 8005466:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005468:	2b20      	cmp	r3, #32
 800546a:	d1c3      	bne.n	80053f4 <_strtod_l+0x3c>
 800546c:	3201      	adds	r2, #1
 800546e:	921f      	str	r2, [sp, #124]	; 0x7c
 8005470:	e7b5      	b.n	80053de <_strtod_l+0x26>
 8005472:	2b2d      	cmp	r3, #45	; 0x2d
 8005474:	d1be      	bne.n	80053f4 <_strtod_l+0x3c>
 8005476:	3b2c      	subs	r3, #44	; 0x2c
 8005478:	930e      	str	r3, [sp, #56]	; 0x38
 800547a:	1c53      	adds	r3, r2, #1
 800547c:	931f      	str	r3, [sp, #124]	; 0x7c
 800547e:	7853      	ldrb	r3, [r2, #1]
 8005480:	2b00      	cmp	r3, #0
 8005482:	d1b9      	bne.n	80053f8 <_strtod_l+0x40>
 8005484:	9b08      	ldr	r3, [sp, #32]
 8005486:	931f      	str	r3, [sp, #124]	; 0x7c
 8005488:	2300      	movs	r3, #0
 800548a:	930e      	str	r3, [sp, #56]	; 0x38
 800548c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800548e:	2b00      	cmp	r3, #0
 8005490:	d1dc      	bne.n	800544c <_strtod_l+0x94>
 8005492:	0032      	movs	r2, r6
 8005494:	003b      	movs	r3, r7
 8005496:	e7e3      	b.n	8005460 <_strtod_l+0xa8>
 8005498:	2300      	movs	r3, #0
 800549a:	e7ed      	b.n	8005478 <_strtod_l+0xc0>
 800549c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800549e:	2a00      	cmp	r2, #0
 80054a0:	d007      	beq.n	80054b2 <_strtod_l+0xfa>
 80054a2:	2135      	movs	r1, #53	; 0x35
 80054a4:	a822      	add	r0, sp, #136	; 0x88
 80054a6:	f002 fd08 	bl	8007eba <__copybits>
 80054aa:	9920      	ldr	r1, [sp, #128]	; 0x80
 80054ac:	9805      	ldr	r0, [sp, #20]
 80054ae:	f002 f8c3 	bl	8007638 <_Bfree>
 80054b2:	1e68      	subs	r0, r5, #1
 80054b4:	2804      	cmp	r0, #4
 80054b6:	d806      	bhi.n	80054c6 <_strtod_l+0x10e>
 80054b8:	f7fa fe2e 	bl	8000118 <__gnu_thumb1_case_uqi>
 80054bc:	1816030b 	.word	0x1816030b
 80054c0:	0b          	.byte	0x0b
 80054c1:	00          	.byte	0x00
 80054c2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80054c4:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 80054c6:	0723      	lsls	r3, r4, #28
 80054c8:	d5bd      	bpl.n	8005446 <_strtod_l+0x8e>
 80054ca:	2380      	movs	r3, #128	; 0x80
 80054cc:	061b      	lsls	r3, r3, #24
 80054ce:	431f      	orrs	r7, r3
 80054d0:	e7b9      	b.n	8005446 <_strtod_l+0x8e>
 80054d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80054d4:	4a69      	ldr	r2, [pc, #420]	; (800567c <_strtod_l+0x2c4>)
 80054d6:	496a      	ldr	r1, [pc, #424]	; (8005680 <_strtod_l+0x2c8>)
 80054d8:	401a      	ands	r2, r3
 80054da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80054dc:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80054de:	185b      	adds	r3, r3, r1
 80054e0:	051b      	lsls	r3, r3, #20
 80054e2:	431a      	orrs	r2, r3
 80054e4:	0017      	movs	r7, r2
 80054e6:	e7ee      	b.n	80054c6 <_strtod_l+0x10e>
 80054e8:	4f66      	ldr	r7, [pc, #408]	; (8005684 <_strtod_l+0x2cc>)
 80054ea:	e7ec      	b.n	80054c6 <_strtod_l+0x10e>
 80054ec:	2601      	movs	r6, #1
 80054ee:	4f66      	ldr	r7, [pc, #408]	; (8005688 <_strtod_l+0x2d0>)
 80054f0:	4276      	negs	r6, r6
 80054f2:	e7e8      	b.n	80054c6 <_strtod_l+0x10e>
 80054f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80054f6:	1c5a      	adds	r2, r3, #1
 80054f8:	921f      	str	r2, [sp, #124]	; 0x7c
 80054fa:	785b      	ldrb	r3, [r3, #1]
 80054fc:	2b30      	cmp	r3, #48	; 0x30
 80054fe:	d0f9      	beq.n	80054f4 <_strtod_l+0x13c>
 8005500:	2b00      	cmp	r3, #0
 8005502:	d0a0      	beq.n	8005446 <_strtod_l+0x8e>
 8005504:	2301      	movs	r3, #1
 8005506:	930a      	str	r3, [sp, #40]	; 0x28
 8005508:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800550a:	220a      	movs	r2, #10
 800550c:	9310      	str	r3, [sp, #64]	; 0x40
 800550e:	2300      	movs	r3, #0
 8005510:	930f      	str	r3, [sp, #60]	; 0x3c
 8005512:	930b      	str	r3, [sp, #44]	; 0x2c
 8005514:	9309      	str	r3, [sp, #36]	; 0x24
 8005516:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8005518:	7805      	ldrb	r5, [r0, #0]
 800551a:	002b      	movs	r3, r5
 800551c:	3b30      	subs	r3, #48	; 0x30
 800551e:	b2d9      	uxtb	r1, r3
 8005520:	2909      	cmp	r1, #9
 8005522:	d927      	bls.n	8005574 <_strtod_l+0x1bc>
 8005524:	0022      	movs	r2, r4
 8005526:	9907      	ldr	r1, [sp, #28]
 8005528:	f002 ff94 	bl	8008454 <strncmp>
 800552c:	2800      	cmp	r0, #0
 800552e:	d033      	beq.n	8005598 <_strtod_l+0x1e0>
 8005530:	2000      	movs	r0, #0
 8005532:	002b      	movs	r3, r5
 8005534:	4684      	mov	ip, r0
 8005536:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005538:	900c      	str	r0, [sp, #48]	; 0x30
 800553a:	9206      	str	r2, [sp, #24]
 800553c:	2220      	movs	r2, #32
 800553e:	0019      	movs	r1, r3
 8005540:	4391      	bics	r1, r2
 8005542:	000a      	movs	r2, r1
 8005544:	2100      	movs	r1, #0
 8005546:	9107      	str	r1, [sp, #28]
 8005548:	2a45      	cmp	r2, #69	; 0x45
 800554a:	d000      	beq.n	800554e <_strtod_l+0x196>
 800554c:	e0c5      	b.n	80056da <_strtod_l+0x322>
 800554e:	9b06      	ldr	r3, [sp, #24]
 8005550:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005552:	4303      	orrs	r3, r0
 8005554:	4313      	orrs	r3, r2
 8005556:	428b      	cmp	r3, r1
 8005558:	d094      	beq.n	8005484 <_strtod_l+0xcc>
 800555a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800555c:	9308      	str	r3, [sp, #32]
 800555e:	3301      	adds	r3, #1
 8005560:	931f      	str	r3, [sp, #124]	; 0x7c
 8005562:	9b08      	ldr	r3, [sp, #32]
 8005564:	785b      	ldrb	r3, [r3, #1]
 8005566:	2b2b      	cmp	r3, #43	; 0x2b
 8005568:	d076      	beq.n	8005658 <_strtod_l+0x2a0>
 800556a:	000c      	movs	r4, r1
 800556c:	2b2d      	cmp	r3, #45	; 0x2d
 800556e:	d179      	bne.n	8005664 <_strtod_l+0x2ac>
 8005570:	2401      	movs	r4, #1
 8005572:	e072      	b.n	800565a <_strtod_l+0x2a2>
 8005574:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005576:	2908      	cmp	r1, #8
 8005578:	dc09      	bgt.n	800558e <_strtod_l+0x1d6>
 800557a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800557c:	4351      	muls	r1, r2
 800557e:	185b      	adds	r3, r3, r1
 8005580:	930b      	str	r3, [sp, #44]	; 0x2c
 8005582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005584:	3001      	adds	r0, #1
 8005586:	3301      	adds	r3, #1
 8005588:	9309      	str	r3, [sp, #36]	; 0x24
 800558a:	901f      	str	r0, [sp, #124]	; 0x7c
 800558c:	e7c3      	b.n	8005516 <_strtod_l+0x15e>
 800558e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005590:	4351      	muls	r1, r2
 8005592:	185b      	adds	r3, r3, r1
 8005594:	930f      	str	r3, [sp, #60]	; 0x3c
 8005596:	e7f4      	b.n	8005582 <_strtod_l+0x1ca>
 8005598:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800559a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800559c:	191c      	adds	r4, r3, r4
 800559e:	941f      	str	r4, [sp, #124]	; 0x7c
 80055a0:	7823      	ldrb	r3, [r4, #0]
 80055a2:	2a00      	cmp	r2, #0
 80055a4:	d039      	beq.n	800561a <_strtod_l+0x262>
 80055a6:	900c      	str	r0, [sp, #48]	; 0x30
 80055a8:	9206      	str	r2, [sp, #24]
 80055aa:	001a      	movs	r2, r3
 80055ac:	3a30      	subs	r2, #48	; 0x30
 80055ae:	2a09      	cmp	r2, #9
 80055b0:	d912      	bls.n	80055d8 <_strtod_l+0x220>
 80055b2:	2201      	movs	r2, #1
 80055b4:	4694      	mov	ip, r2
 80055b6:	e7c1      	b.n	800553c <_strtod_l+0x184>
 80055b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80055ba:	3001      	adds	r0, #1
 80055bc:	1c5a      	adds	r2, r3, #1
 80055be:	921f      	str	r2, [sp, #124]	; 0x7c
 80055c0:	785b      	ldrb	r3, [r3, #1]
 80055c2:	2b30      	cmp	r3, #48	; 0x30
 80055c4:	d0f8      	beq.n	80055b8 <_strtod_l+0x200>
 80055c6:	001a      	movs	r2, r3
 80055c8:	3a31      	subs	r2, #49	; 0x31
 80055ca:	2a08      	cmp	r2, #8
 80055cc:	d83f      	bhi.n	800564e <_strtod_l+0x296>
 80055ce:	900c      	str	r0, [sp, #48]	; 0x30
 80055d0:	2000      	movs	r0, #0
 80055d2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80055d4:	9006      	str	r0, [sp, #24]
 80055d6:	9210      	str	r2, [sp, #64]	; 0x40
 80055d8:	001a      	movs	r2, r3
 80055da:	1c41      	adds	r1, r0, #1
 80055dc:	3a30      	subs	r2, #48	; 0x30
 80055de:	2b30      	cmp	r3, #48	; 0x30
 80055e0:	d015      	beq.n	800560e <_strtod_l+0x256>
 80055e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80055e4:	185b      	adds	r3, r3, r1
 80055e6:	210a      	movs	r1, #10
 80055e8:	930c      	str	r3, [sp, #48]	; 0x30
 80055ea:	9b06      	ldr	r3, [sp, #24]
 80055ec:	18c4      	adds	r4, r0, r3
 80055ee:	42a3      	cmp	r3, r4
 80055f0:	d115      	bne.n	800561e <_strtod_l+0x266>
 80055f2:	9906      	ldr	r1, [sp, #24]
 80055f4:	9b06      	ldr	r3, [sp, #24]
 80055f6:	3101      	adds	r1, #1
 80055f8:	1809      	adds	r1, r1, r0
 80055fa:	181b      	adds	r3, r3, r0
 80055fc:	9106      	str	r1, [sp, #24]
 80055fe:	2b08      	cmp	r3, #8
 8005600:	dc1b      	bgt.n	800563a <_strtod_l+0x282>
 8005602:	230a      	movs	r3, #10
 8005604:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005606:	434b      	muls	r3, r1
 8005608:	2100      	movs	r1, #0
 800560a:	18d3      	adds	r3, r2, r3
 800560c:	930b      	str	r3, [sp, #44]	; 0x2c
 800560e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005610:	0008      	movs	r0, r1
 8005612:	1c5a      	adds	r2, r3, #1
 8005614:	921f      	str	r2, [sp, #124]	; 0x7c
 8005616:	785b      	ldrb	r3, [r3, #1]
 8005618:	e7c7      	b.n	80055aa <_strtod_l+0x1f2>
 800561a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800561c:	e7d1      	b.n	80055c2 <_strtod_l+0x20a>
 800561e:	2b08      	cmp	r3, #8
 8005620:	dc04      	bgt.n	800562c <_strtod_l+0x274>
 8005622:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005624:	434d      	muls	r5, r1
 8005626:	950b      	str	r5, [sp, #44]	; 0x2c
 8005628:	3301      	adds	r3, #1
 800562a:	e7e0      	b.n	80055ee <_strtod_l+0x236>
 800562c:	1c5d      	adds	r5, r3, #1
 800562e:	2d10      	cmp	r5, #16
 8005630:	dcfa      	bgt.n	8005628 <_strtod_l+0x270>
 8005632:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005634:	434d      	muls	r5, r1
 8005636:	950f      	str	r5, [sp, #60]	; 0x3c
 8005638:	e7f6      	b.n	8005628 <_strtod_l+0x270>
 800563a:	9b06      	ldr	r3, [sp, #24]
 800563c:	2100      	movs	r1, #0
 800563e:	2b10      	cmp	r3, #16
 8005640:	dce5      	bgt.n	800560e <_strtod_l+0x256>
 8005642:	230a      	movs	r3, #10
 8005644:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005646:	4343      	muls	r3, r0
 8005648:	18d3      	adds	r3, r2, r3
 800564a:	930f      	str	r3, [sp, #60]	; 0x3c
 800564c:	e7df      	b.n	800560e <_strtod_l+0x256>
 800564e:	2200      	movs	r2, #0
 8005650:	920c      	str	r2, [sp, #48]	; 0x30
 8005652:	9206      	str	r2, [sp, #24]
 8005654:	3201      	adds	r2, #1
 8005656:	e7ad      	b.n	80055b4 <_strtod_l+0x1fc>
 8005658:	2400      	movs	r4, #0
 800565a:	9b08      	ldr	r3, [sp, #32]
 800565c:	3302      	adds	r3, #2
 800565e:	931f      	str	r3, [sp, #124]	; 0x7c
 8005660:	9b08      	ldr	r3, [sp, #32]
 8005662:	789b      	ldrb	r3, [r3, #2]
 8005664:	001a      	movs	r2, r3
 8005666:	3a30      	subs	r2, #48	; 0x30
 8005668:	2a09      	cmp	r2, #9
 800566a:	d913      	bls.n	8005694 <_strtod_l+0x2dc>
 800566c:	9a08      	ldr	r2, [sp, #32]
 800566e:	921f      	str	r2, [sp, #124]	; 0x7c
 8005670:	2200      	movs	r2, #0
 8005672:	e031      	b.n	80056d8 <_strtod_l+0x320>
 8005674:	080093f8 	.word	0x080093f8
 8005678:	080091b0 	.word	0x080091b0
 800567c:	ffefffff 	.word	0xffefffff
 8005680:	00000433 	.word	0x00000433
 8005684:	7ff00000 	.word	0x7ff00000
 8005688:	7fffffff 	.word	0x7fffffff
 800568c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800568e:	1c5a      	adds	r2, r3, #1
 8005690:	921f      	str	r2, [sp, #124]	; 0x7c
 8005692:	785b      	ldrb	r3, [r3, #1]
 8005694:	2b30      	cmp	r3, #48	; 0x30
 8005696:	d0f9      	beq.n	800568c <_strtod_l+0x2d4>
 8005698:	2200      	movs	r2, #0
 800569a:	9207      	str	r2, [sp, #28]
 800569c:	001a      	movs	r2, r3
 800569e:	3a31      	subs	r2, #49	; 0x31
 80056a0:	2a08      	cmp	r2, #8
 80056a2:	d81a      	bhi.n	80056da <_strtod_l+0x322>
 80056a4:	3b30      	subs	r3, #48	; 0x30
 80056a6:	001a      	movs	r2, r3
 80056a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80056aa:	9307      	str	r3, [sp, #28]
 80056ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80056ae:	1c59      	adds	r1, r3, #1
 80056b0:	911f      	str	r1, [sp, #124]	; 0x7c
 80056b2:	785b      	ldrb	r3, [r3, #1]
 80056b4:	001d      	movs	r5, r3
 80056b6:	3d30      	subs	r5, #48	; 0x30
 80056b8:	2d09      	cmp	r5, #9
 80056ba:	d939      	bls.n	8005730 <_strtod_l+0x378>
 80056bc:	9d07      	ldr	r5, [sp, #28]
 80056be:	1b49      	subs	r1, r1, r5
 80056c0:	4db0      	ldr	r5, [pc, #704]	; (8005984 <_strtod_l+0x5cc>)
 80056c2:	9507      	str	r5, [sp, #28]
 80056c4:	2908      	cmp	r1, #8
 80056c6:	dc03      	bgt.n	80056d0 <_strtod_l+0x318>
 80056c8:	9207      	str	r2, [sp, #28]
 80056ca:	42aa      	cmp	r2, r5
 80056cc:	dd00      	ble.n	80056d0 <_strtod_l+0x318>
 80056ce:	9507      	str	r5, [sp, #28]
 80056d0:	2c00      	cmp	r4, #0
 80056d2:	d002      	beq.n	80056da <_strtod_l+0x322>
 80056d4:	9a07      	ldr	r2, [sp, #28]
 80056d6:	4252      	negs	r2, r2
 80056d8:	9207      	str	r2, [sp, #28]
 80056da:	9a06      	ldr	r2, [sp, #24]
 80056dc:	2a00      	cmp	r2, #0
 80056de:	d14b      	bne.n	8005778 <_strtod_l+0x3c0>
 80056e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80056e2:	4310      	orrs	r0, r2
 80056e4:	d000      	beq.n	80056e8 <_strtod_l+0x330>
 80056e6:	e6ae      	b.n	8005446 <_strtod_l+0x8e>
 80056e8:	4662      	mov	r2, ip
 80056ea:	2a00      	cmp	r2, #0
 80056ec:	d000      	beq.n	80056f0 <_strtod_l+0x338>
 80056ee:	e6c9      	b.n	8005484 <_strtod_l+0xcc>
 80056f0:	2b69      	cmp	r3, #105	; 0x69
 80056f2:	d025      	beq.n	8005740 <_strtod_l+0x388>
 80056f4:	dc21      	bgt.n	800573a <_strtod_l+0x382>
 80056f6:	2b49      	cmp	r3, #73	; 0x49
 80056f8:	d022      	beq.n	8005740 <_strtod_l+0x388>
 80056fa:	2b4e      	cmp	r3, #78	; 0x4e
 80056fc:	d000      	beq.n	8005700 <_strtod_l+0x348>
 80056fe:	e6c1      	b.n	8005484 <_strtod_l+0xcc>
 8005700:	49a1      	ldr	r1, [pc, #644]	; (8005988 <_strtod_l+0x5d0>)
 8005702:	a81f      	add	r0, sp, #124	; 0x7c
 8005704:	f001 fe64 	bl	80073d0 <__match>
 8005708:	2800      	cmp	r0, #0
 800570a:	d100      	bne.n	800570e <_strtod_l+0x356>
 800570c:	e6ba      	b.n	8005484 <_strtod_l+0xcc>
 800570e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005710:	781b      	ldrb	r3, [r3, #0]
 8005712:	2b28      	cmp	r3, #40	; 0x28
 8005714:	d12a      	bne.n	800576c <_strtod_l+0x3b4>
 8005716:	499d      	ldr	r1, [pc, #628]	; (800598c <_strtod_l+0x5d4>)
 8005718:	aa22      	add	r2, sp, #136	; 0x88
 800571a:	a81f      	add	r0, sp, #124	; 0x7c
 800571c:	f001 fe6c 	bl	80073f8 <__hexnan>
 8005720:	2805      	cmp	r0, #5
 8005722:	d123      	bne.n	800576c <_strtod_l+0x3b4>
 8005724:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005726:	4a9a      	ldr	r2, [pc, #616]	; (8005990 <_strtod_l+0x5d8>)
 8005728:	9e22      	ldr	r6, [sp, #136]	; 0x88
 800572a:	431a      	orrs	r2, r3
 800572c:	0017      	movs	r7, r2
 800572e:	e68a      	b.n	8005446 <_strtod_l+0x8e>
 8005730:	210a      	movs	r1, #10
 8005732:	434a      	muls	r2, r1
 8005734:	18d2      	adds	r2, r2, r3
 8005736:	3a30      	subs	r2, #48	; 0x30
 8005738:	e7b8      	b.n	80056ac <_strtod_l+0x2f4>
 800573a:	2b6e      	cmp	r3, #110	; 0x6e
 800573c:	d0e0      	beq.n	8005700 <_strtod_l+0x348>
 800573e:	e6a1      	b.n	8005484 <_strtod_l+0xcc>
 8005740:	4994      	ldr	r1, [pc, #592]	; (8005994 <_strtod_l+0x5dc>)
 8005742:	a81f      	add	r0, sp, #124	; 0x7c
 8005744:	f001 fe44 	bl	80073d0 <__match>
 8005748:	2800      	cmp	r0, #0
 800574a:	d100      	bne.n	800574e <_strtod_l+0x396>
 800574c:	e69a      	b.n	8005484 <_strtod_l+0xcc>
 800574e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005750:	4991      	ldr	r1, [pc, #580]	; (8005998 <_strtod_l+0x5e0>)
 8005752:	3b01      	subs	r3, #1
 8005754:	a81f      	add	r0, sp, #124	; 0x7c
 8005756:	931f      	str	r3, [sp, #124]	; 0x7c
 8005758:	f001 fe3a 	bl	80073d0 <__match>
 800575c:	2800      	cmp	r0, #0
 800575e:	d102      	bne.n	8005766 <_strtod_l+0x3ae>
 8005760:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005762:	3301      	adds	r3, #1
 8005764:	931f      	str	r3, [sp, #124]	; 0x7c
 8005766:	2600      	movs	r6, #0
 8005768:	4f89      	ldr	r7, [pc, #548]	; (8005990 <_strtod_l+0x5d8>)
 800576a:	e66c      	b.n	8005446 <_strtod_l+0x8e>
 800576c:	488b      	ldr	r0, [pc, #556]	; (800599c <_strtod_l+0x5e4>)
 800576e:	f002 fe59 	bl	8008424 <nan>
 8005772:	0006      	movs	r6, r0
 8005774:	000f      	movs	r7, r1
 8005776:	e666      	b.n	8005446 <_strtod_l+0x8e>
 8005778:	9b07      	ldr	r3, [sp, #28]
 800577a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800577c:	1a9b      	subs	r3, r3, r2
 800577e:	930a      	str	r3, [sp, #40]	; 0x28
 8005780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005782:	2b00      	cmp	r3, #0
 8005784:	d101      	bne.n	800578a <_strtod_l+0x3d2>
 8005786:	9b06      	ldr	r3, [sp, #24]
 8005788:	9309      	str	r3, [sp, #36]	; 0x24
 800578a:	9c06      	ldr	r4, [sp, #24]
 800578c:	2c10      	cmp	r4, #16
 800578e:	dd00      	ble.n	8005792 <_strtod_l+0x3da>
 8005790:	2410      	movs	r4, #16
 8005792:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005794:	f7fc fcb8 	bl	8002108 <__aeabi_ui2d>
 8005798:	9b06      	ldr	r3, [sp, #24]
 800579a:	0006      	movs	r6, r0
 800579c:	000f      	movs	r7, r1
 800579e:	2b09      	cmp	r3, #9
 80057a0:	dd15      	ble.n	80057ce <_strtod_l+0x416>
 80057a2:	0022      	movs	r2, r4
 80057a4:	4b7e      	ldr	r3, [pc, #504]	; (80059a0 <_strtod_l+0x5e8>)
 80057a6:	3a09      	subs	r2, #9
 80057a8:	00d2      	lsls	r2, r2, #3
 80057aa:	189b      	adds	r3, r3, r2
 80057ac:	681a      	ldr	r2, [r3, #0]
 80057ae:	685b      	ldr	r3, [r3, #4]
 80057b0:	f7fb fe28 	bl	8001404 <__aeabi_dmul>
 80057b4:	0006      	movs	r6, r0
 80057b6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80057b8:	000f      	movs	r7, r1
 80057ba:	f7fc fca5 	bl	8002108 <__aeabi_ui2d>
 80057be:	0002      	movs	r2, r0
 80057c0:	000b      	movs	r3, r1
 80057c2:	0030      	movs	r0, r6
 80057c4:	0039      	movs	r1, r7
 80057c6:	f7fa fedf 	bl	8000588 <__aeabi_dadd>
 80057ca:	0006      	movs	r6, r0
 80057cc:	000f      	movs	r7, r1
 80057ce:	9b06      	ldr	r3, [sp, #24]
 80057d0:	2b0f      	cmp	r3, #15
 80057d2:	dc39      	bgt.n	8005848 <_strtod_l+0x490>
 80057d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80057d6:	2b00      	cmp	r3, #0
 80057d8:	d100      	bne.n	80057dc <_strtod_l+0x424>
 80057da:	e634      	b.n	8005446 <_strtod_l+0x8e>
 80057dc:	dd24      	ble.n	8005828 <_strtod_l+0x470>
 80057de:	2b16      	cmp	r3, #22
 80057e0:	dc09      	bgt.n	80057f6 <_strtod_l+0x43e>
 80057e2:	496f      	ldr	r1, [pc, #444]	; (80059a0 <_strtod_l+0x5e8>)
 80057e4:	00db      	lsls	r3, r3, #3
 80057e6:	18c9      	adds	r1, r1, r3
 80057e8:	0032      	movs	r2, r6
 80057ea:	6808      	ldr	r0, [r1, #0]
 80057ec:	6849      	ldr	r1, [r1, #4]
 80057ee:	003b      	movs	r3, r7
 80057f0:	f7fb fe08 	bl	8001404 <__aeabi_dmul>
 80057f4:	e7bd      	b.n	8005772 <_strtod_l+0x3ba>
 80057f6:	2325      	movs	r3, #37	; 0x25
 80057f8:	9a06      	ldr	r2, [sp, #24]
 80057fa:	1a9b      	subs	r3, r3, r2
 80057fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80057fe:	4293      	cmp	r3, r2
 8005800:	db22      	blt.n	8005848 <_strtod_l+0x490>
 8005802:	240f      	movs	r4, #15
 8005804:	9b06      	ldr	r3, [sp, #24]
 8005806:	4d66      	ldr	r5, [pc, #408]	; (80059a0 <_strtod_l+0x5e8>)
 8005808:	1ae4      	subs	r4, r4, r3
 800580a:	00e1      	lsls	r1, r4, #3
 800580c:	1869      	adds	r1, r5, r1
 800580e:	0032      	movs	r2, r6
 8005810:	6808      	ldr	r0, [r1, #0]
 8005812:	6849      	ldr	r1, [r1, #4]
 8005814:	003b      	movs	r3, r7
 8005816:	f7fb fdf5 	bl	8001404 <__aeabi_dmul>
 800581a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800581c:	1b1c      	subs	r4, r3, r4
 800581e:	00e4      	lsls	r4, r4, #3
 8005820:	192c      	adds	r4, r5, r4
 8005822:	6822      	ldr	r2, [r4, #0]
 8005824:	6863      	ldr	r3, [r4, #4]
 8005826:	e7e3      	b.n	80057f0 <_strtod_l+0x438>
 8005828:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800582a:	3316      	adds	r3, #22
 800582c:	db0c      	blt.n	8005848 <_strtod_l+0x490>
 800582e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005830:	9a07      	ldr	r2, [sp, #28]
 8005832:	0030      	movs	r0, r6
 8005834:	1a9a      	subs	r2, r3, r2
 8005836:	4b5a      	ldr	r3, [pc, #360]	; (80059a0 <_strtod_l+0x5e8>)
 8005838:	00d2      	lsls	r2, r2, #3
 800583a:	189b      	adds	r3, r3, r2
 800583c:	0039      	movs	r1, r7
 800583e:	681a      	ldr	r2, [r3, #0]
 8005840:	685b      	ldr	r3, [r3, #4]
 8005842:	f7fb f9dd 	bl	8000c00 <__aeabi_ddiv>
 8005846:	e794      	b.n	8005772 <_strtod_l+0x3ba>
 8005848:	9b06      	ldr	r3, [sp, #24]
 800584a:	1b1c      	subs	r4, r3, r4
 800584c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800584e:	18e4      	adds	r4, r4, r3
 8005850:	2c00      	cmp	r4, #0
 8005852:	dd72      	ble.n	800593a <_strtod_l+0x582>
 8005854:	230f      	movs	r3, #15
 8005856:	0021      	movs	r1, r4
 8005858:	4019      	ands	r1, r3
 800585a:	421c      	tst	r4, r3
 800585c:	d00a      	beq.n	8005874 <_strtod_l+0x4bc>
 800585e:	00cb      	lsls	r3, r1, #3
 8005860:	494f      	ldr	r1, [pc, #316]	; (80059a0 <_strtod_l+0x5e8>)
 8005862:	0032      	movs	r2, r6
 8005864:	18c9      	adds	r1, r1, r3
 8005866:	6808      	ldr	r0, [r1, #0]
 8005868:	6849      	ldr	r1, [r1, #4]
 800586a:	003b      	movs	r3, r7
 800586c:	f7fb fdca 	bl	8001404 <__aeabi_dmul>
 8005870:	0006      	movs	r6, r0
 8005872:	000f      	movs	r7, r1
 8005874:	230f      	movs	r3, #15
 8005876:	439c      	bics	r4, r3
 8005878:	d04a      	beq.n	8005910 <_strtod_l+0x558>
 800587a:	3326      	adds	r3, #38	; 0x26
 800587c:	33ff      	adds	r3, #255	; 0xff
 800587e:	429c      	cmp	r4, r3
 8005880:	dd22      	ble.n	80058c8 <_strtod_l+0x510>
 8005882:	2300      	movs	r3, #0
 8005884:	9306      	str	r3, [sp, #24]
 8005886:	9307      	str	r3, [sp, #28]
 8005888:	930b      	str	r3, [sp, #44]	; 0x2c
 800588a:	9309      	str	r3, [sp, #36]	; 0x24
 800588c:	2322      	movs	r3, #34	; 0x22
 800588e:	2600      	movs	r6, #0
 8005890:	9a05      	ldr	r2, [sp, #20]
 8005892:	4f3f      	ldr	r7, [pc, #252]	; (8005990 <_strtod_l+0x5d8>)
 8005894:	6013      	str	r3, [r2, #0]
 8005896:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005898:	42b3      	cmp	r3, r6
 800589a:	d100      	bne.n	800589e <_strtod_l+0x4e6>
 800589c:	e5d3      	b.n	8005446 <_strtod_l+0x8e>
 800589e:	9920      	ldr	r1, [sp, #128]	; 0x80
 80058a0:	9805      	ldr	r0, [sp, #20]
 80058a2:	f001 fec9 	bl	8007638 <_Bfree>
 80058a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80058a8:	9805      	ldr	r0, [sp, #20]
 80058aa:	f001 fec5 	bl	8007638 <_Bfree>
 80058ae:	9907      	ldr	r1, [sp, #28]
 80058b0:	9805      	ldr	r0, [sp, #20]
 80058b2:	f001 fec1 	bl	8007638 <_Bfree>
 80058b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80058b8:	9805      	ldr	r0, [sp, #20]
 80058ba:	f001 febd 	bl	8007638 <_Bfree>
 80058be:	9906      	ldr	r1, [sp, #24]
 80058c0:	9805      	ldr	r0, [sp, #20]
 80058c2:	f001 feb9 	bl	8007638 <_Bfree>
 80058c6:	e5be      	b.n	8005446 <_strtod_l+0x8e>
 80058c8:	2300      	movs	r3, #0
 80058ca:	0030      	movs	r0, r6
 80058cc:	0039      	movs	r1, r7
 80058ce:	4d35      	ldr	r5, [pc, #212]	; (80059a4 <_strtod_l+0x5ec>)
 80058d0:	1124      	asrs	r4, r4, #4
 80058d2:	9308      	str	r3, [sp, #32]
 80058d4:	2c01      	cmp	r4, #1
 80058d6:	dc1e      	bgt.n	8005916 <_strtod_l+0x55e>
 80058d8:	2b00      	cmp	r3, #0
 80058da:	d001      	beq.n	80058e0 <_strtod_l+0x528>
 80058dc:	0006      	movs	r6, r0
 80058de:	000f      	movs	r7, r1
 80058e0:	4b31      	ldr	r3, [pc, #196]	; (80059a8 <_strtod_l+0x5f0>)
 80058e2:	0032      	movs	r2, r6
 80058e4:	18ff      	adds	r7, r7, r3
 80058e6:	9b08      	ldr	r3, [sp, #32]
 80058e8:	00dd      	lsls	r5, r3, #3
 80058ea:	4b2e      	ldr	r3, [pc, #184]	; (80059a4 <_strtod_l+0x5ec>)
 80058ec:	195d      	adds	r5, r3, r5
 80058ee:	6828      	ldr	r0, [r5, #0]
 80058f0:	6869      	ldr	r1, [r5, #4]
 80058f2:	003b      	movs	r3, r7
 80058f4:	f7fb fd86 	bl	8001404 <__aeabi_dmul>
 80058f8:	4b25      	ldr	r3, [pc, #148]	; (8005990 <_strtod_l+0x5d8>)
 80058fa:	4a2c      	ldr	r2, [pc, #176]	; (80059ac <_strtod_l+0x5f4>)
 80058fc:	0006      	movs	r6, r0
 80058fe:	400b      	ands	r3, r1
 8005900:	4293      	cmp	r3, r2
 8005902:	d8be      	bhi.n	8005882 <_strtod_l+0x4ca>
 8005904:	4a2a      	ldr	r2, [pc, #168]	; (80059b0 <_strtod_l+0x5f8>)
 8005906:	4293      	cmp	r3, r2
 8005908:	d913      	bls.n	8005932 <_strtod_l+0x57a>
 800590a:	2601      	movs	r6, #1
 800590c:	4f29      	ldr	r7, [pc, #164]	; (80059b4 <_strtod_l+0x5fc>)
 800590e:	4276      	negs	r6, r6
 8005910:	2300      	movs	r3, #0
 8005912:	9308      	str	r3, [sp, #32]
 8005914:	e087      	b.n	8005a26 <_strtod_l+0x66e>
 8005916:	2201      	movs	r2, #1
 8005918:	4214      	tst	r4, r2
 800591a:	d004      	beq.n	8005926 <_strtod_l+0x56e>
 800591c:	682a      	ldr	r2, [r5, #0]
 800591e:	686b      	ldr	r3, [r5, #4]
 8005920:	f7fb fd70 	bl	8001404 <__aeabi_dmul>
 8005924:	2301      	movs	r3, #1
 8005926:	9a08      	ldr	r2, [sp, #32]
 8005928:	1064      	asrs	r4, r4, #1
 800592a:	3201      	adds	r2, #1
 800592c:	9208      	str	r2, [sp, #32]
 800592e:	3508      	adds	r5, #8
 8005930:	e7d0      	b.n	80058d4 <_strtod_l+0x51c>
 8005932:	23d4      	movs	r3, #212	; 0xd4
 8005934:	049b      	lsls	r3, r3, #18
 8005936:	18cf      	adds	r7, r1, r3
 8005938:	e7ea      	b.n	8005910 <_strtod_l+0x558>
 800593a:	2c00      	cmp	r4, #0
 800593c:	d0e8      	beq.n	8005910 <_strtod_l+0x558>
 800593e:	4264      	negs	r4, r4
 8005940:	220f      	movs	r2, #15
 8005942:	0023      	movs	r3, r4
 8005944:	4013      	ands	r3, r2
 8005946:	4214      	tst	r4, r2
 8005948:	d00a      	beq.n	8005960 <_strtod_l+0x5a8>
 800594a:	00da      	lsls	r2, r3, #3
 800594c:	4b14      	ldr	r3, [pc, #80]	; (80059a0 <_strtod_l+0x5e8>)
 800594e:	0030      	movs	r0, r6
 8005950:	189b      	adds	r3, r3, r2
 8005952:	0039      	movs	r1, r7
 8005954:	681a      	ldr	r2, [r3, #0]
 8005956:	685b      	ldr	r3, [r3, #4]
 8005958:	f7fb f952 	bl	8000c00 <__aeabi_ddiv>
 800595c:	0006      	movs	r6, r0
 800595e:	000f      	movs	r7, r1
 8005960:	1124      	asrs	r4, r4, #4
 8005962:	d0d5      	beq.n	8005910 <_strtod_l+0x558>
 8005964:	2c1f      	cmp	r4, #31
 8005966:	dd27      	ble.n	80059b8 <_strtod_l+0x600>
 8005968:	2300      	movs	r3, #0
 800596a:	9306      	str	r3, [sp, #24]
 800596c:	9307      	str	r3, [sp, #28]
 800596e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005970:	9309      	str	r3, [sp, #36]	; 0x24
 8005972:	2322      	movs	r3, #34	; 0x22
 8005974:	9a05      	ldr	r2, [sp, #20]
 8005976:	2600      	movs	r6, #0
 8005978:	6013      	str	r3, [r2, #0]
 800597a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800597c:	2700      	movs	r7, #0
 800597e:	2b00      	cmp	r3, #0
 8005980:	d18d      	bne.n	800589e <_strtod_l+0x4e6>
 8005982:	e560      	b.n	8005446 <_strtod_l+0x8e>
 8005984:	00004e1f 	.word	0x00004e1f
 8005988:	08009181 	.word	0x08009181
 800598c:	080091c4 	.word	0x080091c4
 8005990:	7ff00000 	.word	0x7ff00000
 8005994:	08009179 	.word	0x08009179
 8005998:	08009304 	.word	0x08009304
 800599c:	080095b0 	.word	0x080095b0
 80059a0:	08009490 	.word	0x08009490
 80059a4:	08009468 	.word	0x08009468
 80059a8:	fcb00000 	.word	0xfcb00000
 80059ac:	7ca00000 	.word	0x7ca00000
 80059b0:	7c900000 	.word	0x7c900000
 80059b4:	7fefffff 	.word	0x7fefffff
 80059b8:	2310      	movs	r3, #16
 80059ba:	0022      	movs	r2, r4
 80059bc:	401a      	ands	r2, r3
 80059be:	9208      	str	r2, [sp, #32]
 80059c0:	421c      	tst	r4, r3
 80059c2:	d001      	beq.n	80059c8 <_strtod_l+0x610>
 80059c4:	335a      	adds	r3, #90	; 0x5a
 80059c6:	9308      	str	r3, [sp, #32]
 80059c8:	0030      	movs	r0, r6
 80059ca:	0039      	movs	r1, r7
 80059cc:	2300      	movs	r3, #0
 80059ce:	4dc5      	ldr	r5, [pc, #788]	; (8005ce4 <_strtod_l+0x92c>)
 80059d0:	2201      	movs	r2, #1
 80059d2:	4214      	tst	r4, r2
 80059d4:	d004      	beq.n	80059e0 <_strtod_l+0x628>
 80059d6:	682a      	ldr	r2, [r5, #0]
 80059d8:	686b      	ldr	r3, [r5, #4]
 80059da:	f7fb fd13 	bl	8001404 <__aeabi_dmul>
 80059de:	2301      	movs	r3, #1
 80059e0:	1064      	asrs	r4, r4, #1
 80059e2:	3508      	adds	r5, #8
 80059e4:	2c00      	cmp	r4, #0
 80059e6:	d1f3      	bne.n	80059d0 <_strtod_l+0x618>
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	d001      	beq.n	80059f0 <_strtod_l+0x638>
 80059ec:	0006      	movs	r6, r0
 80059ee:	000f      	movs	r7, r1
 80059f0:	9b08      	ldr	r3, [sp, #32]
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	d00f      	beq.n	8005a16 <_strtod_l+0x65e>
 80059f6:	236b      	movs	r3, #107	; 0x6b
 80059f8:	007a      	lsls	r2, r7, #1
 80059fa:	0d52      	lsrs	r2, r2, #21
 80059fc:	0039      	movs	r1, r7
 80059fe:	1a9b      	subs	r3, r3, r2
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	dd08      	ble.n	8005a16 <_strtod_l+0x65e>
 8005a04:	2b1f      	cmp	r3, #31
 8005a06:	dc00      	bgt.n	8005a0a <_strtod_l+0x652>
 8005a08:	e124      	b.n	8005c54 <_strtod_l+0x89c>
 8005a0a:	2600      	movs	r6, #0
 8005a0c:	2b34      	cmp	r3, #52	; 0x34
 8005a0e:	dc00      	bgt.n	8005a12 <_strtod_l+0x65a>
 8005a10:	e119      	b.n	8005c46 <_strtod_l+0x88e>
 8005a12:	27dc      	movs	r7, #220	; 0xdc
 8005a14:	04bf      	lsls	r7, r7, #18
 8005a16:	2200      	movs	r2, #0
 8005a18:	2300      	movs	r3, #0
 8005a1a:	0030      	movs	r0, r6
 8005a1c:	0039      	movs	r1, r7
 8005a1e:	f7fa fd15 	bl	800044c <__aeabi_dcmpeq>
 8005a22:	2800      	cmp	r0, #0
 8005a24:	d1a0      	bne.n	8005968 <_strtod_l+0x5b0>
 8005a26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005a2a:	9300      	str	r3, [sp, #0]
 8005a2c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005a2e:	9b06      	ldr	r3, [sp, #24]
 8005a30:	9805      	ldr	r0, [sp, #20]
 8005a32:	f001 fe69 	bl	8007708 <__s2b>
 8005a36:	900b      	str	r0, [sp, #44]	; 0x2c
 8005a38:	2800      	cmp	r0, #0
 8005a3a:	d100      	bne.n	8005a3e <_strtod_l+0x686>
 8005a3c:	e721      	b.n	8005882 <_strtod_l+0x4ca>
 8005a3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a40:	9907      	ldr	r1, [sp, #28]
 8005a42:	17da      	asrs	r2, r3, #31
 8005a44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005a46:	1a5b      	subs	r3, r3, r1
 8005a48:	401a      	ands	r2, r3
 8005a4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a4c:	9215      	str	r2, [sp, #84]	; 0x54
 8005a4e:	43db      	mvns	r3, r3
 8005a50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005a52:	17db      	asrs	r3, r3, #31
 8005a54:	401a      	ands	r2, r3
 8005a56:	2300      	movs	r3, #0
 8005a58:	921a      	str	r2, [sp, #104]	; 0x68
 8005a5a:	9306      	str	r3, [sp, #24]
 8005a5c:	9307      	str	r3, [sp, #28]
 8005a5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a60:	9805      	ldr	r0, [sp, #20]
 8005a62:	6859      	ldr	r1, [r3, #4]
 8005a64:	f001 fda4 	bl	80075b0 <_Balloc>
 8005a68:	9009      	str	r0, [sp, #36]	; 0x24
 8005a6a:	2800      	cmp	r0, #0
 8005a6c:	d100      	bne.n	8005a70 <_strtod_l+0x6b8>
 8005a6e:	e70d      	b.n	800588c <_strtod_l+0x4d4>
 8005a70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a72:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005a74:	691b      	ldr	r3, [r3, #16]
 8005a76:	310c      	adds	r1, #12
 8005a78:	1c9a      	adds	r2, r3, #2
 8005a7a:	0092      	lsls	r2, r2, #2
 8005a7c:	300c      	adds	r0, #12
 8005a7e:	930c      	str	r3, [sp, #48]	; 0x30
 8005a80:	f001 fd8d 	bl	800759e <memcpy>
 8005a84:	ab22      	add	r3, sp, #136	; 0x88
 8005a86:	9301      	str	r3, [sp, #4]
 8005a88:	ab21      	add	r3, sp, #132	; 0x84
 8005a8a:	9300      	str	r3, [sp, #0]
 8005a8c:	0032      	movs	r2, r6
 8005a8e:	003b      	movs	r3, r7
 8005a90:	9805      	ldr	r0, [sp, #20]
 8005a92:	9612      	str	r6, [sp, #72]	; 0x48
 8005a94:	9713      	str	r7, [sp, #76]	; 0x4c
 8005a96:	f002 f983 	bl	8007da0 <__d2b>
 8005a9a:	9020      	str	r0, [sp, #128]	; 0x80
 8005a9c:	2800      	cmp	r0, #0
 8005a9e:	d100      	bne.n	8005aa2 <_strtod_l+0x6ea>
 8005aa0:	e6f4      	b.n	800588c <_strtod_l+0x4d4>
 8005aa2:	2101      	movs	r1, #1
 8005aa4:	9805      	ldr	r0, [sp, #20]
 8005aa6:	f001 fec3 	bl	8007830 <__i2b>
 8005aaa:	9007      	str	r0, [sp, #28]
 8005aac:	2800      	cmp	r0, #0
 8005aae:	d100      	bne.n	8005ab2 <_strtod_l+0x6fa>
 8005ab0:	e6ec      	b.n	800588c <_strtod_l+0x4d4>
 8005ab2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005ab4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005ab6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8005ab8:	1ad4      	subs	r4, r2, r3
 8005aba:	2b00      	cmp	r3, #0
 8005abc:	db01      	blt.n	8005ac2 <_strtod_l+0x70a>
 8005abe:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8005ac0:	195d      	adds	r5, r3, r5
 8005ac2:	9908      	ldr	r1, [sp, #32]
 8005ac4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005ac6:	1a5b      	subs	r3, r3, r1
 8005ac8:	2136      	movs	r1, #54	; 0x36
 8005aca:	189b      	adds	r3, r3, r2
 8005acc:	1a8a      	subs	r2, r1, r2
 8005ace:	4986      	ldr	r1, [pc, #536]	; (8005ce8 <_strtod_l+0x930>)
 8005ad0:	2001      	movs	r0, #1
 8005ad2:	468c      	mov	ip, r1
 8005ad4:	2100      	movs	r1, #0
 8005ad6:	3b01      	subs	r3, #1
 8005ad8:	9110      	str	r1, [sp, #64]	; 0x40
 8005ada:	9014      	str	r0, [sp, #80]	; 0x50
 8005adc:	4563      	cmp	r3, ip
 8005ade:	da07      	bge.n	8005af0 <_strtod_l+0x738>
 8005ae0:	4661      	mov	r1, ip
 8005ae2:	1ac9      	subs	r1, r1, r3
 8005ae4:	1a52      	subs	r2, r2, r1
 8005ae6:	291f      	cmp	r1, #31
 8005ae8:	dd00      	ble.n	8005aec <_strtod_l+0x734>
 8005aea:	e0b8      	b.n	8005c5e <_strtod_l+0x8a6>
 8005aec:	4088      	lsls	r0, r1
 8005aee:	9014      	str	r0, [sp, #80]	; 0x50
 8005af0:	18ab      	adds	r3, r5, r2
 8005af2:	930c      	str	r3, [sp, #48]	; 0x30
 8005af4:	18a4      	adds	r4, r4, r2
 8005af6:	9b08      	ldr	r3, [sp, #32]
 8005af8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005afa:	191c      	adds	r4, r3, r4
 8005afc:	002b      	movs	r3, r5
 8005afe:	4295      	cmp	r5, r2
 8005b00:	dd00      	ble.n	8005b04 <_strtod_l+0x74c>
 8005b02:	0013      	movs	r3, r2
 8005b04:	42a3      	cmp	r3, r4
 8005b06:	dd00      	ble.n	8005b0a <_strtod_l+0x752>
 8005b08:	0023      	movs	r3, r4
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	dd04      	ble.n	8005b18 <_strtod_l+0x760>
 8005b0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005b10:	1ae4      	subs	r4, r4, r3
 8005b12:	1ad2      	subs	r2, r2, r3
 8005b14:	920c      	str	r2, [sp, #48]	; 0x30
 8005b16:	1aed      	subs	r5, r5, r3
 8005b18:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	dd17      	ble.n	8005b4e <_strtod_l+0x796>
 8005b1e:	001a      	movs	r2, r3
 8005b20:	9907      	ldr	r1, [sp, #28]
 8005b22:	9805      	ldr	r0, [sp, #20]
 8005b24:	f001 ff4a 	bl	80079bc <__pow5mult>
 8005b28:	9007      	str	r0, [sp, #28]
 8005b2a:	2800      	cmp	r0, #0
 8005b2c:	d100      	bne.n	8005b30 <_strtod_l+0x778>
 8005b2e:	e6ad      	b.n	800588c <_strtod_l+0x4d4>
 8005b30:	0001      	movs	r1, r0
 8005b32:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8005b34:	9805      	ldr	r0, [sp, #20]
 8005b36:	f001 fe91 	bl	800785c <__multiply>
 8005b3a:	900f      	str	r0, [sp, #60]	; 0x3c
 8005b3c:	2800      	cmp	r0, #0
 8005b3e:	d100      	bne.n	8005b42 <_strtod_l+0x78a>
 8005b40:	e6a4      	b.n	800588c <_strtod_l+0x4d4>
 8005b42:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005b44:	9805      	ldr	r0, [sp, #20]
 8005b46:	f001 fd77 	bl	8007638 <_Bfree>
 8005b4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005b4c:	9320      	str	r3, [sp, #128]	; 0x80
 8005b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	dd00      	ble.n	8005b56 <_strtod_l+0x79e>
 8005b54:	e089      	b.n	8005c6a <_strtod_l+0x8b2>
 8005b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	dd08      	ble.n	8005b6e <_strtod_l+0x7b6>
 8005b5c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005b5e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005b60:	9805      	ldr	r0, [sp, #20]
 8005b62:	f001 ff2b 	bl	80079bc <__pow5mult>
 8005b66:	9009      	str	r0, [sp, #36]	; 0x24
 8005b68:	2800      	cmp	r0, #0
 8005b6a:	d100      	bne.n	8005b6e <_strtod_l+0x7b6>
 8005b6c:	e68e      	b.n	800588c <_strtod_l+0x4d4>
 8005b6e:	2c00      	cmp	r4, #0
 8005b70:	dd08      	ble.n	8005b84 <_strtod_l+0x7cc>
 8005b72:	0022      	movs	r2, r4
 8005b74:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005b76:	9805      	ldr	r0, [sp, #20]
 8005b78:	f001 ff7c 	bl	8007a74 <__lshift>
 8005b7c:	9009      	str	r0, [sp, #36]	; 0x24
 8005b7e:	2800      	cmp	r0, #0
 8005b80:	d100      	bne.n	8005b84 <_strtod_l+0x7cc>
 8005b82:	e683      	b.n	800588c <_strtod_l+0x4d4>
 8005b84:	2d00      	cmp	r5, #0
 8005b86:	dd08      	ble.n	8005b9a <_strtod_l+0x7e2>
 8005b88:	002a      	movs	r2, r5
 8005b8a:	9907      	ldr	r1, [sp, #28]
 8005b8c:	9805      	ldr	r0, [sp, #20]
 8005b8e:	f001 ff71 	bl	8007a74 <__lshift>
 8005b92:	9007      	str	r0, [sp, #28]
 8005b94:	2800      	cmp	r0, #0
 8005b96:	d100      	bne.n	8005b9a <_strtod_l+0x7e2>
 8005b98:	e678      	b.n	800588c <_strtod_l+0x4d4>
 8005b9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005b9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005b9e:	9805      	ldr	r0, [sp, #20]
 8005ba0:	f001 fff2 	bl	8007b88 <__mdiff>
 8005ba4:	9006      	str	r0, [sp, #24]
 8005ba6:	2800      	cmp	r0, #0
 8005ba8:	d100      	bne.n	8005bac <_strtod_l+0x7f4>
 8005baa:	e66f      	b.n	800588c <_strtod_l+0x4d4>
 8005bac:	2200      	movs	r2, #0
 8005bae:	68c3      	ldr	r3, [r0, #12]
 8005bb0:	9907      	ldr	r1, [sp, #28]
 8005bb2:	60c2      	str	r2, [r0, #12]
 8005bb4:	930f      	str	r3, [sp, #60]	; 0x3c
 8005bb6:	f001 ffcb 	bl	8007b50 <__mcmp>
 8005bba:	2800      	cmp	r0, #0
 8005bbc:	da5f      	bge.n	8005c7e <_strtod_l+0x8c6>
 8005bbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005bc0:	4333      	orrs	r3, r6
 8005bc2:	d000      	beq.n	8005bc6 <_strtod_l+0x80e>
 8005bc4:	e08a      	b.n	8005cdc <_strtod_l+0x924>
 8005bc6:	033b      	lsls	r3, r7, #12
 8005bc8:	d000      	beq.n	8005bcc <_strtod_l+0x814>
 8005bca:	e087      	b.n	8005cdc <_strtod_l+0x924>
 8005bcc:	22d6      	movs	r2, #214	; 0xd6
 8005bce:	4b47      	ldr	r3, [pc, #284]	; (8005cec <_strtod_l+0x934>)
 8005bd0:	04d2      	lsls	r2, r2, #19
 8005bd2:	403b      	ands	r3, r7
 8005bd4:	4293      	cmp	r3, r2
 8005bd6:	d800      	bhi.n	8005bda <_strtod_l+0x822>
 8005bd8:	e080      	b.n	8005cdc <_strtod_l+0x924>
 8005bda:	9b06      	ldr	r3, [sp, #24]
 8005bdc:	695b      	ldr	r3, [r3, #20]
 8005bde:	930a      	str	r3, [sp, #40]	; 0x28
 8005be0:	2b00      	cmp	r3, #0
 8005be2:	d104      	bne.n	8005bee <_strtod_l+0x836>
 8005be4:	9b06      	ldr	r3, [sp, #24]
 8005be6:	691b      	ldr	r3, [r3, #16]
 8005be8:	930a      	str	r3, [sp, #40]	; 0x28
 8005bea:	2b01      	cmp	r3, #1
 8005bec:	dd76      	ble.n	8005cdc <_strtod_l+0x924>
 8005bee:	9906      	ldr	r1, [sp, #24]
 8005bf0:	2201      	movs	r2, #1
 8005bf2:	9805      	ldr	r0, [sp, #20]
 8005bf4:	f001 ff3e 	bl	8007a74 <__lshift>
 8005bf8:	9907      	ldr	r1, [sp, #28]
 8005bfa:	9006      	str	r0, [sp, #24]
 8005bfc:	f001 ffa8 	bl	8007b50 <__mcmp>
 8005c00:	2800      	cmp	r0, #0
 8005c02:	dd6b      	ble.n	8005cdc <_strtod_l+0x924>
 8005c04:	9908      	ldr	r1, [sp, #32]
 8005c06:	003b      	movs	r3, r7
 8005c08:	4a38      	ldr	r2, [pc, #224]	; (8005cec <_strtod_l+0x934>)
 8005c0a:	2900      	cmp	r1, #0
 8005c0c:	d100      	bne.n	8005c10 <_strtod_l+0x858>
 8005c0e:	e092      	b.n	8005d36 <_strtod_l+0x97e>
 8005c10:	0011      	movs	r1, r2
 8005c12:	20d6      	movs	r0, #214	; 0xd6
 8005c14:	4039      	ands	r1, r7
 8005c16:	04c0      	lsls	r0, r0, #19
 8005c18:	4281      	cmp	r1, r0
 8005c1a:	dd00      	ble.n	8005c1e <_strtod_l+0x866>
 8005c1c:	e08b      	b.n	8005d36 <_strtod_l+0x97e>
 8005c1e:	23dc      	movs	r3, #220	; 0xdc
 8005c20:	049b      	lsls	r3, r3, #18
 8005c22:	4299      	cmp	r1, r3
 8005c24:	dc00      	bgt.n	8005c28 <_strtod_l+0x870>
 8005c26:	e6a4      	b.n	8005972 <_strtod_l+0x5ba>
 8005c28:	0030      	movs	r0, r6
 8005c2a:	0039      	movs	r1, r7
 8005c2c:	2200      	movs	r2, #0
 8005c2e:	4b30      	ldr	r3, [pc, #192]	; (8005cf0 <_strtod_l+0x938>)
 8005c30:	f7fb fbe8 	bl	8001404 <__aeabi_dmul>
 8005c34:	0006      	movs	r6, r0
 8005c36:	000f      	movs	r7, r1
 8005c38:	4308      	orrs	r0, r1
 8005c3a:	d000      	beq.n	8005c3e <_strtod_l+0x886>
 8005c3c:	e62f      	b.n	800589e <_strtod_l+0x4e6>
 8005c3e:	2322      	movs	r3, #34	; 0x22
 8005c40:	9a05      	ldr	r2, [sp, #20]
 8005c42:	6013      	str	r3, [r2, #0]
 8005c44:	e62b      	b.n	800589e <_strtod_l+0x4e6>
 8005c46:	234b      	movs	r3, #75	; 0x4b
 8005c48:	1a9a      	subs	r2, r3, r2
 8005c4a:	3b4c      	subs	r3, #76	; 0x4c
 8005c4c:	4093      	lsls	r3, r2
 8005c4e:	4019      	ands	r1, r3
 8005c50:	000f      	movs	r7, r1
 8005c52:	e6e0      	b.n	8005a16 <_strtod_l+0x65e>
 8005c54:	2201      	movs	r2, #1
 8005c56:	4252      	negs	r2, r2
 8005c58:	409a      	lsls	r2, r3
 8005c5a:	4016      	ands	r6, r2
 8005c5c:	e6db      	b.n	8005a16 <_strtod_l+0x65e>
 8005c5e:	4925      	ldr	r1, [pc, #148]	; (8005cf4 <_strtod_l+0x93c>)
 8005c60:	1acb      	subs	r3, r1, r3
 8005c62:	0001      	movs	r1, r0
 8005c64:	4099      	lsls	r1, r3
 8005c66:	9110      	str	r1, [sp, #64]	; 0x40
 8005c68:	e741      	b.n	8005aee <_strtod_l+0x736>
 8005c6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005c6c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005c6e:	9805      	ldr	r0, [sp, #20]
 8005c70:	f001 ff00 	bl	8007a74 <__lshift>
 8005c74:	9020      	str	r0, [sp, #128]	; 0x80
 8005c76:	2800      	cmp	r0, #0
 8005c78:	d000      	beq.n	8005c7c <_strtod_l+0x8c4>
 8005c7a:	e76c      	b.n	8005b56 <_strtod_l+0x79e>
 8005c7c:	e606      	b.n	800588c <_strtod_l+0x4d4>
 8005c7e:	970c      	str	r7, [sp, #48]	; 0x30
 8005c80:	2800      	cmp	r0, #0
 8005c82:	d176      	bne.n	8005d72 <_strtod_l+0x9ba>
 8005c84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005c86:	033b      	lsls	r3, r7, #12
 8005c88:	0b1b      	lsrs	r3, r3, #12
 8005c8a:	2a00      	cmp	r2, #0
 8005c8c:	d038      	beq.n	8005d00 <_strtod_l+0x948>
 8005c8e:	4a1a      	ldr	r2, [pc, #104]	; (8005cf8 <_strtod_l+0x940>)
 8005c90:	4293      	cmp	r3, r2
 8005c92:	d138      	bne.n	8005d06 <_strtod_l+0x94e>
 8005c94:	2201      	movs	r2, #1
 8005c96:	9b08      	ldr	r3, [sp, #32]
 8005c98:	4252      	negs	r2, r2
 8005c9a:	0031      	movs	r1, r6
 8005c9c:	0010      	movs	r0, r2
 8005c9e:	2b00      	cmp	r3, #0
 8005ca0:	d00b      	beq.n	8005cba <_strtod_l+0x902>
 8005ca2:	24d4      	movs	r4, #212	; 0xd4
 8005ca4:	4b11      	ldr	r3, [pc, #68]	; (8005cec <_strtod_l+0x934>)
 8005ca6:	0010      	movs	r0, r2
 8005ca8:	403b      	ands	r3, r7
 8005caa:	04e4      	lsls	r4, r4, #19
 8005cac:	42a3      	cmp	r3, r4
 8005cae:	d804      	bhi.n	8005cba <_strtod_l+0x902>
 8005cb0:	306c      	adds	r0, #108	; 0x6c
 8005cb2:	0d1b      	lsrs	r3, r3, #20
 8005cb4:	1ac3      	subs	r3, r0, r3
 8005cb6:	409a      	lsls	r2, r3
 8005cb8:	0010      	movs	r0, r2
 8005cba:	4281      	cmp	r1, r0
 8005cbc:	d123      	bne.n	8005d06 <_strtod_l+0x94e>
 8005cbe:	4b0f      	ldr	r3, [pc, #60]	; (8005cfc <_strtod_l+0x944>)
 8005cc0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005cc2:	429a      	cmp	r2, r3
 8005cc4:	d102      	bne.n	8005ccc <_strtod_l+0x914>
 8005cc6:	1c4b      	adds	r3, r1, #1
 8005cc8:	d100      	bne.n	8005ccc <_strtod_l+0x914>
 8005cca:	e5df      	b.n	800588c <_strtod_l+0x4d4>
 8005ccc:	4b07      	ldr	r3, [pc, #28]	; (8005cec <_strtod_l+0x934>)
 8005cce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005cd0:	2600      	movs	r6, #0
 8005cd2:	401a      	ands	r2, r3
 8005cd4:	0013      	movs	r3, r2
 8005cd6:	2280      	movs	r2, #128	; 0x80
 8005cd8:	0352      	lsls	r2, r2, #13
 8005cda:	189f      	adds	r7, r3, r2
 8005cdc:	9b08      	ldr	r3, [sp, #32]
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d1a2      	bne.n	8005c28 <_strtod_l+0x870>
 8005ce2:	e5dc      	b.n	800589e <_strtod_l+0x4e6>
 8005ce4:	080091d8 	.word	0x080091d8
 8005ce8:	fffffc02 	.word	0xfffffc02
 8005cec:	7ff00000 	.word	0x7ff00000
 8005cf0:	39500000 	.word	0x39500000
 8005cf4:	fffffbe2 	.word	0xfffffbe2
 8005cf8:	000fffff 	.word	0x000fffff
 8005cfc:	7fefffff 	.word	0x7fefffff
 8005d00:	4333      	orrs	r3, r6
 8005d02:	d100      	bne.n	8005d06 <_strtod_l+0x94e>
 8005d04:	e77e      	b.n	8005c04 <_strtod_l+0x84c>
 8005d06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d01d      	beq.n	8005d48 <_strtod_l+0x990>
 8005d0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005d10:	4213      	tst	r3, r2
 8005d12:	d0e3      	beq.n	8005cdc <_strtod_l+0x924>
 8005d14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d16:	0030      	movs	r0, r6
 8005d18:	0039      	movs	r1, r7
 8005d1a:	9a08      	ldr	r2, [sp, #32]
 8005d1c:	2b00      	cmp	r3, #0
 8005d1e:	d017      	beq.n	8005d50 <_strtod_l+0x998>
 8005d20:	f7ff fb32 	bl	8005388 <sulp>
 8005d24:	0002      	movs	r2, r0
 8005d26:	000b      	movs	r3, r1
 8005d28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005d2a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005d2c:	f7fa fc2c 	bl	8000588 <__aeabi_dadd>
 8005d30:	0006      	movs	r6, r0
 8005d32:	000f      	movs	r7, r1
 8005d34:	e7d2      	b.n	8005cdc <_strtod_l+0x924>
 8005d36:	2601      	movs	r6, #1
 8005d38:	4013      	ands	r3, r2
 8005d3a:	4a99      	ldr	r2, [pc, #612]	; (8005fa0 <_strtod_l+0xbe8>)
 8005d3c:	4276      	negs	r6, r6
 8005d3e:	189b      	adds	r3, r3, r2
 8005d40:	4a98      	ldr	r2, [pc, #608]	; (8005fa4 <_strtod_l+0xbec>)
 8005d42:	431a      	orrs	r2, r3
 8005d44:	0017      	movs	r7, r2
 8005d46:	e7c9      	b.n	8005cdc <_strtod_l+0x924>
 8005d48:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005d4a:	4233      	tst	r3, r6
 8005d4c:	d0c6      	beq.n	8005cdc <_strtod_l+0x924>
 8005d4e:	e7e1      	b.n	8005d14 <_strtod_l+0x95c>
 8005d50:	f7ff fb1a 	bl	8005388 <sulp>
 8005d54:	0002      	movs	r2, r0
 8005d56:	000b      	movs	r3, r1
 8005d58:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005d5a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005d5c:	f7fb fdbe 	bl	80018dc <__aeabi_dsub>
 8005d60:	2200      	movs	r2, #0
 8005d62:	2300      	movs	r3, #0
 8005d64:	0006      	movs	r6, r0
 8005d66:	000f      	movs	r7, r1
 8005d68:	f7fa fb70 	bl	800044c <__aeabi_dcmpeq>
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	d0b5      	beq.n	8005cdc <_strtod_l+0x924>
 8005d70:	e5ff      	b.n	8005972 <_strtod_l+0x5ba>
 8005d72:	9907      	ldr	r1, [sp, #28]
 8005d74:	9806      	ldr	r0, [sp, #24]
 8005d76:	f002 f877 	bl	8007e68 <__ratio>
 8005d7a:	2380      	movs	r3, #128	; 0x80
 8005d7c:	2200      	movs	r2, #0
 8005d7e:	05db      	lsls	r3, r3, #23
 8005d80:	0004      	movs	r4, r0
 8005d82:	000d      	movs	r5, r1
 8005d84:	f7fa fb72 	bl	800046c <__aeabi_dcmple>
 8005d88:	2800      	cmp	r0, #0
 8005d8a:	d075      	beq.n	8005e78 <_strtod_l+0xac0>
 8005d8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d047      	beq.n	8005e22 <_strtod_l+0xa6a>
 8005d92:	2300      	movs	r3, #0
 8005d94:	4c84      	ldr	r4, [pc, #528]	; (8005fa8 <_strtod_l+0xbf0>)
 8005d96:	2500      	movs	r5, #0
 8005d98:	9310      	str	r3, [sp, #64]	; 0x40
 8005d9a:	9411      	str	r4, [sp, #68]	; 0x44
 8005d9c:	4c82      	ldr	r4, [pc, #520]	; (8005fa8 <_strtod_l+0xbf0>)
 8005d9e:	4a83      	ldr	r2, [pc, #524]	; (8005fac <_strtod_l+0xbf4>)
 8005da0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005da2:	4013      	ands	r3, r2
 8005da4:	9314      	str	r3, [sp, #80]	; 0x50
 8005da6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005da8:	4b81      	ldr	r3, [pc, #516]	; (8005fb0 <_strtod_l+0xbf8>)
 8005daa:	429a      	cmp	r2, r3
 8005dac:	d000      	beq.n	8005db0 <_strtod_l+0x9f8>
 8005dae:	e0ac      	b.n	8005f0a <_strtod_l+0xb52>
 8005db0:	4a80      	ldr	r2, [pc, #512]	; (8005fb4 <_strtod_l+0xbfc>)
 8005db2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005db4:	4694      	mov	ip, r2
 8005db6:	4463      	add	r3, ip
 8005db8:	001f      	movs	r7, r3
 8005dba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005dbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005dbe:	0030      	movs	r0, r6
 8005dc0:	0039      	movs	r1, r7
 8005dc2:	920c      	str	r2, [sp, #48]	; 0x30
 8005dc4:	930d      	str	r3, [sp, #52]	; 0x34
 8005dc6:	f001 ff77 	bl	8007cb8 <__ulp>
 8005dca:	0002      	movs	r2, r0
 8005dcc:	000b      	movs	r3, r1
 8005dce:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005dd0:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005dd2:	f7fb fb17 	bl	8001404 <__aeabi_dmul>
 8005dd6:	0032      	movs	r2, r6
 8005dd8:	003b      	movs	r3, r7
 8005dda:	f7fa fbd5 	bl	8000588 <__aeabi_dadd>
 8005dde:	4a73      	ldr	r2, [pc, #460]	; (8005fac <_strtod_l+0xbf4>)
 8005de0:	4b75      	ldr	r3, [pc, #468]	; (8005fb8 <_strtod_l+0xc00>)
 8005de2:	0006      	movs	r6, r0
 8005de4:	400a      	ands	r2, r1
 8005de6:	429a      	cmp	r2, r3
 8005de8:	d95e      	bls.n	8005ea8 <_strtod_l+0xaf0>
 8005dea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005dec:	4b73      	ldr	r3, [pc, #460]	; (8005fbc <_strtod_l+0xc04>)
 8005dee:	429a      	cmp	r2, r3
 8005df0:	d103      	bne.n	8005dfa <_strtod_l+0xa42>
 8005df2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005df4:	3301      	adds	r3, #1
 8005df6:	d100      	bne.n	8005dfa <_strtod_l+0xa42>
 8005df8:	e548      	b.n	800588c <_strtod_l+0x4d4>
 8005dfa:	2601      	movs	r6, #1
 8005dfc:	4f6f      	ldr	r7, [pc, #444]	; (8005fbc <_strtod_l+0xc04>)
 8005dfe:	4276      	negs	r6, r6
 8005e00:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005e02:	9805      	ldr	r0, [sp, #20]
 8005e04:	f001 fc18 	bl	8007638 <_Bfree>
 8005e08:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005e0a:	9805      	ldr	r0, [sp, #20]
 8005e0c:	f001 fc14 	bl	8007638 <_Bfree>
 8005e10:	9907      	ldr	r1, [sp, #28]
 8005e12:	9805      	ldr	r0, [sp, #20]
 8005e14:	f001 fc10 	bl	8007638 <_Bfree>
 8005e18:	9906      	ldr	r1, [sp, #24]
 8005e1a:	9805      	ldr	r0, [sp, #20]
 8005e1c:	f001 fc0c 	bl	8007638 <_Bfree>
 8005e20:	e61d      	b.n	8005a5e <_strtod_l+0x6a6>
 8005e22:	2e00      	cmp	r6, #0
 8005e24:	d11c      	bne.n	8005e60 <_strtod_l+0xaa8>
 8005e26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e28:	031b      	lsls	r3, r3, #12
 8005e2a:	d11f      	bne.n	8005e6c <_strtod_l+0xab4>
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	0020      	movs	r0, r4
 8005e30:	0029      	movs	r1, r5
 8005e32:	4b5d      	ldr	r3, [pc, #372]	; (8005fa8 <_strtod_l+0xbf0>)
 8005e34:	f7fa fb10 	bl	8000458 <__aeabi_dcmplt>
 8005e38:	2800      	cmp	r0, #0
 8005e3a:	d11a      	bne.n	8005e72 <_strtod_l+0xaba>
 8005e3c:	0020      	movs	r0, r4
 8005e3e:	0029      	movs	r1, r5
 8005e40:	2200      	movs	r2, #0
 8005e42:	4b5f      	ldr	r3, [pc, #380]	; (8005fc0 <_strtod_l+0xc08>)
 8005e44:	f7fb fade 	bl	8001404 <__aeabi_dmul>
 8005e48:	0005      	movs	r5, r0
 8005e4a:	000c      	movs	r4, r1
 8005e4c:	2380      	movs	r3, #128	; 0x80
 8005e4e:	061b      	lsls	r3, r3, #24
 8005e50:	18e3      	adds	r3, r4, r3
 8005e52:	951c      	str	r5, [sp, #112]	; 0x70
 8005e54:	931d      	str	r3, [sp, #116]	; 0x74
 8005e56:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8005e58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005e5a:	9210      	str	r2, [sp, #64]	; 0x40
 8005e5c:	9311      	str	r3, [sp, #68]	; 0x44
 8005e5e:	e79e      	b.n	8005d9e <_strtod_l+0x9e6>
 8005e60:	2e01      	cmp	r6, #1
 8005e62:	d103      	bne.n	8005e6c <_strtod_l+0xab4>
 8005e64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e66:	2b00      	cmp	r3, #0
 8005e68:	d100      	bne.n	8005e6c <_strtod_l+0xab4>
 8005e6a:	e582      	b.n	8005972 <_strtod_l+0x5ba>
 8005e6c:	2300      	movs	r3, #0
 8005e6e:	4c55      	ldr	r4, [pc, #340]	; (8005fc4 <_strtod_l+0xc0c>)
 8005e70:	e791      	b.n	8005d96 <_strtod_l+0x9de>
 8005e72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005e74:	4c52      	ldr	r4, [pc, #328]	; (8005fc0 <_strtod_l+0xc08>)
 8005e76:	e7e9      	b.n	8005e4c <_strtod_l+0xa94>
 8005e78:	2200      	movs	r2, #0
 8005e7a:	0020      	movs	r0, r4
 8005e7c:	0029      	movs	r1, r5
 8005e7e:	4b50      	ldr	r3, [pc, #320]	; (8005fc0 <_strtod_l+0xc08>)
 8005e80:	f7fb fac0 	bl	8001404 <__aeabi_dmul>
 8005e84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005e86:	0005      	movs	r5, r0
 8005e88:	000b      	movs	r3, r1
 8005e8a:	000c      	movs	r4, r1
 8005e8c:	2a00      	cmp	r2, #0
 8005e8e:	d107      	bne.n	8005ea0 <_strtod_l+0xae8>
 8005e90:	2280      	movs	r2, #128	; 0x80
 8005e92:	0612      	lsls	r2, r2, #24
 8005e94:	188b      	adds	r3, r1, r2
 8005e96:	9016      	str	r0, [sp, #88]	; 0x58
 8005e98:	9317      	str	r3, [sp, #92]	; 0x5c
 8005e9a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8005e9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005e9e:	e7dc      	b.n	8005e5a <_strtod_l+0xaa2>
 8005ea0:	0002      	movs	r2, r0
 8005ea2:	9216      	str	r2, [sp, #88]	; 0x58
 8005ea4:	9317      	str	r3, [sp, #92]	; 0x5c
 8005ea6:	e7f8      	b.n	8005e9a <_strtod_l+0xae2>
 8005ea8:	23d4      	movs	r3, #212	; 0xd4
 8005eaa:	049b      	lsls	r3, r3, #18
 8005eac:	18cf      	adds	r7, r1, r3
 8005eae:	9b08      	ldr	r3, [sp, #32]
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d1a5      	bne.n	8005e00 <_strtod_l+0xa48>
 8005eb4:	4b3d      	ldr	r3, [pc, #244]	; (8005fac <_strtod_l+0xbf4>)
 8005eb6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005eb8:	403b      	ands	r3, r7
 8005eba:	429a      	cmp	r2, r3
 8005ebc:	d1a0      	bne.n	8005e00 <_strtod_l+0xa48>
 8005ebe:	0028      	movs	r0, r5
 8005ec0:	0021      	movs	r1, r4
 8005ec2:	f7fa fb0f 	bl	80004e4 <__aeabi_d2lz>
 8005ec6:	f7fa fb49 	bl	800055c <__aeabi_l2d>
 8005eca:	0002      	movs	r2, r0
 8005ecc:	000b      	movs	r3, r1
 8005ece:	0028      	movs	r0, r5
 8005ed0:	0021      	movs	r1, r4
 8005ed2:	f7fb fd03 	bl	80018dc <__aeabi_dsub>
 8005ed6:	033b      	lsls	r3, r7, #12
 8005ed8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005eda:	0b1b      	lsrs	r3, r3, #12
 8005edc:	4333      	orrs	r3, r6
 8005ede:	4313      	orrs	r3, r2
 8005ee0:	0004      	movs	r4, r0
 8005ee2:	000d      	movs	r5, r1
 8005ee4:	4a38      	ldr	r2, [pc, #224]	; (8005fc8 <_strtod_l+0xc10>)
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d055      	beq.n	8005f96 <_strtod_l+0xbde>
 8005eea:	4b38      	ldr	r3, [pc, #224]	; (8005fcc <_strtod_l+0xc14>)
 8005eec:	f7fa fab4 	bl	8000458 <__aeabi_dcmplt>
 8005ef0:	2800      	cmp	r0, #0
 8005ef2:	d000      	beq.n	8005ef6 <_strtod_l+0xb3e>
 8005ef4:	e4d3      	b.n	800589e <_strtod_l+0x4e6>
 8005ef6:	0020      	movs	r0, r4
 8005ef8:	0029      	movs	r1, r5
 8005efa:	4a35      	ldr	r2, [pc, #212]	; (8005fd0 <_strtod_l+0xc18>)
 8005efc:	4b30      	ldr	r3, [pc, #192]	; (8005fc0 <_strtod_l+0xc08>)
 8005efe:	f7fa fabf 	bl	8000480 <__aeabi_dcmpgt>
 8005f02:	2800      	cmp	r0, #0
 8005f04:	d100      	bne.n	8005f08 <_strtod_l+0xb50>
 8005f06:	e77b      	b.n	8005e00 <_strtod_l+0xa48>
 8005f08:	e4c9      	b.n	800589e <_strtod_l+0x4e6>
 8005f0a:	9b08      	ldr	r3, [sp, #32]
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d02b      	beq.n	8005f68 <_strtod_l+0xbb0>
 8005f10:	23d4      	movs	r3, #212	; 0xd4
 8005f12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005f14:	04db      	lsls	r3, r3, #19
 8005f16:	429a      	cmp	r2, r3
 8005f18:	d826      	bhi.n	8005f68 <_strtod_l+0xbb0>
 8005f1a:	0028      	movs	r0, r5
 8005f1c:	0021      	movs	r1, r4
 8005f1e:	4a2d      	ldr	r2, [pc, #180]	; (8005fd4 <_strtod_l+0xc1c>)
 8005f20:	4b2d      	ldr	r3, [pc, #180]	; (8005fd8 <_strtod_l+0xc20>)
 8005f22:	f7fa faa3 	bl	800046c <__aeabi_dcmple>
 8005f26:	2800      	cmp	r0, #0
 8005f28:	d017      	beq.n	8005f5a <_strtod_l+0xba2>
 8005f2a:	0028      	movs	r0, r5
 8005f2c:	0021      	movs	r1, r4
 8005f2e:	f7fa fabb 	bl	80004a8 <__aeabi_d2uiz>
 8005f32:	2800      	cmp	r0, #0
 8005f34:	d100      	bne.n	8005f38 <_strtod_l+0xb80>
 8005f36:	3001      	adds	r0, #1
 8005f38:	f7fc f8e6 	bl	8002108 <__aeabi_ui2d>
 8005f3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005f3e:	0005      	movs	r5, r0
 8005f40:	000b      	movs	r3, r1
 8005f42:	000c      	movs	r4, r1
 8005f44:	2a00      	cmp	r2, #0
 8005f46:	d122      	bne.n	8005f8e <_strtod_l+0xbd6>
 8005f48:	2280      	movs	r2, #128	; 0x80
 8005f4a:	0612      	lsls	r2, r2, #24
 8005f4c:	188b      	adds	r3, r1, r2
 8005f4e:	9018      	str	r0, [sp, #96]	; 0x60
 8005f50:	9319      	str	r3, [sp, #100]	; 0x64
 8005f52:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005f54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005f56:	9210      	str	r2, [sp, #64]	; 0x40
 8005f58:	9311      	str	r3, [sp, #68]	; 0x44
 8005f5a:	22d6      	movs	r2, #214	; 0xd6
 8005f5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005f5e:	04d2      	lsls	r2, r2, #19
 8005f60:	189b      	adds	r3, r3, r2
 8005f62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005f64:	1a9b      	subs	r3, r3, r2
 8005f66:	9311      	str	r3, [sp, #68]	; 0x44
 8005f68:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005f6a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005f6c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8005f6e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8005f70:	f001 fea2 	bl	8007cb8 <__ulp>
 8005f74:	0002      	movs	r2, r0
 8005f76:	000b      	movs	r3, r1
 8005f78:	0030      	movs	r0, r6
 8005f7a:	0039      	movs	r1, r7
 8005f7c:	f7fb fa42 	bl	8001404 <__aeabi_dmul>
 8005f80:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005f82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005f84:	f7fa fb00 	bl	8000588 <__aeabi_dadd>
 8005f88:	0006      	movs	r6, r0
 8005f8a:	000f      	movs	r7, r1
 8005f8c:	e78f      	b.n	8005eae <_strtod_l+0xaf6>
 8005f8e:	0002      	movs	r2, r0
 8005f90:	9218      	str	r2, [sp, #96]	; 0x60
 8005f92:	9319      	str	r3, [sp, #100]	; 0x64
 8005f94:	e7dd      	b.n	8005f52 <_strtod_l+0xb9a>
 8005f96:	4b11      	ldr	r3, [pc, #68]	; (8005fdc <_strtod_l+0xc24>)
 8005f98:	f7fa fa5e 	bl	8000458 <__aeabi_dcmplt>
 8005f9c:	e7b1      	b.n	8005f02 <_strtod_l+0xb4a>
 8005f9e:	46c0      	nop			; (mov r8, r8)
 8005fa0:	fff00000 	.word	0xfff00000
 8005fa4:	000fffff 	.word	0x000fffff
 8005fa8:	3ff00000 	.word	0x3ff00000
 8005fac:	7ff00000 	.word	0x7ff00000
 8005fb0:	7fe00000 	.word	0x7fe00000
 8005fb4:	fcb00000 	.word	0xfcb00000
 8005fb8:	7c9fffff 	.word	0x7c9fffff
 8005fbc:	7fefffff 	.word	0x7fefffff
 8005fc0:	3fe00000 	.word	0x3fe00000
 8005fc4:	bff00000 	.word	0xbff00000
 8005fc8:	94a03595 	.word	0x94a03595
 8005fcc:	3fdfffff 	.word	0x3fdfffff
 8005fd0:	35afe535 	.word	0x35afe535
 8005fd4:	ffc00000 	.word	0xffc00000
 8005fd8:	41dfffff 	.word	0x41dfffff
 8005fdc:	3fcfffff 	.word	0x3fcfffff

08005fe0 <_strtod_r>:
 8005fe0:	b510      	push	{r4, lr}
 8005fe2:	4b02      	ldr	r3, [pc, #8]	; (8005fec <_strtod_r+0xc>)
 8005fe4:	f7ff f9e8 	bl	80053b8 <_strtod_l>
 8005fe8:	bd10      	pop	{r4, pc}
 8005fea:	46c0      	nop			; (mov r8, r8)
 8005fec:	20000074 	.word	0x20000074

08005ff0 <_strtol_l.constprop.0>:
 8005ff0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ff2:	b087      	sub	sp, #28
 8005ff4:	001e      	movs	r6, r3
 8005ff6:	9005      	str	r0, [sp, #20]
 8005ff8:	9101      	str	r1, [sp, #4]
 8005ffa:	9202      	str	r2, [sp, #8]
 8005ffc:	2b01      	cmp	r3, #1
 8005ffe:	d045      	beq.n	800608c <_strtol_l.constprop.0+0x9c>
 8006000:	000b      	movs	r3, r1
 8006002:	2e24      	cmp	r6, #36	; 0x24
 8006004:	d842      	bhi.n	800608c <_strtol_l.constprop.0+0x9c>
 8006006:	4a3f      	ldr	r2, [pc, #252]	; (8006104 <_strtol_l.constprop.0+0x114>)
 8006008:	2108      	movs	r1, #8
 800600a:	4694      	mov	ip, r2
 800600c:	001a      	movs	r2, r3
 800600e:	4660      	mov	r0, ip
 8006010:	7814      	ldrb	r4, [r2, #0]
 8006012:	3301      	adds	r3, #1
 8006014:	5d00      	ldrb	r0, [r0, r4]
 8006016:	001d      	movs	r5, r3
 8006018:	0007      	movs	r7, r0
 800601a:	400f      	ands	r7, r1
 800601c:	4208      	tst	r0, r1
 800601e:	d1f5      	bne.n	800600c <_strtol_l.constprop.0+0x1c>
 8006020:	2c2d      	cmp	r4, #45	; 0x2d
 8006022:	d13a      	bne.n	800609a <_strtol_l.constprop.0+0xaa>
 8006024:	2701      	movs	r7, #1
 8006026:	781c      	ldrb	r4, [r3, #0]
 8006028:	1c95      	adds	r5, r2, #2
 800602a:	2e00      	cmp	r6, #0
 800602c:	d065      	beq.n	80060fa <_strtol_l.constprop.0+0x10a>
 800602e:	2e10      	cmp	r6, #16
 8006030:	d109      	bne.n	8006046 <_strtol_l.constprop.0+0x56>
 8006032:	2c30      	cmp	r4, #48	; 0x30
 8006034:	d107      	bne.n	8006046 <_strtol_l.constprop.0+0x56>
 8006036:	2220      	movs	r2, #32
 8006038:	782b      	ldrb	r3, [r5, #0]
 800603a:	4393      	bics	r3, r2
 800603c:	2b58      	cmp	r3, #88	; 0x58
 800603e:	d157      	bne.n	80060f0 <_strtol_l.constprop.0+0x100>
 8006040:	2610      	movs	r6, #16
 8006042:	786c      	ldrb	r4, [r5, #1]
 8006044:	3502      	adds	r5, #2
 8006046:	4b30      	ldr	r3, [pc, #192]	; (8006108 <_strtol_l.constprop.0+0x118>)
 8006048:	0031      	movs	r1, r6
 800604a:	18fb      	adds	r3, r7, r3
 800604c:	0018      	movs	r0, r3
 800604e:	9303      	str	r3, [sp, #12]
 8006050:	f7fa f8fc 	bl	800024c <__aeabi_uidivmod>
 8006054:	2300      	movs	r3, #0
 8006056:	2201      	movs	r2, #1
 8006058:	4684      	mov	ip, r0
 800605a:	0018      	movs	r0, r3
 800605c:	9104      	str	r1, [sp, #16]
 800605e:	4252      	negs	r2, r2
 8006060:	0021      	movs	r1, r4
 8006062:	3930      	subs	r1, #48	; 0x30
 8006064:	2909      	cmp	r1, #9
 8006066:	d81d      	bhi.n	80060a4 <_strtol_l.constprop.0+0xb4>
 8006068:	000c      	movs	r4, r1
 800606a:	42a6      	cmp	r6, r4
 800606c:	dd28      	ble.n	80060c0 <_strtol_l.constprop.0+0xd0>
 800606e:	2b00      	cmp	r3, #0
 8006070:	db24      	blt.n	80060bc <_strtol_l.constprop.0+0xcc>
 8006072:	0013      	movs	r3, r2
 8006074:	4584      	cmp	ip, r0
 8006076:	d306      	bcc.n	8006086 <_strtol_l.constprop.0+0x96>
 8006078:	d102      	bne.n	8006080 <_strtol_l.constprop.0+0x90>
 800607a:	9904      	ldr	r1, [sp, #16]
 800607c:	42a1      	cmp	r1, r4
 800607e:	db02      	blt.n	8006086 <_strtol_l.constprop.0+0x96>
 8006080:	2301      	movs	r3, #1
 8006082:	4370      	muls	r0, r6
 8006084:	1820      	adds	r0, r4, r0
 8006086:	782c      	ldrb	r4, [r5, #0]
 8006088:	3501      	adds	r5, #1
 800608a:	e7e9      	b.n	8006060 <_strtol_l.constprop.0+0x70>
 800608c:	f7fe fab0 	bl	80045f0 <__errno>
 8006090:	2316      	movs	r3, #22
 8006092:	6003      	str	r3, [r0, #0]
 8006094:	2000      	movs	r0, #0
 8006096:	b007      	add	sp, #28
 8006098:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800609a:	2c2b      	cmp	r4, #43	; 0x2b
 800609c:	d1c5      	bne.n	800602a <_strtol_l.constprop.0+0x3a>
 800609e:	781c      	ldrb	r4, [r3, #0]
 80060a0:	1c95      	adds	r5, r2, #2
 80060a2:	e7c2      	b.n	800602a <_strtol_l.constprop.0+0x3a>
 80060a4:	0021      	movs	r1, r4
 80060a6:	3941      	subs	r1, #65	; 0x41
 80060a8:	2919      	cmp	r1, #25
 80060aa:	d801      	bhi.n	80060b0 <_strtol_l.constprop.0+0xc0>
 80060ac:	3c37      	subs	r4, #55	; 0x37
 80060ae:	e7dc      	b.n	800606a <_strtol_l.constprop.0+0x7a>
 80060b0:	0021      	movs	r1, r4
 80060b2:	3961      	subs	r1, #97	; 0x61
 80060b4:	2919      	cmp	r1, #25
 80060b6:	d803      	bhi.n	80060c0 <_strtol_l.constprop.0+0xd0>
 80060b8:	3c57      	subs	r4, #87	; 0x57
 80060ba:	e7d6      	b.n	800606a <_strtol_l.constprop.0+0x7a>
 80060bc:	0013      	movs	r3, r2
 80060be:	e7e2      	b.n	8006086 <_strtol_l.constprop.0+0x96>
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	da09      	bge.n	80060d8 <_strtol_l.constprop.0+0xe8>
 80060c4:	2322      	movs	r3, #34	; 0x22
 80060c6:	9a05      	ldr	r2, [sp, #20]
 80060c8:	9803      	ldr	r0, [sp, #12]
 80060ca:	6013      	str	r3, [r2, #0]
 80060cc:	9b02      	ldr	r3, [sp, #8]
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	d0e1      	beq.n	8006096 <_strtol_l.constprop.0+0xa6>
 80060d2:	1e6b      	subs	r3, r5, #1
 80060d4:	9301      	str	r3, [sp, #4]
 80060d6:	e007      	b.n	80060e8 <_strtol_l.constprop.0+0xf8>
 80060d8:	2f00      	cmp	r7, #0
 80060da:	d000      	beq.n	80060de <_strtol_l.constprop.0+0xee>
 80060dc:	4240      	negs	r0, r0
 80060de:	9a02      	ldr	r2, [sp, #8]
 80060e0:	2a00      	cmp	r2, #0
 80060e2:	d0d8      	beq.n	8006096 <_strtol_l.constprop.0+0xa6>
 80060e4:	2b00      	cmp	r3, #0
 80060e6:	d1f4      	bne.n	80060d2 <_strtol_l.constprop.0+0xe2>
 80060e8:	9b02      	ldr	r3, [sp, #8]
 80060ea:	9a01      	ldr	r2, [sp, #4]
 80060ec:	601a      	str	r2, [r3, #0]
 80060ee:	e7d2      	b.n	8006096 <_strtol_l.constprop.0+0xa6>
 80060f0:	2430      	movs	r4, #48	; 0x30
 80060f2:	2e00      	cmp	r6, #0
 80060f4:	d1a7      	bne.n	8006046 <_strtol_l.constprop.0+0x56>
 80060f6:	3608      	adds	r6, #8
 80060f8:	e7a5      	b.n	8006046 <_strtol_l.constprop.0+0x56>
 80060fa:	2c30      	cmp	r4, #48	; 0x30
 80060fc:	d09b      	beq.n	8006036 <_strtol_l.constprop.0+0x46>
 80060fe:	260a      	movs	r6, #10
 8006100:	e7a1      	b.n	8006046 <_strtol_l.constprop.0+0x56>
 8006102:	46c0      	nop			; (mov r8, r8)
 8006104:	08009201 	.word	0x08009201
 8006108:	7fffffff 	.word	0x7fffffff

0800610c <_strtol_r>:
 800610c:	b510      	push	{r4, lr}
 800610e:	f7ff ff6f 	bl	8005ff0 <_strtol_l.constprop.0>
 8006112:	bd10      	pop	{r4, pc}

08006114 <quorem>:
 8006114:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006116:	0006      	movs	r6, r0
 8006118:	690b      	ldr	r3, [r1, #16]
 800611a:	6932      	ldr	r2, [r6, #16]
 800611c:	b087      	sub	sp, #28
 800611e:	2000      	movs	r0, #0
 8006120:	9103      	str	r1, [sp, #12]
 8006122:	429a      	cmp	r2, r3
 8006124:	db65      	blt.n	80061f2 <quorem+0xde>
 8006126:	3b01      	subs	r3, #1
 8006128:	009c      	lsls	r4, r3, #2
 800612a:	9300      	str	r3, [sp, #0]
 800612c:	000b      	movs	r3, r1
 800612e:	3314      	adds	r3, #20
 8006130:	9305      	str	r3, [sp, #20]
 8006132:	191b      	adds	r3, r3, r4
 8006134:	9304      	str	r3, [sp, #16]
 8006136:	0033      	movs	r3, r6
 8006138:	3314      	adds	r3, #20
 800613a:	9302      	str	r3, [sp, #8]
 800613c:	191c      	adds	r4, r3, r4
 800613e:	9b04      	ldr	r3, [sp, #16]
 8006140:	6827      	ldr	r7, [r4, #0]
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	0038      	movs	r0, r7
 8006146:	1c5d      	adds	r5, r3, #1
 8006148:	0029      	movs	r1, r5
 800614a:	9301      	str	r3, [sp, #4]
 800614c:	f7f9 fff8 	bl	8000140 <__udivsi3>
 8006150:	9001      	str	r0, [sp, #4]
 8006152:	42af      	cmp	r7, r5
 8006154:	d324      	bcc.n	80061a0 <quorem+0x8c>
 8006156:	2500      	movs	r5, #0
 8006158:	46ac      	mov	ip, r5
 800615a:	9802      	ldr	r0, [sp, #8]
 800615c:	9f05      	ldr	r7, [sp, #20]
 800615e:	cf08      	ldmia	r7!, {r3}
 8006160:	9a01      	ldr	r2, [sp, #4]
 8006162:	b299      	uxth	r1, r3
 8006164:	4351      	muls	r1, r2
 8006166:	0c1b      	lsrs	r3, r3, #16
 8006168:	4353      	muls	r3, r2
 800616a:	1949      	adds	r1, r1, r5
 800616c:	0c0a      	lsrs	r2, r1, #16
 800616e:	189b      	adds	r3, r3, r2
 8006170:	6802      	ldr	r2, [r0, #0]
 8006172:	b289      	uxth	r1, r1
 8006174:	b292      	uxth	r2, r2
 8006176:	4462      	add	r2, ip
 8006178:	1a52      	subs	r2, r2, r1
 800617a:	6801      	ldr	r1, [r0, #0]
 800617c:	0c1d      	lsrs	r5, r3, #16
 800617e:	0c09      	lsrs	r1, r1, #16
 8006180:	b29b      	uxth	r3, r3
 8006182:	1acb      	subs	r3, r1, r3
 8006184:	1411      	asrs	r1, r2, #16
 8006186:	185b      	adds	r3, r3, r1
 8006188:	1419      	asrs	r1, r3, #16
 800618a:	b292      	uxth	r2, r2
 800618c:	041b      	lsls	r3, r3, #16
 800618e:	431a      	orrs	r2, r3
 8006190:	9b04      	ldr	r3, [sp, #16]
 8006192:	468c      	mov	ip, r1
 8006194:	c004      	stmia	r0!, {r2}
 8006196:	42bb      	cmp	r3, r7
 8006198:	d2e1      	bcs.n	800615e <quorem+0x4a>
 800619a:	6823      	ldr	r3, [r4, #0]
 800619c:	2b00      	cmp	r3, #0
 800619e:	d030      	beq.n	8006202 <quorem+0xee>
 80061a0:	0030      	movs	r0, r6
 80061a2:	9903      	ldr	r1, [sp, #12]
 80061a4:	f001 fcd4 	bl	8007b50 <__mcmp>
 80061a8:	2800      	cmp	r0, #0
 80061aa:	db21      	blt.n	80061f0 <quorem+0xdc>
 80061ac:	0030      	movs	r0, r6
 80061ae:	2400      	movs	r4, #0
 80061b0:	9b01      	ldr	r3, [sp, #4]
 80061b2:	9903      	ldr	r1, [sp, #12]
 80061b4:	3301      	adds	r3, #1
 80061b6:	9301      	str	r3, [sp, #4]
 80061b8:	3014      	adds	r0, #20
 80061ba:	3114      	adds	r1, #20
 80061bc:	6803      	ldr	r3, [r0, #0]
 80061be:	c920      	ldmia	r1!, {r5}
 80061c0:	b29a      	uxth	r2, r3
 80061c2:	1914      	adds	r4, r2, r4
 80061c4:	b2aa      	uxth	r2, r5
 80061c6:	1aa2      	subs	r2, r4, r2
 80061c8:	0c1b      	lsrs	r3, r3, #16
 80061ca:	0c2d      	lsrs	r5, r5, #16
 80061cc:	1414      	asrs	r4, r2, #16
 80061ce:	1b5b      	subs	r3, r3, r5
 80061d0:	191b      	adds	r3, r3, r4
 80061d2:	141c      	asrs	r4, r3, #16
 80061d4:	b292      	uxth	r2, r2
 80061d6:	041b      	lsls	r3, r3, #16
 80061d8:	4313      	orrs	r3, r2
 80061da:	c008      	stmia	r0!, {r3}
 80061dc:	9b04      	ldr	r3, [sp, #16]
 80061de:	428b      	cmp	r3, r1
 80061e0:	d2ec      	bcs.n	80061bc <quorem+0xa8>
 80061e2:	9b00      	ldr	r3, [sp, #0]
 80061e4:	9a02      	ldr	r2, [sp, #8]
 80061e6:	009b      	lsls	r3, r3, #2
 80061e8:	18d3      	adds	r3, r2, r3
 80061ea:	681a      	ldr	r2, [r3, #0]
 80061ec:	2a00      	cmp	r2, #0
 80061ee:	d015      	beq.n	800621c <quorem+0x108>
 80061f0:	9801      	ldr	r0, [sp, #4]
 80061f2:	b007      	add	sp, #28
 80061f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80061f6:	6823      	ldr	r3, [r4, #0]
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d106      	bne.n	800620a <quorem+0xf6>
 80061fc:	9b00      	ldr	r3, [sp, #0]
 80061fe:	3b01      	subs	r3, #1
 8006200:	9300      	str	r3, [sp, #0]
 8006202:	9b02      	ldr	r3, [sp, #8]
 8006204:	3c04      	subs	r4, #4
 8006206:	42a3      	cmp	r3, r4
 8006208:	d3f5      	bcc.n	80061f6 <quorem+0xe2>
 800620a:	9b00      	ldr	r3, [sp, #0]
 800620c:	6133      	str	r3, [r6, #16]
 800620e:	e7c7      	b.n	80061a0 <quorem+0x8c>
 8006210:	681a      	ldr	r2, [r3, #0]
 8006212:	2a00      	cmp	r2, #0
 8006214:	d106      	bne.n	8006224 <quorem+0x110>
 8006216:	9a00      	ldr	r2, [sp, #0]
 8006218:	3a01      	subs	r2, #1
 800621a:	9200      	str	r2, [sp, #0]
 800621c:	9a02      	ldr	r2, [sp, #8]
 800621e:	3b04      	subs	r3, #4
 8006220:	429a      	cmp	r2, r3
 8006222:	d3f5      	bcc.n	8006210 <quorem+0xfc>
 8006224:	9b00      	ldr	r3, [sp, #0]
 8006226:	6133      	str	r3, [r6, #16]
 8006228:	e7e2      	b.n	80061f0 <quorem+0xdc>
	...

0800622c <_dtoa_r>:
 800622c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800622e:	b09d      	sub	sp, #116	; 0x74
 8006230:	9202      	str	r2, [sp, #8]
 8006232:	9303      	str	r3, [sp, #12]
 8006234:	9b02      	ldr	r3, [sp, #8]
 8006236:	9c03      	ldr	r4, [sp, #12]
 8006238:	9308      	str	r3, [sp, #32]
 800623a:	9409      	str	r4, [sp, #36]	; 0x24
 800623c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800623e:	0007      	movs	r7, r0
 8006240:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8006242:	2c00      	cmp	r4, #0
 8006244:	d10e      	bne.n	8006264 <_dtoa_r+0x38>
 8006246:	2010      	movs	r0, #16
 8006248:	f001 f982 	bl	8007550 <malloc>
 800624c:	1e02      	subs	r2, r0, #0
 800624e:	6278      	str	r0, [r7, #36]	; 0x24
 8006250:	d104      	bne.n	800625c <_dtoa_r+0x30>
 8006252:	21ea      	movs	r1, #234	; 0xea
 8006254:	4bc7      	ldr	r3, [pc, #796]	; (8006574 <_dtoa_r+0x348>)
 8006256:	48c8      	ldr	r0, [pc, #800]	; (8006578 <_dtoa_r+0x34c>)
 8006258:	f002 f91c 	bl	8008494 <__assert_func>
 800625c:	6044      	str	r4, [r0, #4]
 800625e:	6084      	str	r4, [r0, #8]
 8006260:	6004      	str	r4, [r0, #0]
 8006262:	60c4      	str	r4, [r0, #12]
 8006264:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006266:	6819      	ldr	r1, [r3, #0]
 8006268:	2900      	cmp	r1, #0
 800626a:	d00a      	beq.n	8006282 <_dtoa_r+0x56>
 800626c:	685a      	ldr	r2, [r3, #4]
 800626e:	2301      	movs	r3, #1
 8006270:	4093      	lsls	r3, r2
 8006272:	604a      	str	r2, [r1, #4]
 8006274:	608b      	str	r3, [r1, #8]
 8006276:	0038      	movs	r0, r7
 8006278:	f001 f9de 	bl	8007638 <_Bfree>
 800627c:	2200      	movs	r2, #0
 800627e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006280:	601a      	str	r2, [r3, #0]
 8006282:	9b03      	ldr	r3, [sp, #12]
 8006284:	2b00      	cmp	r3, #0
 8006286:	da20      	bge.n	80062ca <_dtoa_r+0x9e>
 8006288:	2301      	movs	r3, #1
 800628a:	602b      	str	r3, [r5, #0]
 800628c:	9b03      	ldr	r3, [sp, #12]
 800628e:	005b      	lsls	r3, r3, #1
 8006290:	085b      	lsrs	r3, r3, #1
 8006292:	9309      	str	r3, [sp, #36]	; 0x24
 8006294:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006296:	4bb9      	ldr	r3, [pc, #740]	; (800657c <_dtoa_r+0x350>)
 8006298:	4ab8      	ldr	r2, [pc, #736]	; (800657c <_dtoa_r+0x350>)
 800629a:	402b      	ands	r3, r5
 800629c:	4293      	cmp	r3, r2
 800629e:	d117      	bne.n	80062d0 <_dtoa_r+0xa4>
 80062a0:	4bb7      	ldr	r3, [pc, #732]	; (8006580 <_dtoa_r+0x354>)
 80062a2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80062a4:	0328      	lsls	r0, r5, #12
 80062a6:	6013      	str	r3, [r2, #0]
 80062a8:	9b02      	ldr	r3, [sp, #8]
 80062aa:	0b00      	lsrs	r0, r0, #12
 80062ac:	4318      	orrs	r0, r3
 80062ae:	d101      	bne.n	80062b4 <_dtoa_r+0x88>
 80062b0:	f000 fdbf 	bl	8006e32 <_dtoa_r+0xc06>
 80062b4:	48b3      	ldr	r0, [pc, #716]	; (8006584 <_dtoa_r+0x358>)
 80062b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80062b8:	9006      	str	r0, [sp, #24]
 80062ba:	2b00      	cmp	r3, #0
 80062bc:	d002      	beq.n	80062c4 <_dtoa_r+0x98>
 80062be:	4bb2      	ldr	r3, [pc, #712]	; (8006588 <_dtoa_r+0x35c>)
 80062c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80062c2:	6013      	str	r3, [r2, #0]
 80062c4:	9806      	ldr	r0, [sp, #24]
 80062c6:	b01d      	add	sp, #116	; 0x74
 80062c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062ca:	2300      	movs	r3, #0
 80062cc:	602b      	str	r3, [r5, #0]
 80062ce:	e7e1      	b.n	8006294 <_dtoa_r+0x68>
 80062d0:	9b08      	ldr	r3, [sp, #32]
 80062d2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80062d4:	9312      	str	r3, [sp, #72]	; 0x48
 80062d6:	9413      	str	r4, [sp, #76]	; 0x4c
 80062d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80062da:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80062dc:	2200      	movs	r2, #0
 80062de:	2300      	movs	r3, #0
 80062e0:	f7fa f8b4 	bl	800044c <__aeabi_dcmpeq>
 80062e4:	1e04      	subs	r4, r0, #0
 80062e6:	d009      	beq.n	80062fc <_dtoa_r+0xd0>
 80062e8:	2301      	movs	r3, #1
 80062ea:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80062ec:	6013      	str	r3, [r2, #0]
 80062ee:	4ba7      	ldr	r3, [pc, #668]	; (800658c <_dtoa_r+0x360>)
 80062f0:	9306      	str	r3, [sp, #24]
 80062f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	d0e5      	beq.n	80062c4 <_dtoa_r+0x98>
 80062f8:	4ba5      	ldr	r3, [pc, #660]	; (8006590 <_dtoa_r+0x364>)
 80062fa:	e7e1      	b.n	80062c0 <_dtoa_r+0x94>
 80062fc:	ab1a      	add	r3, sp, #104	; 0x68
 80062fe:	9301      	str	r3, [sp, #4]
 8006300:	ab1b      	add	r3, sp, #108	; 0x6c
 8006302:	9300      	str	r3, [sp, #0]
 8006304:	0038      	movs	r0, r7
 8006306:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006308:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800630a:	f001 fd49 	bl	8007da0 <__d2b>
 800630e:	006e      	lsls	r6, r5, #1
 8006310:	9005      	str	r0, [sp, #20]
 8006312:	0d76      	lsrs	r6, r6, #21
 8006314:	d100      	bne.n	8006318 <_dtoa_r+0xec>
 8006316:	e07c      	b.n	8006412 <_dtoa_r+0x1e6>
 8006318:	9812      	ldr	r0, [sp, #72]	; 0x48
 800631a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800631c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800631e:	4a9d      	ldr	r2, [pc, #628]	; (8006594 <_dtoa_r+0x368>)
 8006320:	031b      	lsls	r3, r3, #12
 8006322:	0b1b      	lsrs	r3, r3, #12
 8006324:	431a      	orrs	r2, r3
 8006326:	0011      	movs	r1, r2
 8006328:	4b9b      	ldr	r3, [pc, #620]	; (8006598 <_dtoa_r+0x36c>)
 800632a:	9418      	str	r4, [sp, #96]	; 0x60
 800632c:	18f6      	adds	r6, r6, r3
 800632e:	2200      	movs	r2, #0
 8006330:	4b9a      	ldr	r3, [pc, #616]	; (800659c <_dtoa_r+0x370>)
 8006332:	f7fb fad3 	bl	80018dc <__aeabi_dsub>
 8006336:	4a9a      	ldr	r2, [pc, #616]	; (80065a0 <_dtoa_r+0x374>)
 8006338:	4b9a      	ldr	r3, [pc, #616]	; (80065a4 <_dtoa_r+0x378>)
 800633a:	f7fb f863 	bl	8001404 <__aeabi_dmul>
 800633e:	4a9a      	ldr	r2, [pc, #616]	; (80065a8 <_dtoa_r+0x37c>)
 8006340:	4b9a      	ldr	r3, [pc, #616]	; (80065ac <_dtoa_r+0x380>)
 8006342:	f7fa f921 	bl	8000588 <__aeabi_dadd>
 8006346:	0004      	movs	r4, r0
 8006348:	0030      	movs	r0, r6
 800634a:	000d      	movs	r5, r1
 800634c:	f7fb feac 	bl	80020a8 <__aeabi_i2d>
 8006350:	4a97      	ldr	r2, [pc, #604]	; (80065b0 <_dtoa_r+0x384>)
 8006352:	4b98      	ldr	r3, [pc, #608]	; (80065b4 <_dtoa_r+0x388>)
 8006354:	f7fb f856 	bl	8001404 <__aeabi_dmul>
 8006358:	0002      	movs	r2, r0
 800635a:	000b      	movs	r3, r1
 800635c:	0020      	movs	r0, r4
 800635e:	0029      	movs	r1, r5
 8006360:	f7fa f912 	bl	8000588 <__aeabi_dadd>
 8006364:	0004      	movs	r4, r0
 8006366:	000d      	movs	r5, r1
 8006368:	f7fb fe68 	bl	800203c <__aeabi_d2iz>
 800636c:	2200      	movs	r2, #0
 800636e:	9002      	str	r0, [sp, #8]
 8006370:	2300      	movs	r3, #0
 8006372:	0020      	movs	r0, r4
 8006374:	0029      	movs	r1, r5
 8006376:	f7fa f86f 	bl	8000458 <__aeabi_dcmplt>
 800637a:	2800      	cmp	r0, #0
 800637c:	d00b      	beq.n	8006396 <_dtoa_r+0x16a>
 800637e:	9802      	ldr	r0, [sp, #8]
 8006380:	f7fb fe92 	bl	80020a8 <__aeabi_i2d>
 8006384:	002b      	movs	r3, r5
 8006386:	0022      	movs	r2, r4
 8006388:	f7fa f860 	bl	800044c <__aeabi_dcmpeq>
 800638c:	4243      	negs	r3, r0
 800638e:	4158      	adcs	r0, r3
 8006390:	9b02      	ldr	r3, [sp, #8]
 8006392:	1a1b      	subs	r3, r3, r0
 8006394:	9302      	str	r3, [sp, #8]
 8006396:	2301      	movs	r3, #1
 8006398:	9316      	str	r3, [sp, #88]	; 0x58
 800639a:	9b02      	ldr	r3, [sp, #8]
 800639c:	2b16      	cmp	r3, #22
 800639e:	d80f      	bhi.n	80063c0 <_dtoa_r+0x194>
 80063a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80063a2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80063a4:	00da      	lsls	r2, r3, #3
 80063a6:	4b84      	ldr	r3, [pc, #528]	; (80065b8 <_dtoa_r+0x38c>)
 80063a8:	189b      	adds	r3, r3, r2
 80063aa:	681a      	ldr	r2, [r3, #0]
 80063ac:	685b      	ldr	r3, [r3, #4]
 80063ae:	f7fa f853 	bl	8000458 <__aeabi_dcmplt>
 80063b2:	2800      	cmp	r0, #0
 80063b4:	d049      	beq.n	800644a <_dtoa_r+0x21e>
 80063b6:	9b02      	ldr	r3, [sp, #8]
 80063b8:	3b01      	subs	r3, #1
 80063ba:	9302      	str	r3, [sp, #8]
 80063bc:	2300      	movs	r3, #0
 80063be:	9316      	str	r3, [sp, #88]	; 0x58
 80063c0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80063c2:	1b9e      	subs	r6, r3, r6
 80063c4:	2300      	movs	r3, #0
 80063c6:	930a      	str	r3, [sp, #40]	; 0x28
 80063c8:	0033      	movs	r3, r6
 80063ca:	3b01      	subs	r3, #1
 80063cc:	930d      	str	r3, [sp, #52]	; 0x34
 80063ce:	d504      	bpl.n	80063da <_dtoa_r+0x1ae>
 80063d0:	2301      	movs	r3, #1
 80063d2:	1b9b      	subs	r3, r3, r6
 80063d4:	930a      	str	r3, [sp, #40]	; 0x28
 80063d6:	2300      	movs	r3, #0
 80063d8:	930d      	str	r3, [sp, #52]	; 0x34
 80063da:	9b02      	ldr	r3, [sp, #8]
 80063dc:	2b00      	cmp	r3, #0
 80063de:	db36      	blt.n	800644e <_dtoa_r+0x222>
 80063e0:	9a02      	ldr	r2, [sp, #8]
 80063e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80063e4:	4694      	mov	ip, r2
 80063e6:	4463      	add	r3, ip
 80063e8:	930d      	str	r3, [sp, #52]	; 0x34
 80063ea:	2300      	movs	r3, #0
 80063ec:	9215      	str	r2, [sp, #84]	; 0x54
 80063ee:	930e      	str	r3, [sp, #56]	; 0x38
 80063f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80063f2:	2401      	movs	r4, #1
 80063f4:	2b09      	cmp	r3, #9
 80063f6:	d864      	bhi.n	80064c2 <_dtoa_r+0x296>
 80063f8:	2b05      	cmp	r3, #5
 80063fa:	dd02      	ble.n	8006402 <_dtoa_r+0x1d6>
 80063fc:	2400      	movs	r4, #0
 80063fe:	3b04      	subs	r3, #4
 8006400:	9322      	str	r3, [sp, #136]	; 0x88
 8006402:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006404:	1e98      	subs	r0, r3, #2
 8006406:	2803      	cmp	r0, #3
 8006408:	d864      	bhi.n	80064d4 <_dtoa_r+0x2a8>
 800640a:	f7f9 fe85 	bl	8000118 <__gnu_thumb1_case_uqi>
 800640e:	3829      	.short	0x3829
 8006410:	5836      	.short	0x5836
 8006412:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006414:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8006416:	189e      	adds	r6, r3, r2
 8006418:	4b68      	ldr	r3, [pc, #416]	; (80065bc <_dtoa_r+0x390>)
 800641a:	18f2      	adds	r2, r6, r3
 800641c:	2a20      	cmp	r2, #32
 800641e:	dd0f      	ble.n	8006440 <_dtoa_r+0x214>
 8006420:	2340      	movs	r3, #64	; 0x40
 8006422:	1a9b      	subs	r3, r3, r2
 8006424:	409d      	lsls	r5, r3
 8006426:	4b66      	ldr	r3, [pc, #408]	; (80065c0 <_dtoa_r+0x394>)
 8006428:	9802      	ldr	r0, [sp, #8]
 800642a:	18f3      	adds	r3, r6, r3
 800642c:	40d8      	lsrs	r0, r3
 800642e:	4328      	orrs	r0, r5
 8006430:	f7fb fe6a 	bl	8002108 <__aeabi_ui2d>
 8006434:	2301      	movs	r3, #1
 8006436:	4c63      	ldr	r4, [pc, #396]	; (80065c4 <_dtoa_r+0x398>)
 8006438:	3e01      	subs	r6, #1
 800643a:	1909      	adds	r1, r1, r4
 800643c:	9318      	str	r3, [sp, #96]	; 0x60
 800643e:	e776      	b.n	800632e <_dtoa_r+0x102>
 8006440:	2320      	movs	r3, #32
 8006442:	9802      	ldr	r0, [sp, #8]
 8006444:	1a9b      	subs	r3, r3, r2
 8006446:	4098      	lsls	r0, r3
 8006448:	e7f2      	b.n	8006430 <_dtoa_r+0x204>
 800644a:	9016      	str	r0, [sp, #88]	; 0x58
 800644c:	e7b8      	b.n	80063c0 <_dtoa_r+0x194>
 800644e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006450:	9a02      	ldr	r2, [sp, #8]
 8006452:	1a9b      	subs	r3, r3, r2
 8006454:	930a      	str	r3, [sp, #40]	; 0x28
 8006456:	4253      	negs	r3, r2
 8006458:	930e      	str	r3, [sp, #56]	; 0x38
 800645a:	2300      	movs	r3, #0
 800645c:	9315      	str	r3, [sp, #84]	; 0x54
 800645e:	e7c7      	b.n	80063f0 <_dtoa_r+0x1c4>
 8006460:	2300      	movs	r3, #0
 8006462:	930f      	str	r3, [sp, #60]	; 0x3c
 8006464:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006466:	930c      	str	r3, [sp, #48]	; 0x30
 8006468:	9307      	str	r3, [sp, #28]
 800646a:	2b00      	cmp	r3, #0
 800646c:	dc13      	bgt.n	8006496 <_dtoa_r+0x26a>
 800646e:	2301      	movs	r3, #1
 8006470:	001a      	movs	r2, r3
 8006472:	930c      	str	r3, [sp, #48]	; 0x30
 8006474:	9307      	str	r3, [sp, #28]
 8006476:	9223      	str	r2, [sp, #140]	; 0x8c
 8006478:	e00d      	b.n	8006496 <_dtoa_r+0x26a>
 800647a:	2301      	movs	r3, #1
 800647c:	e7f1      	b.n	8006462 <_dtoa_r+0x236>
 800647e:	2300      	movs	r3, #0
 8006480:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8006482:	930f      	str	r3, [sp, #60]	; 0x3c
 8006484:	4694      	mov	ip, r2
 8006486:	9b02      	ldr	r3, [sp, #8]
 8006488:	4463      	add	r3, ip
 800648a:	930c      	str	r3, [sp, #48]	; 0x30
 800648c:	3301      	adds	r3, #1
 800648e:	9307      	str	r3, [sp, #28]
 8006490:	2b00      	cmp	r3, #0
 8006492:	dc00      	bgt.n	8006496 <_dtoa_r+0x26a>
 8006494:	2301      	movs	r3, #1
 8006496:	2200      	movs	r2, #0
 8006498:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800649a:	6042      	str	r2, [r0, #4]
 800649c:	3204      	adds	r2, #4
 800649e:	0015      	movs	r5, r2
 80064a0:	3514      	adds	r5, #20
 80064a2:	6841      	ldr	r1, [r0, #4]
 80064a4:	429d      	cmp	r5, r3
 80064a6:	d919      	bls.n	80064dc <_dtoa_r+0x2b0>
 80064a8:	0038      	movs	r0, r7
 80064aa:	f001 f881 	bl	80075b0 <_Balloc>
 80064ae:	9006      	str	r0, [sp, #24]
 80064b0:	2800      	cmp	r0, #0
 80064b2:	d117      	bne.n	80064e4 <_dtoa_r+0x2b8>
 80064b4:	21d5      	movs	r1, #213	; 0xd5
 80064b6:	0002      	movs	r2, r0
 80064b8:	4b43      	ldr	r3, [pc, #268]	; (80065c8 <_dtoa_r+0x39c>)
 80064ba:	0049      	lsls	r1, r1, #1
 80064bc:	e6cb      	b.n	8006256 <_dtoa_r+0x2a>
 80064be:	2301      	movs	r3, #1
 80064c0:	e7de      	b.n	8006480 <_dtoa_r+0x254>
 80064c2:	2300      	movs	r3, #0
 80064c4:	940f      	str	r4, [sp, #60]	; 0x3c
 80064c6:	9322      	str	r3, [sp, #136]	; 0x88
 80064c8:	3b01      	subs	r3, #1
 80064ca:	930c      	str	r3, [sp, #48]	; 0x30
 80064cc:	9307      	str	r3, [sp, #28]
 80064ce:	2200      	movs	r2, #0
 80064d0:	3313      	adds	r3, #19
 80064d2:	e7d0      	b.n	8006476 <_dtoa_r+0x24a>
 80064d4:	2301      	movs	r3, #1
 80064d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80064d8:	3b02      	subs	r3, #2
 80064da:	e7f6      	b.n	80064ca <_dtoa_r+0x29e>
 80064dc:	3101      	adds	r1, #1
 80064de:	6041      	str	r1, [r0, #4]
 80064e0:	0052      	lsls	r2, r2, #1
 80064e2:	e7dc      	b.n	800649e <_dtoa_r+0x272>
 80064e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064e6:	9a06      	ldr	r2, [sp, #24]
 80064e8:	601a      	str	r2, [r3, #0]
 80064ea:	9b07      	ldr	r3, [sp, #28]
 80064ec:	2b0e      	cmp	r3, #14
 80064ee:	d900      	bls.n	80064f2 <_dtoa_r+0x2c6>
 80064f0:	e0eb      	b.n	80066ca <_dtoa_r+0x49e>
 80064f2:	2c00      	cmp	r4, #0
 80064f4:	d100      	bne.n	80064f8 <_dtoa_r+0x2cc>
 80064f6:	e0e8      	b.n	80066ca <_dtoa_r+0x49e>
 80064f8:	9b02      	ldr	r3, [sp, #8]
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	dd68      	ble.n	80065d0 <_dtoa_r+0x3a4>
 80064fe:	001a      	movs	r2, r3
 8006500:	210f      	movs	r1, #15
 8006502:	4b2d      	ldr	r3, [pc, #180]	; (80065b8 <_dtoa_r+0x38c>)
 8006504:	400a      	ands	r2, r1
 8006506:	00d2      	lsls	r2, r2, #3
 8006508:	189b      	adds	r3, r3, r2
 800650a:	681d      	ldr	r5, [r3, #0]
 800650c:	685e      	ldr	r6, [r3, #4]
 800650e:	9b02      	ldr	r3, [sp, #8]
 8006510:	111c      	asrs	r4, r3, #4
 8006512:	2302      	movs	r3, #2
 8006514:	9310      	str	r3, [sp, #64]	; 0x40
 8006516:	9b02      	ldr	r3, [sp, #8]
 8006518:	05db      	lsls	r3, r3, #23
 800651a:	d50b      	bpl.n	8006534 <_dtoa_r+0x308>
 800651c:	4b2b      	ldr	r3, [pc, #172]	; (80065cc <_dtoa_r+0x3a0>)
 800651e:	400c      	ands	r4, r1
 8006520:	6a1a      	ldr	r2, [r3, #32]
 8006522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006524:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006526:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006528:	f7fa fb6a 	bl	8000c00 <__aeabi_ddiv>
 800652c:	2303      	movs	r3, #3
 800652e:	9008      	str	r0, [sp, #32]
 8006530:	9109      	str	r1, [sp, #36]	; 0x24
 8006532:	9310      	str	r3, [sp, #64]	; 0x40
 8006534:	4b25      	ldr	r3, [pc, #148]	; (80065cc <_dtoa_r+0x3a0>)
 8006536:	9314      	str	r3, [sp, #80]	; 0x50
 8006538:	2c00      	cmp	r4, #0
 800653a:	d108      	bne.n	800654e <_dtoa_r+0x322>
 800653c:	9808      	ldr	r0, [sp, #32]
 800653e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006540:	002a      	movs	r2, r5
 8006542:	0033      	movs	r3, r6
 8006544:	f7fa fb5c 	bl	8000c00 <__aeabi_ddiv>
 8006548:	9008      	str	r0, [sp, #32]
 800654a:	9109      	str	r1, [sp, #36]	; 0x24
 800654c:	e05c      	b.n	8006608 <_dtoa_r+0x3dc>
 800654e:	2301      	movs	r3, #1
 8006550:	421c      	tst	r4, r3
 8006552:	d00b      	beq.n	800656c <_dtoa_r+0x340>
 8006554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006556:	0028      	movs	r0, r5
 8006558:	3301      	adds	r3, #1
 800655a:	9310      	str	r3, [sp, #64]	; 0x40
 800655c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800655e:	0031      	movs	r1, r6
 8006560:	681a      	ldr	r2, [r3, #0]
 8006562:	685b      	ldr	r3, [r3, #4]
 8006564:	f7fa ff4e 	bl	8001404 <__aeabi_dmul>
 8006568:	0005      	movs	r5, r0
 800656a:	000e      	movs	r6, r1
 800656c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800656e:	1064      	asrs	r4, r4, #1
 8006570:	3308      	adds	r3, #8
 8006572:	e7e0      	b.n	8006536 <_dtoa_r+0x30a>
 8006574:	0800930e 	.word	0x0800930e
 8006578:	08009325 	.word	0x08009325
 800657c:	7ff00000 	.word	0x7ff00000
 8006580:	0000270f 	.word	0x0000270f
 8006584:	0800930a 	.word	0x0800930a
 8006588:	0800930d 	.word	0x0800930d
 800658c:	08009184 	.word	0x08009184
 8006590:	08009185 	.word	0x08009185
 8006594:	3ff00000 	.word	0x3ff00000
 8006598:	fffffc01 	.word	0xfffffc01
 800659c:	3ff80000 	.word	0x3ff80000
 80065a0:	636f4361 	.word	0x636f4361
 80065a4:	3fd287a7 	.word	0x3fd287a7
 80065a8:	8b60c8b3 	.word	0x8b60c8b3
 80065ac:	3fc68a28 	.word	0x3fc68a28
 80065b0:	509f79fb 	.word	0x509f79fb
 80065b4:	3fd34413 	.word	0x3fd34413
 80065b8:	08009490 	.word	0x08009490
 80065bc:	00000432 	.word	0x00000432
 80065c0:	00000412 	.word	0x00000412
 80065c4:	fe100000 	.word	0xfe100000
 80065c8:	08009380 	.word	0x08009380
 80065cc:	08009468 	.word	0x08009468
 80065d0:	2302      	movs	r3, #2
 80065d2:	9310      	str	r3, [sp, #64]	; 0x40
 80065d4:	9b02      	ldr	r3, [sp, #8]
 80065d6:	2b00      	cmp	r3, #0
 80065d8:	d016      	beq.n	8006608 <_dtoa_r+0x3dc>
 80065da:	9812      	ldr	r0, [sp, #72]	; 0x48
 80065dc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80065de:	425c      	negs	r4, r3
 80065e0:	230f      	movs	r3, #15
 80065e2:	4ab6      	ldr	r2, [pc, #728]	; (80068bc <_dtoa_r+0x690>)
 80065e4:	4023      	ands	r3, r4
 80065e6:	00db      	lsls	r3, r3, #3
 80065e8:	18d3      	adds	r3, r2, r3
 80065ea:	681a      	ldr	r2, [r3, #0]
 80065ec:	685b      	ldr	r3, [r3, #4]
 80065ee:	f7fa ff09 	bl	8001404 <__aeabi_dmul>
 80065f2:	2601      	movs	r6, #1
 80065f4:	2300      	movs	r3, #0
 80065f6:	9008      	str	r0, [sp, #32]
 80065f8:	9109      	str	r1, [sp, #36]	; 0x24
 80065fa:	4db1      	ldr	r5, [pc, #708]	; (80068c0 <_dtoa_r+0x694>)
 80065fc:	1124      	asrs	r4, r4, #4
 80065fe:	2c00      	cmp	r4, #0
 8006600:	d000      	beq.n	8006604 <_dtoa_r+0x3d8>
 8006602:	e094      	b.n	800672e <_dtoa_r+0x502>
 8006604:	2b00      	cmp	r3, #0
 8006606:	d19f      	bne.n	8006548 <_dtoa_r+0x31c>
 8006608:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800660a:	2b00      	cmp	r3, #0
 800660c:	d100      	bne.n	8006610 <_dtoa_r+0x3e4>
 800660e:	e09b      	b.n	8006748 <_dtoa_r+0x51c>
 8006610:	9c08      	ldr	r4, [sp, #32]
 8006612:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006614:	2200      	movs	r2, #0
 8006616:	0020      	movs	r0, r4
 8006618:	0029      	movs	r1, r5
 800661a:	4baa      	ldr	r3, [pc, #680]	; (80068c4 <_dtoa_r+0x698>)
 800661c:	f7f9 ff1c 	bl	8000458 <__aeabi_dcmplt>
 8006620:	2800      	cmp	r0, #0
 8006622:	d100      	bne.n	8006626 <_dtoa_r+0x3fa>
 8006624:	e090      	b.n	8006748 <_dtoa_r+0x51c>
 8006626:	9b07      	ldr	r3, [sp, #28]
 8006628:	2b00      	cmp	r3, #0
 800662a:	d100      	bne.n	800662e <_dtoa_r+0x402>
 800662c:	e08c      	b.n	8006748 <_dtoa_r+0x51c>
 800662e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006630:	2b00      	cmp	r3, #0
 8006632:	dd46      	ble.n	80066c2 <_dtoa_r+0x496>
 8006634:	9b02      	ldr	r3, [sp, #8]
 8006636:	2200      	movs	r2, #0
 8006638:	0020      	movs	r0, r4
 800663a:	0029      	movs	r1, r5
 800663c:	1e5e      	subs	r6, r3, #1
 800663e:	4ba2      	ldr	r3, [pc, #648]	; (80068c8 <_dtoa_r+0x69c>)
 8006640:	f7fa fee0 	bl	8001404 <__aeabi_dmul>
 8006644:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006646:	9008      	str	r0, [sp, #32]
 8006648:	9109      	str	r1, [sp, #36]	; 0x24
 800664a:	3301      	adds	r3, #1
 800664c:	9310      	str	r3, [sp, #64]	; 0x40
 800664e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006650:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006652:	9c08      	ldr	r4, [sp, #32]
 8006654:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006656:	9314      	str	r3, [sp, #80]	; 0x50
 8006658:	f7fb fd26 	bl	80020a8 <__aeabi_i2d>
 800665c:	0022      	movs	r2, r4
 800665e:	002b      	movs	r3, r5
 8006660:	f7fa fed0 	bl	8001404 <__aeabi_dmul>
 8006664:	2200      	movs	r2, #0
 8006666:	4b99      	ldr	r3, [pc, #612]	; (80068cc <_dtoa_r+0x6a0>)
 8006668:	f7f9 ff8e 	bl	8000588 <__aeabi_dadd>
 800666c:	9010      	str	r0, [sp, #64]	; 0x40
 800666e:	9111      	str	r1, [sp, #68]	; 0x44
 8006670:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006672:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006674:	9208      	str	r2, [sp, #32]
 8006676:	9309      	str	r3, [sp, #36]	; 0x24
 8006678:	4a95      	ldr	r2, [pc, #596]	; (80068d0 <_dtoa_r+0x6a4>)
 800667a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800667c:	4694      	mov	ip, r2
 800667e:	4463      	add	r3, ip
 8006680:	9317      	str	r3, [sp, #92]	; 0x5c
 8006682:	9309      	str	r3, [sp, #36]	; 0x24
 8006684:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006686:	2b00      	cmp	r3, #0
 8006688:	d161      	bne.n	800674e <_dtoa_r+0x522>
 800668a:	2200      	movs	r2, #0
 800668c:	0020      	movs	r0, r4
 800668e:	0029      	movs	r1, r5
 8006690:	4b90      	ldr	r3, [pc, #576]	; (80068d4 <_dtoa_r+0x6a8>)
 8006692:	f7fb f923 	bl	80018dc <__aeabi_dsub>
 8006696:	9a08      	ldr	r2, [sp, #32]
 8006698:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800669a:	0004      	movs	r4, r0
 800669c:	000d      	movs	r5, r1
 800669e:	f7f9 feef 	bl	8000480 <__aeabi_dcmpgt>
 80066a2:	2800      	cmp	r0, #0
 80066a4:	d000      	beq.n	80066a8 <_dtoa_r+0x47c>
 80066a6:	e2af      	b.n	8006c08 <_dtoa_r+0x9dc>
 80066a8:	488b      	ldr	r0, [pc, #556]	; (80068d8 <_dtoa_r+0x6ac>)
 80066aa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80066ac:	4684      	mov	ip, r0
 80066ae:	4461      	add	r1, ip
 80066b0:	000b      	movs	r3, r1
 80066b2:	0020      	movs	r0, r4
 80066b4:	0029      	movs	r1, r5
 80066b6:	9a08      	ldr	r2, [sp, #32]
 80066b8:	f7f9 fece 	bl	8000458 <__aeabi_dcmplt>
 80066bc:	2800      	cmp	r0, #0
 80066be:	d000      	beq.n	80066c2 <_dtoa_r+0x496>
 80066c0:	e29f      	b.n	8006c02 <_dtoa_r+0x9d6>
 80066c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80066c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80066c6:	9308      	str	r3, [sp, #32]
 80066c8:	9409      	str	r4, [sp, #36]	; 0x24
 80066ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	da00      	bge.n	80066d2 <_dtoa_r+0x4a6>
 80066d0:	e172      	b.n	80069b8 <_dtoa_r+0x78c>
 80066d2:	9a02      	ldr	r2, [sp, #8]
 80066d4:	2a0e      	cmp	r2, #14
 80066d6:	dd00      	ble.n	80066da <_dtoa_r+0x4ae>
 80066d8:	e16e      	b.n	80069b8 <_dtoa_r+0x78c>
 80066da:	4b78      	ldr	r3, [pc, #480]	; (80068bc <_dtoa_r+0x690>)
 80066dc:	00d2      	lsls	r2, r2, #3
 80066de:	189b      	adds	r3, r3, r2
 80066e0:	685c      	ldr	r4, [r3, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	930a      	str	r3, [sp, #40]	; 0x28
 80066e6:	940b      	str	r4, [sp, #44]	; 0x2c
 80066e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	db00      	blt.n	80066f0 <_dtoa_r+0x4c4>
 80066ee:	e0f7      	b.n	80068e0 <_dtoa_r+0x6b4>
 80066f0:	9b07      	ldr	r3, [sp, #28]
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	dd00      	ble.n	80066f8 <_dtoa_r+0x4cc>
 80066f6:	e0f3      	b.n	80068e0 <_dtoa_r+0x6b4>
 80066f8:	d000      	beq.n	80066fc <_dtoa_r+0x4d0>
 80066fa:	e282      	b.n	8006c02 <_dtoa_r+0x9d6>
 80066fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80066fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006700:	2200      	movs	r2, #0
 8006702:	4b74      	ldr	r3, [pc, #464]	; (80068d4 <_dtoa_r+0x6a8>)
 8006704:	f7fa fe7e 	bl	8001404 <__aeabi_dmul>
 8006708:	9a08      	ldr	r2, [sp, #32]
 800670a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800670c:	f7f9 fec2 	bl	8000494 <__aeabi_dcmpge>
 8006710:	9e07      	ldr	r6, [sp, #28]
 8006712:	0035      	movs	r5, r6
 8006714:	2800      	cmp	r0, #0
 8006716:	d000      	beq.n	800671a <_dtoa_r+0x4ee>
 8006718:	e259      	b.n	8006bce <_dtoa_r+0x9a2>
 800671a:	9b06      	ldr	r3, [sp, #24]
 800671c:	9a06      	ldr	r2, [sp, #24]
 800671e:	3301      	adds	r3, #1
 8006720:	9308      	str	r3, [sp, #32]
 8006722:	2331      	movs	r3, #49	; 0x31
 8006724:	7013      	strb	r3, [r2, #0]
 8006726:	9b02      	ldr	r3, [sp, #8]
 8006728:	3301      	adds	r3, #1
 800672a:	9302      	str	r3, [sp, #8]
 800672c:	e254      	b.n	8006bd8 <_dtoa_r+0x9ac>
 800672e:	4234      	tst	r4, r6
 8006730:	d007      	beq.n	8006742 <_dtoa_r+0x516>
 8006732:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006734:	3301      	adds	r3, #1
 8006736:	9310      	str	r3, [sp, #64]	; 0x40
 8006738:	682a      	ldr	r2, [r5, #0]
 800673a:	686b      	ldr	r3, [r5, #4]
 800673c:	f7fa fe62 	bl	8001404 <__aeabi_dmul>
 8006740:	0033      	movs	r3, r6
 8006742:	1064      	asrs	r4, r4, #1
 8006744:	3508      	adds	r5, #8
 8006746:	e75a      	b.n	80065fe <_dtoa_r+0x3d2>
 8006748:	9e02      	ldr	r6, [sp, #8]
 800674a:	9b07      	ldr	r3, [sp, #28]
 800674c:	e780      	b.n	8006650 <_dtoa_r+0x424>
 800674e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006750:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006752:	1e5a      	subs	r2, r3, #1
 8006754:	4b59      	ldr	r3, [pc, #356]	; (80068bc <_dtoa_r+0x690>)
 8006756:	00d2      	lsls	r2, r2, #3
 8006758:	189b      	adds	r3, r3, r2
 800675a:	681a      	ldr	r2, [r3, #0]
 800675c:	685b      	ldr	r3, [r3, #4]
 800675e:	2900      	cmp	r1, #0
 8006760:	d051      	beq.n	8006806 <_dtoa_r+0x5da>
 8006762:	2000      	movs	r0, #0
 8006764:	495d      	ldr	r1, [pc, #372]	; (80068dc <_dtoa_r+0x6b0>)
 8006766:	f7fa fa4b 	bl	8000c00 <__aeabi_ddiv>
 800676a:	9a08      	ldr	r2, [sp, #32]
 800676c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800676e:	f7fb f8b5 	bl	80018dc <__aeabi_dsub>
 8006772:	9a06      	ldr	r2, [sp, #24]
 8006774:	9b06      	ldr	r3, [sp, #24]
 8006776:	4694      	mov	ip, r2
 8006778:	9317      	str	r3, [sp, #92]	; 0x5c
 800677a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800677c:	9010      	str	r0, [sp, #64]	; 0x40
 800677e:	9111      	str	r1, [sp, #68]	; 0x44
 8006780:	4463      	add	r3, ip
 8006782:	9319      	str	r3, [sp, #100]	; 0x64
 8006784:	0029      	movs	r1, r5
 8006786:	0020      	movs	r0, r4
 8006788:	f7fb fc58 	bl	800203c <__aeabi_d2iz>
 800678c:	9014      	str	r0, [sp, #80]	; 0x50
 800678e:	f7fb fc8b 	bl	80020a8 <__aeabi_i2d>
 8006792:	0002      	movs	r2, r0
 8006794:	000b      	movs	r3, r1
 8006796:	0020      	movs	r0, r4
 8006798:	0029      	movs	r1, r5
 800679a:	f7fb f89f 	bl	80018dc <__aeabi_dsub>
 800679e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80067a0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80067a2:	3301      	adds	r3, #1
 80067a4:	9308      	str	r3, [sp, #32]
 80067a6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80067a8:	0004      	movs	r4, r0
 80067aa:	3330      	adds	r3, #48	; 0x30
 80067ac:	7013      	strb	r3, [r2, #0]
 80067ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80067b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80067b2:	000d      	movs	r5, r1
 80067b4:	f7f9 fe50 	bl	8000458 <__aeabi_dcmplt>
 80067b8:	2800      	cmp	r0, #0
 80067ba:	d175      	bne.n	80068a8 <_dtoa_r+0x67c>
 80067bc:	0022      	movs	r2, r4
 80067be:	002b      	movs	r3, r5
 80067c0:	2000      	movs	r0, #0
 80067c2:	4940      	ldr	r1, [pc, #256]	; (80068c4 <_dtoa_r+0x698>)
 80067c4:	f7fb f88a 	bl	80018dc <__aeabi_dsub>
 80067c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80067ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80067cc:	f7f9 fe44 	bl	8000458 <__aeabi_dcmplt>
 80067d0:	2800      	cmp	r0, #0
 80067d2:	d000      	beq.n	80067d6 <_dtoa_r+0x5aa>
 80067d4:	e0d2      	b.n	800697c <_dtoa_r+0x750>
 80067d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80067d8:	9a08      	ldr	r2, [sp, #32]
 80067da:	4293      	cmp	r3, r2
 80067dc:	d100      	bne.n	80067e0 <_dtoa_r+0x5b4>
 80067de:	e770      	b.n	80066c2 <_dtoa_r+0x496>
 80067e0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80067e2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80067e4:	2200      	movs	r2, #0
 80067e6:	4b38      	ldr	r3, [pc, #224]	; (80068c8 <_dtoa_r+0x69c>)
 80067e8:	f7fa fe0c 	bl	8001404 <__aeabi_dmul>
 80067ec:	4b36      	ldr	r3, [pc, #216]	; (80068c8 <_dtoa_r+0x69c>)
 80067ee:	9010      	str	r0, [sp, #64]	; 0x40
 80067f0:	9111      	str	r1, [sp, #68]	; 0x44
 80067f2:	2200      	movs	r2, #0
 80067f4:	0020      	movs	r0, r4
 80067f6:	0029      	movs	r1, r5
 80067f8:	f7fa fe04 	bl	8001404 <__aeabi_dmul>
 80067fc:	9b08      	ldr	r3, [sp, #32]
 80067fe:	0004      	movs	r4, r0
 8006800:	000d      	movs	r5, r1
 8006802:	9317      	str	r3, [sp, #92]	; 0x5c
 8006804:	e7be      	b.n	8006784 <_dtoa_r+0x558>
 8006806:	9808      	ldr	r0, [sp, #32]
 8006808:	9909      	ldr	r1, [sp, #36]	; 0x24
 800680a:	f7fa fdfb 	bl	8001404 <__aeabi_dmul>
 800680e:	9a06      	ldr	r2, [sp, #24]
 8006810:	9b06      	ldr	r3, [sp, #24]
 8006812:	4694      	mov	ip, r2
 8006814:	9308      	str	r3, [sp, #32]
 8006816:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006818:	9010      	str	r0, [sp, #64]	; 0x40
 800681a:	9111      	str	r1, [sp, #68]	; 0x44
 800681c:	4463      	add	r3, ip
 800681e:	9319      	str	r3, [sp, #100]	; 0x64
 8006820:	0029      	movs	r1, r5
 8006822:	0020      	movs	r0, r4
 8006824:	f7fb fc0a 	bl	800203c <__aeabi_d2iz>
 8006828:	9017      	str	r0, [sp, #92]	; 0x5c
 800682a:	f7fb fc3d 	bl	80020a8 <__aeabi_i2d>
 800682e:	0002      	movs	r2, r0
 8006830:	000b      	movs	r3, r1
 8006832:	0020      	movs	r0, r4
 8006834:	0029      	movs	r1, r5
 8006836:	f7fb f851 	bl	80018dc <__aeabi_dsub>
 800683a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800683c:	9a08      	ldr	r2, [sp, #32]
 800683e:	3330      	adds	r3, #48	; 0x30
 8006840:	7013      	strb	r3, [r2, #0]
 8006842:	0013      	movs	r3, r2
 8006844:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8006846:	3301      	adds	r3, #1
 8006848:	0004      	movs	r4, r0
 800684a:	000d      	movs	r5, r1
 800684c:	9308      	str	r3, [sp, #32]
 800684e:	4293      	cmp	r3, r2
 8006850:	d12c      	bne.n	80068ac <_dtoa_r+0x680>
 8006852:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006854:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006856:	9a06      	ldr	r2, [sp, #24]
 8006858:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800685a:	4694      	mov	ip, r2
 800685c:	4463      	add	r3, ip
 800685e:	2200      	movs	r2, #0
 8006860:	9308      	str	r3, [sp, #32]
 8006862:	4b1e      	ldr	r3, [pc, #120]	; (80068dc <_dtoa_r+0x6b0>)
 8006864:	f7f9 fe90 	bl	8000588 <__aeabi_dadd>
 8006868:	0002      	movs	r2, r0
 800686a:	000b      	movs	r3, r1
 800686c:	0020      	movs	r0, r4
 800686e:	0029      	movs	r1, r5
 8006870:	f7f9 fe06 	bl	8000480 <__aeabi_dcmpgt>
 8006874:	2800      	cmp	r0, #0
 8006876:	d000      	beq.n	800687a <_dtoa_r+0x64e>
 8006878:	e080      	b.n	800697c <_dtoa_r+0x750>
 800687a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800687c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800687e:	2000      	movs	r0, #0
 8006880:	4916      	ldr	r1, [pc, #88]	; (80068dc <_dtoa_r+0x6b0>)
 8006882:	f7fb f82b 	bl	80018dc <__aeabi_dsub>
 8006886:	0002      	movs	r2, r0
 8006888:	000b      	movs	r3, r1
 800688a:	0020      	movs	r0, r4
 800688c:	0029      	movs	r1, r5
 800688e:	f7f9 fde3 	bl	8000458 <__aeabi_dcmplt>
 8006892:	2800      	cmp	r0, #0
 8006894:	d100      	bne.n	8006898 <_dtoa_r+0x66c>
 8006896:	e714      	b.n	80066c2 <_dtoa_r+0x496>
 8006898:	9b08      	ldr	r3, [sp, #32]
 800689a:	001a      	movs	r2, r3
 800689c:	3a01      	subs	r2, #1
 800689e:	9208      	str	r2, [sp, #32]
 80068a0:	7812      	ldrb	r2, [r2, #0]
 80068a2:	2a30      	cmp	r2, #48	; 0x30
 80068a4:	d0f8      	beq.n	8006898 <_dtoa_r+0x66c>
 80068a6:	9308      	str	r3, [sp, #32]
 80068a8:	9602      	str	r6, [sp, #8]
 80068aa:	e055      	b.n	8006958 <_dtoa_r+0x72c>
 80068ac:	2200      	movs	r2, #0
 80068ae:	4b06      	ldr	r3, [pc, #24]	; (80068c8 <_dtoa_r+0x69c>)
 80068b0:	f7fa fda8 	bl	8001404 <__aeabi_dmul>
 80068b4:	0004      	movs	r4, r0
 80068b6:	000d      	movs	r5, r1
 80068b8:	e7b2      	b.n	8006820 <_dtoa_r+0x5f4>
 80068ba:	46c0      	nop			; (mov r8, r8)
 80068bc:	08009490 	.word	0x08009490
 80068c0:	08009468 	.word	0x08009468
 80068c4:	3ff00000 	.word	0x3ff00000
 80068c8:	40240000 	.word	0x40240000
 80068cc:	401c0000 	.word	0x401c0000
 80068d0:	fcc00000 	.word	0xfcc00000
 80068d4:	40140000 	.word	0x40140000
 80068d8:	7cc00000 	.word	0x7cc00000
 80068dc:	3fe00000 	.word	0x3fe00000
 80068e0:	9b07      	ldr	r3, [sp, #28]
 80068e2:	9e06      	ldr	r6, [sp, #24]
 80068e4:	3b01      	subs	r3, #1
 80068e6:	199b      	adds	r3, r3, r6
 80068e8:	930c      	str	r3, [sp, #48]	; 0x30
 80068ea:	9c08      	ldr	r4, [sp, #32]
 80068ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80068ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80068f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80068f2:	0020      	movs	r0, r4
 80068f4:	0029      	movs	r1, r5
 80068f6:	f7fa f983 	bl	8000c00 <__aeabi_ddiv>
 80068fa:	f7fb fb9f 	bl	800203c <__aeabi_d2iz>
 80068fe:	9007      	str	r0, [sp, #28]
 8006900:	f7fb fbd2 	bl	80020a8 <__aeabi_i2d>
 8006904:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006906:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006908:	f7fa fd7c 	bl	8001404 <__aeabi_dmul>
 800690c:	0002      	movs	r2, r0
 800690e:	000b      	movs	r3, r1
 8006910:	0020      	movs	r0, r4
 8006912:	0029      	movs	r1, r5
 8006914:	f7fa ffe2 	bl	80018dc <__aeabi_dsub>
 8006918:	0033      	movs	r3, r6
 800691a:	9a07      	ldr	r2, [sp, #28]
 800691c:	3601      	adds	r6, #1
 800691e:	3230      	adds	r2, #48	; 0x30
 8006920:	701a      	strb	r2, [r3, #0]
 8006922:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006924:	9608      	str	r6, [sp, #32]
 8006926:	429a      	cmp	r2, r3
 8006928:	d139      	bne.n	800699e <_dtoa_r+0x772>
 800692a:	0002      	movs	r2, r0
 800692c:	000b      	movs	r3, r1
 800692e:	f7f9 fe2b 	bl	8000588 <__aeabi_dadd>
 8006932:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006936:	0004      	movs	r4, r0
 8006938:	000d      	movs	r5, r1
 800693a:	f7f9 fda1 	bl	8000480 <__aeabi_dcmpgt>
 800693e:	2800      	cmp	r0, #0
 8006940:	d11b      	bne.n	800697a <_dtoa_r+0x74e>
 8006942:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006944:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006946:	0020      	movs	r0, r4
 8006948:	0029      	movs	r1, r5
 800694a:	f7f9 fd7f 	bl	800044c <__aeabi_dcmpeq>
 800694e:	2800      	cmp	r0, #0
 8006950:	d002      	beq.n	8006958 <_dtoa_r+0x72c>
 8006952:	9b07      	ldr	r3, [sp, #28]
 8006954:	07db      	lsls	r3, r3, #31
 8006956:	d410      	bmi.n	800697a <_dtoa_r+0x74e>
 8006958:	0038      	movs	r0, r7
 800695a:	9905      	ldr	r1, [sp, #20]
 800695c:	f000 fe6c 	bl	8007638 <_Bfree>
 8006960:	2300      	movs	r3, #0
 8006962:	9a08      	ldr	r2, [sp, #32]
 8006964:	9802      	ldr	r0, [sp, #8]
 8006966:	7013      	strb	r3, [r2, #0]
 8006968:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800696a:	3001      	adds	r0, #1
 800696c:	6018      	str	r0, [r3, #0]
 800696e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006970:	2b00      	cmp	r3, #0
 8006972:	d100      	bne.n	8006976 <_dtoa_r+0x74a>
 8006974:	e4a6      	b.n	80062c4 <_dtoa_r+0x98>
 8006976:	601a      	str	r2, [r3, #0]
 8006978:	e4a4      	b.n	80062c4 <_dtoa_r+0x98>
 800697a:	9e02      	ldr	r6, [sp, #8]
 800697c:	9b08      	ldr	r3, [sp, #32]
 800697e:	9308      	str	r3, [sp, #32]
 8006980:	3b01      	subs	r3, #1
 8006982:	781a      	ldrb	r2, [r3, #0]
 8006984:	2a39      	cmp	r2, #57	; 0x39
 8006986:	d106      	bne.n	8006996 <_dtoa_r+0x76a>
 8006988:	9a06      	ldr	r2, [sp, #24]
 800698a:	429a      	cmp	r2, r3
 800698c:	d1f7      	bne.n	800697e <_dtoa_r+0x752>
 800698e:	2230      	movs	r2, #48	; 0x30
 8006990:	9906      	ldr	r1, [sp, #24]
 8006992:	3601      	adds	r6, #1
 8006994:	700a      	strb	r2, [r1, #0]
 8006996:	781a      	ldrb	r2, [r3, #0]
 8006998:	3201      	adds	r2, #1
 800699a:	701a      	strb	r2, [r3, #0]
 800699c:	e784      	b.n	80068a8 <_dtoa_r+0x67c>
 800699e:	2200      	movs	r2, #0
 80069a0:	4baa      	ldr	r3, [pc, #680]	; (8006c4c <_dtoa_r+0xa20>)
 80069a2:	f7fa fd2f 	bl	8001404 <__aeabi_dmul>
 80069a6:	2200      	movs	r2, #0
 80069a8:	2300      	movs	r3, #0
 80069aa:	0004      	movs	r4, r0
 80069ac:	000d      	movs	r5, r1
 80069ae:	f7f9 fd4d 	bl	800044c <__aeabi_dcmpeq>
 80069b2:	2800      	cmp	r0, #0
 80069b4:	d09b      	beq.n	80068ee <_dtoa_r+0x6c2>
 80069b6:	e7cf      	b.n	8006958 <_dtoa_r+0x72c>
 80069b8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80069ba:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80069bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80069be:	2d00      	cmp	r5, #0
 80069c0:	d012      	beq.n	80069e8 <_dtoa_r+0x7bc>
 80069c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80069c4:	2a01      	cmp	r2, #1
 80069c6:	dc66      	bgt.n	8006a96 <_dtoa_r+0x86a>
 80069c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80069ca:	2a00      	cmp	r2, #0
 80069cc:	d05d      	beq.n	8006a8a <_dtoa_r+0x85e>
 80069ce:	4aa0      	ldr	r2, [pc, #640]	; (8006c50 <_dtoa_r+0xa24>)
 80069d0:	189b      	adds	r3, r3, r2
 80069d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80069d4:	2101      	movs	r1, #1
 80069d6:	18d2      	adds	r2, r2, r3
 80069d8:	920a      	str	r2, [sp, #40]	; 0x28
 80069da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80069dc:	0038      	movs	r0, r7
 80069de:	18d3      	adds	r3, r2, r3
 80069e0:	930d      	str	r3, [sp, #52]	; 0x34
 80069e2:	f000 ff25 	bl	8007830 <__i2b>
 80069e6:	0005      	movs	r5, r0
 80069e8:	2c00      	cmp	r4, #0
 80069ea:	dd0e      	ble.n	8006a0a <_dtoa_r+0x7de>
 80069ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	dd0b      	ble.n	8006a0a <_dtoa_r+0x7de>
 80069f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80069f4:	0023      	movs	r3, r4
 80069f6:	4294      	cmp	r4, r2
 80069f8:	dd00      	ble.n	80069fc <_dtoa_r+0x7d0>
 80069fa:	0013      	movs	r3, r2
 80069fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80069fe:	1ae4      	subs	r4, r4, r3
 8006a00:	1ad2      	subs	r2, r2, r3
 8006a02:	920a      	str	r2, [sp, #40]	; 0x28
 8006a04:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006a06:	1ad3      	subs	r3, r2, r3
 8006a08:	930d      	str	r3, [sp, #52]	; 0x34
 8006a0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d01f      	beq.n	8006a50 <_dtoa_r+0x824>
 8006a10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006a12:	2b00      	cmp	r3, #0
 8006a14:	d054      	beq.n	8006ac0 <_dtoa_r+0x894>
 8006a16:	2e00      	cmp	r6, #0
 8006a18:	dd11      	ble.n	8006a3e <_dtoa_r+0x812>
 8006a1a:	0029      	movs	r1, r5
 8006a1c:	0032      	movs	r2, r6
 8006a1e:	0038      	movs	r0, r7
 8006a20:	f000 ffcc 	bl	80079bc <__pow5mult>
 8006a24:	9a05      	ldr	r2, [sp, #20]
 8006a26:	0001      	movs	r1, r0
 8006a28:	0005      	movs	r5, r0
 8006a2a:	0038      	movs	r0, r7
 8006a2c:	f000 ff16 	bl	800785c <__multiply>
 8006a30:	9905      	ldr	r1, [sp, #20]
 8006a32:	9014      	str	r0, [sp, #80]	; 0x50
 8006a34:	0038      	movs	r0, r7
 8006a36:	f000 fdff 	bl	8007638 <_Bfree>
 8006a3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006a3c:	9305      	str	r3, [sp, #20]
 8006a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a40:	1b9a      	subs	r2, r3, r6
 8006a42:	42b3      	cmp	r3, r6
 8006a44:	d004      	beq.n	8006a50 <_dtoa_r+0x824>
 8006a46:	0038      	movs	r0, r7
 8006a48:	9905      	ldr	r1, [sp, #20]
 8006a4a:	f000 ffb7 	bl	80079bc <__pow5mult>
 8006a4e:	9005      	str	r0, [sp, #20]
 8006a50:	2101      	movs	r1, #1
 8006a52:	0038      	movs	r0, r7
 8006a54:	f000 feec 	bl	8007830 <__i2b>
 8006a58:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006a5a:	0006      	movs	r6, r0
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	dd31      	ble.n	8006ac4 <_dtoa_r+0x898>
 8006a60:	001a      	movs	r2, r3
 8006a62:	0001      	movs	r1, r0
 8006a64:	0038      	movs	r0, r7
 8006a66:	f000 ffa9 	bl	80079bc <__pow5mult>
 8006a6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006a6c:	0006      	movs	r6, r0
 8006a6e:	2b01      	cmp	r3, #1
 8006a70:	dd2d      	ble.n	8006ace <_dtoa_r+0x8a2>
 8006a72:	2300      	movs	r3, #0
 8006a74:	930e      	str	r3, [sp, #56]	; 0x38
 8006a76:	6933      	ldr	r3, [r6, #16]
 8006a78:	3303      	adds	r3, #3
 8006a7a:	009b      	lsls	r3, r3, #2
 8006a7c:	18f3      	adds	r3, r6, r3
 8006a7e:	6858      	ldr	r0, [r3, #4]
 8006a80:	f000 fe8e 	bl	80077a0 <__hi0bits>
 8006a84:	2320      	movs	r3, #32
 8006a86:	1a18      	subs	r0, r3, r0
 8006a88:	e039      	b.n	8006afe <_dtoa_r+0x8d2>
 8006a8a:	2336      	movs	r3, #54	; 0x36
 8006a8c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006a8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006a90:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006a92:	1a9b      	subs	r3, r3, r2
 8006a94:	e79d      	b.n	80069d2 <_dtoa_r+0x7a6>
 8006a96:	9b07      	ldr	r3, [sp, #28]
 8006a98:	1e5e      	subs	r6, r3, #1
 8006a9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a9c:	42b3      	cmp	r3, r6
 8006a9e:	db07      	blt.n	8006ab0 <_dtoa_r+0x884>
 8006aa0:	1b9e      	subs	r6, r3, r6
 8006aa2:	9b07      	ldr	r3, [sp, #28]
 8006aa4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	da93      	bge.n	80069d2 <_dtoa_r+0x7a6>
 8006aaa:	1ae4      	subs	r4, r4, r3
 8006aac:	2300      	movs	r3, #0
 8006aae:	e790      	b.n	80069d2 <_dtoa_r+0x7a6>
 8006ab0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006ab2:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8006ab4:	1af3      	subs	r3, r6, r3
 8006ab6:	18d3      	adds	r3, r2, r3
 8006ab8:	960e      	str	r6, [sp, #56]	; 0x38
 8006aba:	9315      	str	r3, [sp, #84]	; 0x54
 8006abc:	2600      	movs	r6, #0
 8006abe:	e7f0      	b.n	8006aa2 <_dtoa_r+0x876>
 8006ac0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006ac2:	e7c0      	b.n	8006a46 <_dtoa_r+0x81a>
 8006ac4:	2300      	movs	r3, #0
 8006ac6:	930e      	str	r3, [sp, #56]	; 0x38
 8006ac8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006aca:	2b01      	cmp	r3, #1
 8006acc:	dc13      	bgt.n	8006af6 <_dtoa_r+0x8ca>
 8006ace:	2300      	movs	r3, #0
 8006ad0:	930e      	str	r3, [sp, #56]	; 0x38
 8006ad2:	9b08      	ldr	r3, [sp, #32]
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	d10e      	bne.n	8006af6 <_dtoa_r+0x8ca>
 8006ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ada:	031b      	lsls	r3, r3, #12
 8006adc:	d10b      	bne.n	8006af6 <_dtoa_r+0x8ca>
 8006ade:	4b5d      	ldr	r3, [pc, #372]	; (8006c54 <_dtoa_r+0xa28>)
 8006ae0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006ae2:	4213      	tst	r3, r2
 8006ae4:	d007      	beq.n	8006af6 <_dtoa_r+0x8ca>
 8006ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006ae8:	3301      	adds	r3, #1
 8006aea:	930a      	str	r3, [sp, #40]	; 0x28
 8006aec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006aee:	3301      	adds	r3, #1
 8006af0:	930d      	str	r3, [sp, #52]	; 0x34
 8006af2:	2301      	movs	r3, #1
 8006af4:	930e      	str	r3, [sp, #56]	; 0x38
 8006af6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006af8:	2001      	movs	r0, #1
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d1bb      	bne.n	8006a76 <_dtoa_r+0x84a>
 8006afe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006b00:	221f      	movs	r2, #31
 8006b02:	1818      	adds	r0, r3, r0
 8006b04:	0003      	movs	r3, r0
 8006b06:	4013      	ands	r3, r2
 8006b08:	4210      	tst	r0, r2
 8006b0a:	d046      	beq.n	8006b9a <_dtoa_r+0x96e>
 8006b0c:	3201      	adds	r2, #1
 8006b0e:	1ad2      	subs	r2, r2, r3
 8006b10:	2a04      	cmp	r2, #4
 8006b12:	dd3f      	ble.n	8006b94 <_dtoa_r+0x968>
 8006b14:	221c      	movs	r2, #28
 8006b16:	1ad3      	subs	r3, r2, r3
 8006b18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b1a:	18e4      	adds	r4, r4, r3
 8006b1c:	18d2      	adds	r2, r2, r3
 8006b1e:	920a      	str	r2, [sp, #40]	; 0x28
 8006b20:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006b22:	18d3      	adds	r3, r2, r3
 8006b24:	930d      	str	r3, [sp, #52]	; 0x34
 8006b26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	dd05      	ble.n	8006b38 <_dtoa_r+0x90c>
 8006b2c:	001a      	movs	r2, r3
 8006b2e:	0038      	movs	r0, r7
 8006b30:	9905      	ldr	r1, [sp, #20]
 8006b32:	f000 ff9f 	bl	8007a74 <__lshift>
 8006b36:	9005      	str	r0, [sp, #20]
 8006b38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006b3a:	2b00      	cmp	r3, #0
 8006b3c:	dd05      	ble.n	8006b4a <_dtoa_r+0x91e>
 8006b3e:	0031      	movs	r1, r6
 8006b40:	001a      	movs	r2, r3
 8006b42:	0038      	movs	r0, r7
 8006b44:	f000 ff96 	bl	8007a74 <__lshift>
 8006b48:	0006      	movs	r6, r0
 8006b4a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006b4c:	2b00      	cmp	r3, #0
 8006b4e:	d026      	beq.n	8006b9e <_dtoa_r+0x972>
 8006b50:	0031      	movs	r1, r6
 8006b52:	9805      	ldr	r0, [sp, #20]
 8006b54:	f000 fffc 	bl	8007b50 <__mcmp>
 8006b58:	2800      	cmp	r0, #0
 8006b5a:	da20      	bge.n	8006b9e <_dtoa_r+0x972>
 8006b5c:	9b02      	ldr	r3, [sp, #8]
 8006b5e:	220a      	movs	r2, #10
 8006b60:	3b01      	subs	r3, #1
 8006b62:	9302      	str	r3, [sp, #8]
 8006b64:	0038      	movs	r0, r7
 8006b66:	2300      	movs	r3, #0
 8006b68:	9905      	ldr	r1, [sp, #20]
 8006b6a:	f000 fd89 	bl	8007680 <__multadd>
 8006b6e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006b70:	9005      	str	r0, [sp, #20]
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d100      	bne.n	8006b78 <_dtoa_r+0x94c>
 8006b76:	e166      	b.n	8006e46 <_dtoa_r+0xc1a>
 8006b78:	2300      	movs	r3, #0
 8006b7a:	0029      	movs	r1, r5
 8006b7c:	220a      	movs	r2, #10
 8006b7e:	0038      	movs	r0, r7
 8006b80:	f000 fd7e 	bl	8007680 <__multadd>
 8006b84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006b86:	0005      	movs	r5, r0
 8006b88:	2b00      	cmp	r3, #0
 8006b8a:	dc47      	bgt.n	8006c1c <_dtoa_r+0x9f0>
 8006b8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006b8e:	2b02      	cmp	r3, #2
 8006b90:	dc0d      	bgt.n	8006bae <_dtoa_r+0x982>
 8006b92:	e043      	b.n	8006c1c <_dtoa_r+0x9f0>
 8006b94:	2a04      	cmp	r2, #4
 8006b96:	d0c6      	beq.n	8006b26 <_dtoa_r+0x8fa>
 8006b98:	0013      	movs	r3, r2
 8006b9a:	331c      	adds	r3, #28
 8006b9c:	e7bc      	b.n	8006b18 <_dtoa_r+0x8ec>
 8006b9e:	9b07      	ldr	r3, [sp, #28]
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	dc35      	bgt.n	8006c10 <_dtoa_r+0x9e4>
 8006ba4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006ba6:	2b02      	cmp	r3, #2
 8006ba8:	dd32      	ble.n	8006c10 <_dtoa_r+0x9e4>
 8006baa:	9b07      	ldr	r3, [sp, #28]
 8006bac:	930c      	str	r3, [sp, #48]	; 0x30
 8006bae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006bb0:	2b00      	cmp	r3, #0
 8006bb2:	d10c      	bne.n	8006bce <_dtoa_r+0x9a2>
 8006bb4:	0031      	movs	r1, r6
 8006bb6:	2205      	movs	r2, #5
 8006bb8:	0038      	movs	r0, r7
 8006bba:	f000 fd61 	bl	8007680 <__multadd>
 8006bbe:	0006      	movs	r6, r0
 8006bc0:	0001      	movs	r1, r0
 8006bc2:	9805      	ldr	r0, [sp, #20]
 8006bc4:	f000 ffc4 	bl	8007b50 <__mcmp>
 8006bc8:	2800      	cmp	r0, #0
 8006bca:	dd00      	ble.n	8006bce <_dtoa_r+0x9a2>
 8006bcc:	e5a5      	b.n	800671a <_dtoa_r+0x4ee>
 8006bce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006bd0:	43db      	mvns	r3, r3
 8006bd2:	9302      	str	r3, [sp, #8]
 8006bd4:	9b06      	ldr	r3, [sp, #24]
 8006bd6:	9308      	str	r3, [sp, #32]
 8006bd8:	2400      	movs	r4, #0
 8006bda:	0031      	movs	r1, r6
 8006bdc:	0038      	movs	r0, r7
 8006bde:	f000 fd2b 	bl	8007638 <_Bfree>
 8006be2:	2d00      	cmp	r5, #0
 8006be4:	d100      	bne.n	8006be8 <_dtoa_r+0x9bc>
 8006be6:	e6b7      	b.n	8006958 <_dtoa_r+0x72c>
 8006be8:	2c00      	cmp	r4, #0
 8006bea:	d005      	beq.n	8006bf8 <_dtoa_r+0x9cc>
 8006bec:	42ac      	cmp	r4, r5
 8006bee:	d003      	beq.n	8006bf8 <_dtoa_r+0x9cc>
 8006bf0:	0021      	movs	r1, r4
 8006bf2:	0038      	movs	r0, r7
 8006bf4:	f000 fd20 	bl	8007638 <_Bfree>
 8006bf8:	0029      	movs	r1, r5
 8006bfa:	0038      	movs	r0, r7
 8006bfc:	f000 fd1c 	bl	8007638 <_Bfree>
 8006c00:	e6aa      	b.n	8006958 <_dtoa_r+0x72c>
 8006c02:	2600      	movs	r6, #0
 8006c04:	0035      	movs	r5, r6
 8006c06:	e7e2      	b.n	8006bce <_dtoa_r+0x9a2>
 8006c08:	9602      	str	r6, [sp, #8]
 8006c0a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8006c0c:	0035      	movs	r5, r6
 8006c0e:	e584      	b.n	800671a <_dtoa_r+0x4ee>
 8006c10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d100      	bne.n	8006c18 <_dtoa_r+0x9ec>
 8006c16:	e0ce      	b.n	8006db6 <_dtoa_r+0xb8a>
 8006c18:	9b07      	ldr	r3, [sp, #28]
 8006c1a:	930c      	str	r3, [sp, #48]	; 0x30
 8006c1c:	2c00      	cmp	r4, #0
 8006c1e:	dd05      	ble.n	8006c2c <_dtoa_r+0xa00>
 8006c20:	0029      	movs	r1, r5
 8006c22:	0022      	movs	r2, r4
 8006c24:	0038      	movs	r0, r7
 8006c26:	f000 ff25 	bl	8007a74 <__lshift>
 8006c2a:	0005      	movs	r5, r0
 8006c2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c2e:	0028      	movs	r0, r5
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	d022      	beq.n	8006c7a <_dtoa_r+0xa4e>
 8006c34:	0038      	movs	r0, r7
 8006c36:	6869      	ldr	r1, [r5, #4]
 8006c38:	f000 fcba 	bl	80075b0 <_Balloc>
 8006c3c:	1e04      	subs	r4, r0, #0
 8006c3e:	d10f      	bne.n	8006c60 <_dtoa_r+0xa34>
 8006c40:	0002      	movs	r2, r0
 8006c42:	4b05      	ldr	r3, [pc, #20]	; (8006c58 <_dtoa_r+0xa2c>)
 8006c44:	4905      	ldr	r1, [pc, #20]	; (8006c5c <_dtoa_r+0xa30>)
 8006c46:	f7ff fb06 	bl	8006256 <_dtoa_r+0x2a>
 8006c4a:	46c0      	nop			; (mov r8, r8)
 8006c4c:	40240000 	.word	0x40240000
 8006c50:	00000433 	.word	0x00000433
 8006c54:	7ff00000 	.word	0x7ff00000
 8006c58:	08009380 	.word	0x08009380
 8006c5c:	000002ea 	.word	0x000002ea
 8006c60:	0029      	movs	r1, r5
 8006c62:	692b      	ldr	r3, [r5, #16]
 8006c64:	310c      	adds	r1, #12
 8006c66:	1c9a      	adds	r2, r3, #2
 8006c68:	0092      	lsls	r2, r2, #2
 8006c6a:	300c      	adds	r0, #12
 8006c6c:	f000 fc97 	bl	800759e <memcpy>
 8006c70:	2201      	movs	r2, #1
 8006c72:	0021      	movs	r1, r4
 8006c74:	0038      	movs	r0, r7
 8006c76:	f000 fefd 	bl	8007a74 <__lshift>
 8006c7a:	9b06      	ldr	r3, [sp, #24]
 8006c7c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006c7e:	930a      	str	r3, [sp, #40]	; 0x28
 8006c80:	3b01      	subs	r3, #1
 8006c82:	189b      	adds	r3, r3, r2
 8006c84:	2201      	movs	r2, #1
 8006c86:	002c      	movs	r4, r5
 8006c88:	0005      	movs	r5, r0
 8006c8a:	9314      	str	r3, [sp, #80]	; 0x50
 8006c8c:	9b08      	ldr	r3, [sp, #32]
 8006c8e:	4013      	ands	r3, r2
 8006c90:	930f      	str	r3, [sp, #60]	; 0x3c
 8006c92:	0031      	movs	r1, r6
 8006c94:	9805      	ldr	r0, [sp, #20]
 8006c96:	f7ff fa3d 	bl	8006114 <quorem>
 8006c9a:	0003      	movs	r3, r0
 8006c9c:	0021      	movs	r1, r4
 8006c9e:	3330      	adds	r3, #48	; 0x30
 8006ca0:	900d      	str	r0, [sp, #52]	; 0x34
 8006ca2:	9805      	ldr	r0, [sp, #20]
 8006ca4:	9307      	str	r3, [sp, #28]
 8006ca6:	f000 ff53 	bl	8007b50 <__mcmp>
 8006caa:	002a      	movs	r2, r5
 8006cac:	900e      	str	r0, [sp, #56]	; 0x38
 8006cae:	0031      	movs	r1, r6
 8006cb0:	0038      	movs	r0, r7
 8006cb2:	f000 ff69 	bl	8007b88 <__mdiff>
 8006cb6:	68c3      	ldr	r3, [r0, #12]
 8006cb8:	9008      	str	r0, [sp, #32]
 8006cba:	9310      	str	r3, [sp, #64]	; 0x40
 8006cbc:	2301      	movs	r3, #1
 8006cbe:	930c      	str	r3, [sp, #48]	; 0x30
 8006cc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006cc2:	2b00      	cmp	r3, #0
 8006cc4:	d104      	bne.n	8006cd0 <_dtoa_r+0xaa4>
 8006cc6:	0001      	movs	r1, r0
 8006cc8:	9805      	ldr	r0, [sp, #20]
 8006cca:	f000 ff41 	bl	8007b50 <__mcmp>
 8006cce:	900c      	str	r0, [sp, #48]	; 0x30
 8006cd0:	0038      	movs	r0, r7
 8006cd2:	9908      	ldr	r1, [sp, #32]
 8006cd4:	f000 fcb0 	bl	8007638 <_Bfree>
 8006cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006cda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006cdc:	3301      	adds	r3, #1
 8006cde:	9308      	str	r3, [sp, #32]
 8006ce0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006ce2:	4313      	orrs	r3, r2
 8006ce4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006ce6:	4313      	orrs	r3, r2
 8006ce8:	d10c      	bne.n	8006d04 <_dtoa_r+0xad8>
 8006cea:	9b07      	ldr	r3, [sp, #28]
 8006cec:	2b39      	cmp	r3, #57	; 0x39
 8006cee:	d026      	beq.n	8006d3e <_dtoa_r+0xb12>
 8006cf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cf2:	2b00      	cmp	r3, #0
 8006cf4:	dd02      	ble.n	8006cfc <_dtoa_r+0xad0>
 8006cf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006cf8:	3331      	adds	r3, #49	; 0x31
 8006cfa:	9307      	str	r3, [sp, #28]
 8006cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006cfe:	9a07      	ldr	r2, [sp, #28]
 8006d00:	701a      	strb	r2, [r3, #0]
 8006d02:	e76a      	b.n	8006bda <_dtoa_r+0x9ae>
 8006d04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006d06:	2b00      	cmp	r3, #0
 8006d08:	db04      	blt.n	8006d14 <_dtoa_r+0xae8>
 8006d0a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006d0c:	4313      	orrs	r3, r2
 8006d0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006d10:	4313      	orrs	r3, r2
 8006d12:	d11f      	bne.n	8006d54 <_dtoa_r+0xb28>
 8006d14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	ddf0      	ble.n	8006cfc <_dtoa_r+0xad0>
 8006d1a:	9905      	ldr	r1, [sp, #20]
 8006d1c:	2201      	movs	r2, #1
 8006d1e:	0038      	movs	r0, r7
 8006d20:	f000 fea8 	bl	8007a74 <__lshift>
 8006d24:	0031      	movs	r1, r6
 8006d26:	9005      	str	r0, [sp, #20]
 8006d28:	f000 ff12 	bl	8007b50 <__mcmp>
 8006d2c:	2800      	cmp	r0, #0
 8006d2e:	dc03      	bgt.n	8006d38 <_dtoa_r+0xb0c>
 8006d30:	d1e4      	bne.n	8006cfc <_dtoa_r+0xad0>
 8006d32:	9b07      	ldr	r3, [sp, #28]
 8006d34:	07db      	lsls	r3, r3, #31
 8006d36:	d5e1      	bpl.n	8006cfc <_dtoa_r+0xad0>
 8006d38:	9b07      	ldr	r3, [sp, #28]
 8006d3a:	2b39      	cmp	r3, #57	; 0x39
 8006d3c:	d1db      	bne.n	8006cf6 <_dtoa_r+0xaca>
 8006d3e:	2339      	movs	r3, #57	; 0x39
 8006d40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d42:	7013      	strb	r3, [r2, #0]
 8006d44:	9b08      	ldr	r3, [sp, #32]
 8006d46:	9308      	str	r3, [sp, #32]
 8006d48:	3b01      	subs	r3, #1
 8006d4a:	781a      	ldrb	r2, [r3, #0]
 8006d4c:	2a39      	cmp	r2, #57	; 0x39
 8006d4e:	d068      	beq.n	8006e22 <_dtoa_r+0xbf6>
 8006d50:	3201      	adds	r2, #1
 8006d52:	e7d5      	b.n	8006d00 <_dtoa_r+0xad4>
 8006d54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	dd07      	ble.n	8006d6a <_dtoa_r+0xb3e>
 8006d5a:	9b07      	ldr	r3, [sp, #28]
 8006d5c:	2b39      	cmp	r3, #57	; 0x39
 8006d5e:	d0ee      	beq.n	8006d3e <_dtoa_r+0xb12>
 8006d60:	9b07      	ldr	r3, [sp, #28]
 8006d62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d64:	3301      	adds	r3, #1
 8006d66:	7013      	strb	r3, [r2, #0]
 8006d68:	e737      	b.n	8006bda <_dtoa_r+0x9ae>
 8006d6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d6c:	9a07      	ldr	r2, [sp, #28]
 8006d6e:	701a      	strb	r2, [r3, #0]
 8006d70:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006d72:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d74:	4293      	cmp	r3, r2
 8006d76:	d03e      	beq.n	8006df6 <_dtoa_r+0xbca>
 8006d78:	2300      	movs	r3, #0
 8006d7a:	220a      	movs	r2, #10
 8006d7c:	9905      	ldr	r1, [sp, #20]
 8006d7e:	0038      	movs	r0, r7
 8006d80:	f000 fc7e 	bl	8007680 <__multadd>
 8006d84:	2300      	movs	r3, #0
 8006d86:	9005      	str	r0, [sp, #20]
 8006d88:	220a      	movs	r2, #10
 8006d8a:	0021      	movs	r1, r4
 8006d8c:	0038      	movs	r0, r7
 8006d8e:	42ac      	cmp	r4, r5
 8006d90:	d106      	bne.n	8006da0 <_dtoa_r+0xb74>
 8006d92:	f000 fc75 	bl	8007680 <__multadd>
 8006d96:	0004      	movs	r4, r0
 8006d98:	0005      	movs	r5, r0
 8006d9a:	9b08      	ldr	r3, [sp, #32]
 8006d9c:	930a      	str	r3, [sp, #40]	; 0x28
 8006d9e:	e778      	b.n	8006c92 <_dtoa_r+0xa66>
 8006da0:	f000 fc6e 	bl	8007680 <__multadd>
 8006da4:	0029      	movs	r1, r5
 8006da6:	0004      	movs	r4, r0
 8006da8:	2300      	movs	r3, #0
 8006daa:	220a      	movs	r2, #10
 8006dac:	0038      	movs	r0, r7
 8006dae:	f000 fc67 	bl	8007680 <__multadd>
 8006db2:	0005      	movs	r5, r0
 8006db4:	e7f1      	b.n	8006d9a <_dtoa_r+0xb6e>
 8006db6:	9b07      	ldr	r3, [sp, #28]
 8006db8:	930c      	str	r3, [sp, #48]	; 0x30
 8006dba:	2400      	movs	r4, #0
 8006dbc:	0031      	movs	r1, r6
 8006dbe:	9805      	ldr	r0, [sp, #20]
 8006dc0:	f7ff f9a8 	bl	8006114 <quorem>
 8006dc4:	9b06      	ldr	r3, [sp, #24]
 8006dc6:	3030      	adds	r0, #48	; 0x30
 8006dc8:	5518      	strb	r0, [r3, r4]
 8006dca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006dcc:	3401      	adds	r4, #1
 8006dce:	9007      	str	r0, [sp, #28]
 8006dd0:	42a3      	cmp	r3, r4
 8006dd2:	dd07      	ble.n	8006de4 <_dtoa_r+0xbb8>
 8006dd4:	2300      	movs	r3, #0
 8006dd6:	220a      	movs	r2, #10
 8006dd8:	0038      	movs	r0, r7
 8006dda:	9905      	ldr	r1, [sp, #20]
 8006ddc:	f000 fc50 	bl	8007680 <__multadd>
 8006de0:	9005      	str	r0, [sp, #20]
 8006de2:	e7eb      	b.n	8006dbc <_dtoa_r+0xb90>
 8006de4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006de6:	2001      	movs	r0, #1
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	dd00      	ble.n	8006dee <_dtoa_r+0xbc2>
 8006dec:	0018      	movs	r0, r3
 8006dee:	2400      	movs	r4, #0
 8006df0:	9b06      	ldr	r3, [sp, #24]
 8006df2:	181b      	adds	r3, r3, r0
 8006df4:	9308      	str	r3, [sp, #32]
 8006df6:	9905      	ldr	r1, [sp, #20]
 8006df8:	2201      	movs	r2, #1
 8006dfa:	0038      	movs	r0, r7
 8006dfc:	f000 fe3a 	bl	8007a74 <__lshift>
 8006e00:	0031      	movs	r1, r6
 8006e02:	9005      	str	r0, [sp, #20]
 8006e04:	f000 fea4 	bl	8007b50 <__mcmp>
 8006e08:	2800      	cmp	r0, #0
 8006e0a:	dc9b      	bgt.n	8006d44 <_dtoa_r+0xb18>
 8006e0c:	d102      	bne.n	8006e14 <_dtoa_r+0xbe8>
 8006e0e:	9b07      	ldr	r3, [sp, #28]
 8006e10:	07db      	lsls	r3, r3, #31
 8006e12:	d497      	bmi.n	8006d44 <_dtoa_r+0xb18>
 8006e14:	9b08      	ldr	r3, [sp, #32]
 8006e16:	9308      	str	r3, [sp, #32]
 8006e18:	3b01      	subs	r3, #1
 8006e1a:	781a      	ldrb	r2, [r3, #0]
 8006e1c:	2a30      	cmp	r2, #48	; 0x30
 8006e1e:	d0fa      	beq.n	8006e16 <_dtoa_r+0xbea>
 8006e20:	e6db      	b.n	8006bda <_dtoa_r+0x9ae>
 8006e22:	9a06      	ldr	r2, [sp, #24]
 8006e24:	429a      	cmp	r2, r3
 8006e26:	d18e      	bne.n	8006d46 <_dtoa_r+0xb1a>
 8006e28:	9b02      	ldr	r3, [sp, #8]
 8006e2a:	3301      	adds	r3, #1
 8006e2c:	9302      	str	r3, [sp, #8]
 8006e2e:	2331      	movs	r3, #49	; 0x31
 8006e30:	e799      	b.n	8006d66 <_dtoa_r+0xb3a>
 8006e32:	4b09      	ldr	r3, [pc, #36]	; (8006e58 <_dtoa_r+0xc2c>)
 8006e34:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006e36:	9306      	str	r3, [sp, #24]
 8006e38:	4b08      	ldr	r3, [pc, #32]	; (8006e5c <_dtoa_r+0xc30>)
 8006e3a:	2a00      	cmp	r2, #0
 8006e3c:	d001      	beq.n	8006e42 <_dtoa_r+0xc16>
 8006e3e:	f7ff fa3f 	bl	80062c0 <_dtoa_r+0x94>
 8006e42:	f7ff fa3f 	bl	80062c4 <_dtoa_r+0x98>
 8006e46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006e48:	2b00      	cmp	r3, #0
 8006e4a:	dcb6      	bgt.n	8006dba <_dtoa_r+0xb8e>
 8006e4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006e4e:	2b02      	cmp	r3, #2
 8006e50:	dd00      	ble.n	8006e54 <_dtoa_r+0xc28>
 8006e52:	e6ac      	b.n	8006bae <_dtoa_r+0x982>
 8006e54:	e7b1      	b.n	8006dba <_dtoa_r+0xb8e>
 8006e56:	46c0      	nop			; (mov r8, r8)
 8006e58:	08009301 	.word	0x08009301
 8006e5c:	08009309 	.word	0x08009309

08006e60 <rshift>:
 8006e60:	0002      	movs	r2, r0
 8006e62:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e64:	6904      	ldr	r4, [r0, #16]
 8006e66:	3214      	adds	r2, #20
 8006e68:	0013      	movs	r3, r2
 8006e6a:	b085      	sub	sp, #20
 8006e6c:	114f      	asrs	r7, r1, #5
 8006e6e:	42bc      	cmp	r4, r7
 8006e70:	dd31      	ble.n	8006ed6 <rshift+0x76>
 8006e72:	00bb      	lsls	r3, r7, #2
 8006e74:	18d3      	adds	r3, r2, r3
 8006e76:	261f      	movs	r6, #31
 8006e78:	9301      	str	r3, [sp, #4]
 8006e7a:	000b      	movs	r3, r1
 8006e7c:	00a5      	lsls	r5, r4, #2
 8006e7e:	4033      	ands	r3, r6
 8006e80:	1955      	adds	r5, r2, r5
 8006e82:	9302      	str	r3, [sp, #8]
 8006e84:	4231      	tst	r1, r6
 8006e86:	d10c      	bne.n	8006ea2 <rshift+0x42>
 8006e88:	0016      	movs	r6, r2
 8006e8a:	9901      	ldr	r1, [sp, #4]
 8006e8c:	428d      	cmp	r5, r1
 8006e8e:	d838      	bhi.n	8006f02 <rshift+0xa2>
 8006e90:	9901      	ldr	r1, [sp, #4]
 8006e92:	2300      	movs	r3, #0
 8006e94:	3903      	subs	r1, #3
 8006e96:	428d      	cmp	r5, r1
 8006e98:	d301      	bcc.n	8006e9e <rshift+0x3e>
 8006e9a:	1be3      	subs	r3, r4, r7
 8006e9c:	009b      	lsls	r3, r3, #2
 8006e9e:	18d3      	adds	r3, r2, r3
 8006ea0:	e019      	b.n	8006ed6 <rshift+0x76>
 8006ea2:	2120      	movs	r1, #32
 8006ea4:	9b02      	ldr	r3, [sp, #8]
 8006ea6:	9e01      	ldr	r6, [sp, #4]
 8006ea8:	1acb      	subs	r3, r1, r3
 8006eaa:	9303      	str	r3, [sp, #12]
 8006eac:	ce02      	ldmia	r6!, {r1}
 8006eae:	9b02      	ldr	r3, [sp, #8]
 8006eb0:	4694      	mov	ip, r2
 8006eb2:	40d9      	lsrs	r1, r3
 8006eb4:	9100      	str	r1, [sp, #0]
 8006eb6:	42b5      	cmp	r5, r6
 8006eb8:	d816      	bhi.n	8006ee8 <rshift+0x88>
 8006eba:	9e01      	ldr	r6, [sp, #4]
 8006ebc:	2300      	movs	r3, #0
 8006ebe:	3601      	adds	r6, #1
 8006ec0:	42b5      	cmp	r5, r6
 8006ec2:	d302      	bcc.n	8006eca <rshift+0x6a>
 8006ec4:	1be3      	subs	r3, r4, r7
 8006ec6:	009b      	lsls	r3, r3, #2
 8006ec8:	3b04      	subs	r3, #4
 8006eca:	9900      	ldr	r1, [sp, #0]
 8006ecc:	18d3      	adds	r3, r2, r3
 8006ece:	6019      	str	r1, [r3, #0]
 8006ed0:	2900      	cmp	r1, #0
 8006ed2:	d000      	beq.n	8006ed6 <rshift+0x76>
 8006ed4:	3304      	adds	r3, #4
 8006ed6:	1a99      	subs	r1, r3, r2
 8006ed8:	1089      	asrs	r1, r1, #2
 8006eda:	6101      	str	r1, [r0, #16]
 8006edc:	4293      	cmp	r3, r2
 8006ede:	d101      	bne.n	8006ee4 <rshift+0x84>
 8006ee0:	2300      	movs	r3, #0
 8006ee2:	6143      	str	r3, [r0, #20]
 8006ee4:	b005      	add	sp, #20
 8006ee6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ee8:	6833      	ldr	r3, [r6, #0]
 8006eea:	9903      	ldr	r1, [sp, #12]
 8006eec:	408b      	lsls	r3, r1
 8006eee:	9900      	ldr	r1, [sp, #0]
 8006ef0:	4319      	orrs	r1, r3
 8006ef2:	4663      	mov	r3, ip
 8006ef4:	c302      	stmia	r3!, {r1}
 8006ef6:	469c      	mov	ip, r3
 8006ef8:	ce02      	ldmia	r6!, {r1}
 8006efa:	9b02      	ldr	r3, [sp, #8]
 8006efc:	40d9      	lsrs	r1, r3
 8006efe:	9100      	str	r1, [sp, #0]
 8006f00:	e7d9      	b.n	8006eb6 <rshift+0x56>
 8006f02:	c908      	ldmia	r1!, {r3}
 8006f04:	c608      	stmia	r6!, {r3}
 8006f06:	e7c1      	b.n	8006e8c <rshift+0x2c>

08006f08 <__hexdig_fun>:
 8006f08:	0002      	movs	r2, r0
 8006f0a:	3a30      	subs	r2, #48	; 0x30
 8006f0c:	0003      	movs	r3, r0
 8006f0e:	2a09      	cmp	r2, #9
 8006f10:	d802      	bhi.n	8006f18 <__hexdig_fun+0x10>
 8006f12:	3b20      	subs	r3, #32
 8006f14:	b2d8      	uxtb	r0, r3
 8006f16:	4770      	bx	lr
 8006f18:	0002      	movs	r2, r0
 8006f1a:	3a61      	subs	r2, #97	; 0x61
 8006f1c:	2a05      	cmp	r2, #5
 8006f1e:	d801      	bhi.n	8006f24 <__hexdig_fun+0x1c>
 8006f20:	3b47      	subs	r3, #71	; 0x47
 8006f22:	e7f7      	b.n	8006f14 <__hexdig_fun+0xc>
 8006f24:	001a      	movs	r2, r3
 8006f26:	3a41      	subs	r2, #65	; 0x41
 8006f28:	2000      	movs	r0, #0
 8006f2a:	2a05      	cmp	r2, #5
 8006f2c:	d8f3      	bhi.n	8006f16 <__hexdig_fun+0xe>
 8006f2e:	3b27      	subs	r3, #39	; 0x27
 8006f30:	e7f0      	b.n	8006f14 <__hexdig_fun+0xc>
	...

08006f34 <__gethex>:
 8006f34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f36:	b08d      	sub	sp, #52	; 0x34
 8006f38:	930a      	str	r3, [sp, #40]	; 0x28
 8006f3a:	4bbf      	ldr	r3, [pc, #764]	; (8007238 <__gethex+0x304>)
 8006f3c:	9005      	str	r0, [sp, #20]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	9109      	str	r1, [sp, #36]	; 0x24
 8006f42:	0018      	movs	r0, r3
 8006f44:	9202      	str	r2, [sp, #8]
 8006f46:	9307      	str	r3, [sp, #28]
 8006f48:	f7f9 f8de 	bl	8000108 <strlen>
 8006f4c:	2202      	movs	r2, #2
 8006f4e:	9b07      	ldr	r3, [sp, #28]
 8006f50:	4252      	negs	r2, r2
 8006f52:	181b      	adds	r3, r3, r0
 8006f54:	3b01      	subs	r3, #1
 8006f56:	781b      	ldrb	r3, [r3, #0]
 8006f58:	9003      	str	r0, [sp, #12]
 8006f5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8006f5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006f5e:	6819      	ldr	r1, [r3, #0]
 8006f60:	1c8b      	adds	r3, r1, #2
 8006f62:	1a52      	subs	r2, r2, r1
 8006f64:	18d1      	adds	r1, r2, r3
 8006f66:	9301      	str	r3, [sp, #4]
 8006f68:	9108      	str	r1, [sp, #32]
 8006f6a:	9901      	ldr	r1, [sp, #4]
 8006f6c:	3301      	adds	r3, #1
 8006f6e:	7808      	ldrb	r0, [r1, #0]
 8006f70:	2830      	cmp	r0, #48	; 0x30
 8006f72:	d0f7      	beq.n	8006f64 <__gethex+0x30>
 8006f74:	f7ff ffc8 	bl	8006f08 <__hexdig_fun>
 8006f78:	2300      	movs	r3, #0
 8006f7a:	001c      	movs	r4, r3
 8006f7c:	9304      	str	r3, [sp, #16]
 8006f7e:	4298      	cmp	r0, r3
 8006f80:	d11f      	bne.n	8006fc2 <__gethex+0x8e>
 8006f82:	9a03      	ldr	r2, [sp, #12]
 8006f84:	9907      	ldr	r1, [sp, #28]
 8006f86:	9801      	ldr	r0, [sp, #4]
 8006f88:	f001 fa64 	bl	8008454 <strncmp>
 8006f8c:	0007      	movs	r7, r0
 8006f8e:	42a0      	cmp	r0, r4
 8006f90:	d000      	beq.n	8006f94 <__gethex+0x60>
 8006f92:	e06b      	b.n	800706c <__gethex+0x138>
 8006f94:	9b01      	ldr	r3, [sp, #4]
 8006f96:	9a03      	ldr	r2, [sp, #12]
 8006f98:	5c98      	ldrb	r0, [r3, r2]
 8006f9a:	189d      	adds	r5, r3, r2
 8006f9c:	f7ff ffb4 	bl	8006f08 <__hexdig_fun>
 8006fa0:	2301      	movs	r3, #1
 8006fa2:	9304      	str	r3, [sp, #16]
 8006fa4:	42a0      	cmp	r0, r4
 8006fa6:	d030      	beq.n	800700a <__gethex+0xd6>
 8006fa8:	9501      	str	r5, [sp, #4]
 8006faa:	9b01      	ldr	r3, [sp, #4]
 8006fac:	7818      	ldrb	r0, [r3, #0]
 8006fae:	2830      	cmp	r0, #48	; 0x30
 8006fb0:	d009      	beq.n	8006fc6 <__gethex+0x92>
 8006fb2:	f7ff ffa9 	bl	8006f08 <__hexdig_fun>
 8006fb6:	4242      	negs	r2, r0
 8006fb8:	4142      	adcs	r2, r0
 8006fba:	2301      	movs	r3, #1
 8006fbc:	002c      	movs	r4, r5
 8006fbe:	9204      	str	r2, [sp, #16]
 8006fc0:	9308      	str	r3, [sp, #32]
 8006fc2:	9d01      	ldr	r5, [sp, #4]
 8006fc4:	e004      	b.n	8006fd0 <__gethex+0x9c>
 8006fc6:	9b01      	ldr	r3, [sp, #4]
 8006fc8:	3301      	adds	r3, #1
 8006fca:	9301      	str	r3, [sp, #4]
 8006fcc:	e7ed      	b.n	8006faa <__gethex+0x76>
 8006fce:	3501      	adds	r5, #1
 8006fd0:	7828      	ldrb	r0, [r5, #0]
 8006fd2:	f7ff ff99 	bl	8006f08 <__hexdig_fun>
 8006fd6:	1e07      	subs	r7, r0, #0
 8006fd8:	d1f9      	bne.n	8006fce <__gethex+0x9a>
 8006fda:	0028      	movs	r0, r5
 8006fdc:	9a03      	ldr	r2, [sp, #12]
 8006fde:	9907      	ldr	r1, [sp, #28]
 8006fe0:	f001 fa38 	bl	8008454 <strncmp>
 8006fe4:	2800      	cmp	r0, #0
 8006fe6:	d10e      	bne.n	8007006 <__gethex+0xd2>
 8006fe8:	2c00      	cmp	r4, #0
 8006fea:	d107      	bne.n	8006ffc <__gethex+0xc8>
 8006fec:	9b03      	ldr	r3, [sp, #12]
 8006fee:	18ed      	adds	r5, r5, r3
 8006ff0:	002c      	movs	r4, r5
 8006ff2:	7828      	ldrb	r0, [r5, #0]
 8006ff4:	f7ff ff88 	bl	8006f08 <__hexdig_fun>
 8006ff8:	2800      	cmp	r0, #0
 8006ffa:	d102      	bne.n	8007002 <__gethex+0xce>
 8006ffc:	1b64      	subs	r4, r4, r5
 8006ffe:	00a7      	lsls	r7, r4, #2
 8007000:	e003      	b.n	800700a <__gethex+0xd6>
 8007002:	3501      	adds	r5, #1
 8007004:	e7f5      	b.n	8006ff2 <__gethex+0xbe>
 8007006:	2c00      	cmp	r4, #0
 8007008:	d1f8      	bne.n	8006ffc <__gethex+0xc8>
 800700a:	2220      	movs	r2, #32
 800700c:	782b      	ldrb	r3, [r5, #0]
 800700e:	002e      	movs	r6, r5
 8007010:	4393      	bics	r3, r2
 8007012:	2b50      	cmp	r3, #80	; 0x50
 8007014:	d11d      	bne.n	8007052 <__gethex+0x11e>
 8007016:	786b      	ldrb	r3, [r5, #1]
 8007018:	2b2b      	cmp	r3, #43	; 0x2b
 800701a:	d02c      	beq.n	8007076 <__gethex+0x142>
 800701c:	2b2d      	cmp	r3, #45	; 0x2d
 800701e:	d02e      	beq.n	800707e <__gethex+0x14a>
 8007020:	2300      	movs	r3, #0
 8007022:	1c6e      	adds	r6, r5, #1
 8007024:	9306      	str	r3, [sp, #24]
 8007026:	7830      	ldrb	r0, [r6, #0]
 8007028:	f7ff ff6e 	bl	8006f08 <__hexdig_fun>
 800702c:	1e43      	subs	r3, r0, #1
 800702e:	b2db      	uxtb	r3, r3
 8007030:	2b18      	cmp	r3, #24
 8007032:	d82b      	bhi.n	800708c <__gethex+0x158>
 8007034:	3810      	subs	r0, #16
 8007036:	0004      	movs	r4, r0
 8007038:	7870      	ldrb	r0, [r6, #1]
 800703a:	f7ff ff65 	bl	8006f08 <__hexdig_fun>
 800703e:	1e43      	subs	r3, r0, #1
 8007040:	b2db      	uxtb	r3, r3
 8007042:	3601      	adds	r6, #1
 8007044:	2b18      	cmp	r3, #24
 8007046:	d91c      	bls.n	8007082 <__gethex+0x14e>
 8007048:	9b06      	ldr	r3, [sp, #24]
 800704a:	2b00      	cmp	r3, #0
 800704c:	d000      	beq.n	8007050 <__gethex+0x11c>
 800704e:	4264      	negs	r4, r4
 8007050:	193f      	adds	r7, r7, r4
 8007052:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007054:	601e      	str	r6, [r3, #0]
 8007056:	9b04      	ldr	r3, [sp, #16]
 8007058:	2b00      	cmp	r3, #0
 800705a:	d019      	beq.n	8007090 <__gethex+0x15c>
 800705c:	2600      	movs	r6, #0
 800705e:	9b08      	ldr	r3, [sp, #32]
 8007060:	42b3      	cmp	r3, r6
 8007062:	d100      	bne.n	8007066 <__gethex+0x132>
 8007064:	3606      	adds	r6, #6
 8007066:	0030      	movs	r0, r6
 8007068:	b00d      	add	sp, #52	; 0x34
 800706a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800706c:	2301      	movs	r3, #1
 800706e:	2700      	movs	r7, #0
 8007070:	9d01      	ldr	r5, [sp, #4]
 8007072:	9304      	str	r3, [sp, #16]
 8007074:	e7c9      	b.n	800700a <__gethex+0xd6>
 8007076:	2300      	movs	r3, #0
 8007078:	9306      	str	r3, [sp, #24]
 800707a:	1cae      	adds	r6, r5, #2
 800707c:	e7d3      	b.n	8007026 <__gethex+0xf2>
 800707e:	2301      	movs	r3, #1
 8007080:	e7fa      	b.n	8007078 <__gethex+0x144>
 8007082:	230a      	movs	r3, #10
 8007084:	435c      	muls	r4, r3
 8007086:	1824      	adds	r4, r4, r0
 8007088:	3c10      	subs	r4, #16
 800708a:	e7d5      	b.n	8007038 <__gethex+0x104>
 800708c:	002e      	movs	r6, r5
 800708e:	e7e0      	b.n	8007052 <__gethex+0x11e>
 8007090:	9b01      	ldr	r3, [sp, #4]
 8007092:	9904      	ldr	r1, [sp, #16]
 8007094:	1aeb      	subs	r3, r5, r3
 8007096:	3b01      	subs	r3, #1
 8007098:	2b07      	cmp	r3, #7
 800709a:	dc0a      	bgt.n	80070b2 <__gethex+0x17e>
 800709c:	9805      	ldr	r0, [sp, #20]
 800709e:	f000 fa87 	bl	80075b0 <_Balloc>
 80070a2:	1e04      	subs	r4, r0, #0
 80070a4:	d108      	bne.n	80070b8 <__gethex+0x184>
 80070a6:	0002      	movs	r2, r0
 80070a8:	21de      	movs	r1, #222	; 0xde
 80070aa:	4b64      	ldr	r3, [pc, #400]	; (800723c <__gethex+0x308>)
 80070ac:	4864      	ldr	r0, [pc, #400]	; (8007240 <__gethex+0x30c>)
 80070ae:	f001 f9f1 	bl	8008494 <__assert_func>
 80070b2:	3101      	adds	r1, #1
 80070b4:	105b      	asrs	r3, r3, #1
 80070b6:	e7ef      	b.n	8007098 <__gethex+0x164>
 80070b8:	0003      	movs	r3, r0
 80070ba:	3314      	adds	r3, #20
 80070bc:	9304      	str	r3, [sp, #16]
 80070be:	9309      	str	r3, [sp, #36]	; 0x24
 80070c0:	2300      	movs	r3, #0
 80070c2:	001e      	movs	r6, r3
 80070c4:	9306      	str	r3, [sp, #24]
 80070c6:	9b01      	ldr	r3, [sp, #4]
 80070c8:	42ab      	cmp	r3, r5
 80070ca:	d340      	bcc.n	800714e <__gethex+0x21a>
 80070cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80070ce:	9b04      	ldr	r3, [sp, #16]
 80070d0:	c540      	stmia	r5!, {r6}
 80070d2:	1aed      	subs	r5, r5, r3
 80070d4:	10ad      	asrs	r5, r5, #2
 80070d6:	0030      	movs	r0, r6
 80070d8:	6125      	str	r5, [r4, #16]
 80070da:	f000 fb61 	bl	80077a0 <__hi0bits>
 80070de:	9b02      	ldr	r3, [sp, #8]
 80070e0:	016d      	lsls	r5, r5, #5
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	1a2e      	subs	r6, r5, r0
 80070e6:	9301      	str	r3, [sp, #4]
 80070e8:	429e      	cmp	r6, r3
 80070ea:	dd5a      	ble.n	80071a2 <__gethex+0x26e>
 80070ec:	1af6      	subs	r6, r6, r3
 80070ee:	0031      	movs	r1, r6
 80070f0:	0020      	movs	r0, r4
 80070f2:	f000 ff03 	bl	8007efc <__any_on>
 80070f6:	1e05      	subs	r5, r0, #0
 80070f8:	d016      	beq.n	8007128 <__gethex+0x1f4>
 80070fa:	2501      	movs	r5, #1
 80070fc:	211f      	movs	r1, #31
 80070fe:	0028      	movs	r0, r5
 8007100:	1e73      	subs	r3, r6, #1
 8007102:	4019      	ands	r1, r3
 8007104:	4088      	lsls	r0, r1
 8007106:	0001      	movs	r1, r0
 8007108:	115a      	asrs	r2, r3, #5
 800710a:	9804      	ldr	r0, [sp, #16]
 800710c:	0092      	lsls	r2, r2, #2
 800710e:	5812      	ldr	r2, [r2, r0]
 8007110:	420a      	tst	r2, r1
 8007112:	d009      	beq.n	8007128 <__gethex+0x1f4>
 8007114:	42ab      	cmp	r3, r5
 8007116:	dd06      	ble.n	8007126 <__gethex+0x1f2>
 8007118:	0020      	movs	r0, r4
 800711a:	1eb1      	subs	r1, r6, #2
 800711c:	f000 feee 	bl	8007efc <__any_on>
 8007120:	3502      	adds	r5, #2
 8007122:	2800      	cmp	r0, #0
 8007124:	d100      	bne.n	8007128 <__gethex+0x1f4>
 8007126:	2502      	movs	r5, #2
 8007128:	0031      	movs	r1, r6
 800712a:	0020      	movs	r0, r4
 800712c:	f7ff fe98 	bl	8006e60 <rshift>
 8007130:	19bf      	adds	r7, r7, r6
 8007132:	9b02      	ldr	r3, [sp, #8]
 8007134:	689b      	ldr	r3, [r3, #8]
 8007136:	9303      	str	r3, [sp, #12]
 8007138:	42bb      	cmp	r3, r7
 800713a:	da42      	bge.n	80071c2 <__gethex+0x28e>
 800713c:	0021      	movs	r1, r4
 800713e:	9805      	ldr	r0, [sp, #20]
 8007140:	f000 fa7a 	bl	8007638 <_Bfree>
 8007144:	2300      	movs	r3, #0
 8007146:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007148:	26a3      	movs	r6, #163	; 0xa3
 800714a:	6013      	str	r3, [r2, #0]
 800714c:	e78b      	b.n	8007066 <__gethex+0x132>
 800714e:	1e6b      	subs	r3, r5, #1
 8007150:	9308      	str	r3, [sp, #32]
 8007152:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007154:	781b      	ldrb	r3, [r3, #0]
 8007156:	4293      	cmp	r3, r2
 8007158:	d014      	beq.n	8007184 <__gethex+0x250>
 800715a:	9b06      	ldr	r3, [sp, #24]
 800715c:	2b20      	cmp	r3, #32
 800715e:	d104      	bne.n	800716a <__gethex+0x236>
 8007160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007162:	c340      	stmia	r3!, {r6}
 8007164:	2600      	movs	r6, #0
 8007166:	9309      	str	r3, [sp, #36]	; 0x24
 8007168:	9606      	str	r6, [sp, #24]
 800716a:	9b08      	ldr	r3, [sp, #32]
 800716c:	7818      	ldrb	r0, [r3, #0]
 800716e:	f7ff fecb 	bl	8006f08 <__hexdig_fun>
 8007172:	230f      	movs	r3, #15
 8007174:	4018      	ands	r0, r3
 8007176:	9b06      	ldr	r3, [sp, #24]
 8007178:	9d08      	ldr	r5, [sp, #32]
 800717a:	4098      	lsls	r0, r3
 800717c:	3304      	adds	r3, #4
 800717e:	4306      	orrs	r6, r0
 8007180:	9306      	str	r3, [sp, #24]
 8007182:	e7a0      	b.n	80070c6 <__gethex+0x192>
 8007184:	2301      	movs	r3, #1
 8007186:	9a03      	ldr	r2, [sp, #12]
 8007188:	1a9d      	subs	r5, r3, r2
 800718a:	9b08      	ldr	r3, [sp, #32]
 800718c:	195d      	adds	r5, r3, r5
 800718e:	9b01      	ldr	r3, [sp, #4]
 8007190:	429d      	cmp	r5, r3
 8007192:	d3e2      	bcc.n	800715a <__gethex+0x226>
 8007194:	0028      	movs	r0, r5
 8007196:	9907      	ldr	r1, [sp, #28]
 8007198:	f001 f95c 	bl	8008454 <strncmp>
 800719c:	2800      	cmp	r0, #0
 800719e:	d1dc      	bne.n	800715a <__gethex+0x226>
 80071a0:	e791      	b.n	80070c6 <__gethex+0x192>
 80071a2:	9b01      	ldr	r3, [sp, #4]
 80071a4:	2500      	movs	r5, #0
 80071a6:	429e      	cmp	r6, r3
 80071a8:	dac3      	bge.n	8007132 <__gethex+0x1fe>
 80071aa:	1b9e      	subs	r6, r3, r6
 80071ac:	0021      	movs	r1, r4
 80071ae:	0032      	movs	r2, r6
 80071b0:	9805      	ldr	r0, [sp, #20]
 80071b2:	f000 fc5f 	bl	8007a74 <__lshift>
 80071b6:	0003      	movs	r3, r0
 80071b8:	3314      	adds	r3, #20
 80071ba:	0004      	movs	r4, r0
 80071bc:	1bbf      	subs	r7, r7, r6
 80071be:	9304      	str	r3, [sp, #16]
 80071c0:	e7b7      	b.n	8007132 <__gethex+0x1fe>
 80071c2:	9b02      	ldr	r3, [sp, #8]
 80071c4:	685e      	ldr	r6, [r3, #4]
 80071c6:	42be      	cmp	r6, r7
 80071c8:	dd71      	ble.n	80072ae <__gethex+0x37a>
 80071ca:	9b01      	ldr	r3, [sp, #4]
 80071cc:	1bf6      	subs	r6, r6, r7
 80071ce:	42b3      	cmp	r3, r6
 80071d0:	dc38      	bgt.n	8007244 <__gethex+0x310>
 80071d2:	9b02      	ldr	r3, [sp, #8]
 80071d4:	68db      	ldr	r3, [r3, #12]
 80071d6:	2b02      	cmp	r3, #2
 80071d8:	d026      	beq.n	8007228 <__gethex+0x2f4>
 80071da:	2b03      	cmp	r3, #3
 80071dc:	d028      	beq.n	8007230 <__gethex+0x2fc>
 80071de:	2b01      	cmp	r3, #1
 80071e0:	d119      	bne.n	8007216 <__gethex+0x2e2>
 80071e2:	9b01      	ldr	r3, [sp, #4]
 80071e4:	42b3      	cmp	r3, r6
 80071e6:	d116      	bne.n	8007216 <__gethex+0x2e2>
 80071e8:	2b01      	cmp	r3, #1
 80071ea:	d10d      	bne.n	8007208 <__gethex+0x2d4>
 80071ec:	9b02      	ldr	r3, [sp, #8]
 80071ee:	2662      	movs	r6, #98	; 0x62
 80071f0:	685b      	ldr	r3, [r3, #4]
 80071f2:	9301      	str	r3, [sp, #4]
 80071f4:	9a01      	ldr	r2, [sp, #4]
 80071f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80071f8:	601a      	str	r2, [r3, #0]
 80071fa:	2301      	movs	r3, #1
 80071fc:	9a04      	ldr	r2, [sp, #16]
 80071fe:	6123      	str	r3, [r4, #16]
 8007200:	6013      	str	r3, [r2, #0]
 8007202:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007204:	601c      	str	r4, [r3, #0]
 8007206:	e72e      	b.n	8007066 <__gethex+0x132>
 8007208:	9901      	ldr	r1, [sp, #4]
 800720a:	0020      	movs	r0, r4
 800720c:	3901      	subs	r1, #1
 800720e:	f000 fe75 	bl	8007efc <__any_on>
 8007212:	2800      	cmp	r0, #0
 8007214:	d1ea      	bne.n	80071ec <__gethex+0x2b8>
 8007216:	0021      	movs	r1, r4
 8007218:	9805      	ldr	r0, [sp, #20]
 800721a:	f000 fa0d 	bl	8007638 <_Bfree>
 800721e:	2300      	movs	r3, #0
 8007220:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007222:	2650      	movs	r6, #80	; 0x50
 8007224:	6013      	str	r3, [r2, #0]
 8007226:	e71e      	b.n	8007066 <__gethex+0x132>
 8007228:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800722a:	2b00      	cmp	r3, #0
 800722c:	d1f3      	bne.n	8007216 <__gethex+0x2e2>
 800722e:	e7dd      	b.n	80071ec <__gethex+0x2b8>
 8007230:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007232:	2b00      	cmp	r3, #0
 8007234:	d1da      	bne.n	80071ec <__gethex+0x2b8>
 8007236:	e7ee      	b.n	8007216 <__gethex+0x2e2>
 8007238:	080093f8 	.word	0x080093f8
 800723c:	08009380 	.word	0x08009380
 8007240:	08009391 	.word	0x08009391
 8007244:	1e77      	subs	r7, r6, #1
 8007246:	2d00      	cmp	r5, #0
 8007248:	d12f      	bne.n	80072aa <__gethex+0x376>
 800724a:	2f00      	cmp	r7, #0
 800724c:	d004      	beq.n	8007258 <__gethex+0x324>
 800724e:	0039      	movs	r1, r7
 8007250:	0020      	movs	r0, r4
 8007252:	f000 fe53 	bl	8007efc <__any_on>
 8007256:	0005      	movs	r5, r0
 8007258:	231f      	movs	r3, #31
 800725a:	117a      	asrs	r2, r7, #5
 800725c:	401f      	ands	r7, r3
 800725e:	3b1e      	subs	r3, #30
 8007260:	40bb      	lsls	r3, r7
 8007262:	9904      	ldr	r1, [sp, #16]
 8007264:	0092      	lsls	r2, r2, #2
 8007266:	5852      	ldr	r2, [r2, r1]
 8007268:	421a      	tst	r2, r3
 800726a:	d001      	beq.n	8007270 <__gethex+0x33c>
 800726c:	2302      	movs	r3, #2
 800726e:	431d      	orrs	r5, r3
 8007270:	9b01      	ldr	r3, [sp, #4]
 8007272:	0031      	movs	r1, r6
 8007274:	1b9b      	subs	r3, r3, r6
 8007276:	2602      	movs	r6, #2
 8007278:	0020      	movs	r0, r4
 800727a:	9301      	str	r3, [sp, #4]
 800727c:	f7ff fdf0 	bl	8006e60 <rshift>
 8007280:	9b02      	ldr	r3, [sp, #8]
 8007282:	685f      	ldr	r7, [r3, #4]
 8007284:	2d00      	cmp	r5, #0
 8007286:	d041      	beq.n	800730c <__gethex+0x3d8>
 8007288:	9b02      	ldr	r3, [sp, #8]
 800728a:	68db      	ldr	r3, [r3, #12]
 800728c:	2b02      	cmp	r3, #2
 800728e:	d010      	beq.n	80072b2 <__gethex+0x37e>
 8007290:	2b03      	cmp	r3, #3
 8007292:	d012      	beq.n	80072ba <__gethex+0x386>
 8007294:	2b01      	cmp	r3, #1
 8007296:	d106      	bne.n	80072a6 <__gethex+0x372>
 8007298:	07aa      	lsls	r2, r5, #30
 800729a:	d504      	bpl.n	80072a6 <__gethex+0x372>
 800729c:	9a04      	ldr	r2, [sp, #16]
 800729e:	6810      	ldr	r0, [r2, #0]
 80072a0:	4305      	orrs	r5, r0
 80072a2:	421d      	tst	r5, r3
 80072a4:	d10c      	bne.n	80072c0 <__gethex+0x38c>
 80072a6:	2310      	movs	r3, #16
 80072a8:	e02f      	b.n	800730a <__gethex+0x3d6>
 80072aa:	2501      	movs	r5, #1
 80072ac:	e7d4      	b.n	8007258 <__gethex+0x324>
 80072ae:	2601      	movs	r6, #1
 80072b0:	e7e8      	b.n	8007284 <__gethex+0x350>
 80072b2:	2301      	movs	r3, #1
 80072b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80072b6:	1a9b      	subs	r3, r3, r2
 80072b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80072ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d0f2      	beq.n	80072a6 <__gethex+0x372>
 80072c0:	6923      	ldr	r3, [r4, #16]
 80072c2:	2000      	movs	r0, #0
 80072c4:	9303      	str	r3, [sp, #12]
 80072c6:	009b      	lsls	r3, r3, #2
 80072c8:	9304      	str	r3, [sp, #16]
 80072ca:	0023      	movs	r3, r4
 80072cc:	9a04      	ldr	r2, [sp, #16]
 80072ce:	3314      	adds	r3, #20
 80072d0:	1899      	adds	r1, r3, r2
 80072d2:	681a      	ldr	r2, [r3, #0]
 80072d4:	1c55      	adds	r5, r2, #1
 80072d6:	d01e      	beq.n	8007316 <__gethex+0x3e2>
 80072d8:	3201      	adds	r2, #1
 80072da:	601a      	str	r2, [r3, #0]
 80072dc:	0023      	movs	r3, r4
 80072de:	3314      	adds	r3, #20
 80072e0:	2e02      	cmp	r6, #2
 80072e2:	d140      	bne.n	8007366 <__gethex+0x432>
 80072e4:	9a02      	ldr	r2, [sp, #8]
 80072e6:	9901      	ldr	r1, [sp, #4]
 80072e8:	6812      	ldr	r2, [r2, #0]
 80072ea:	3a01      	subs	r2, #1
 80072ec:	428a      	cmp	r2, r1
 80072ee:	d10b      	bne.n	8007308 <__gethex+0x3d4>
 80072f0:	114a      	asrs	r2, r1, #5
 80072f2:	211f      	movs	r1, #31
 80072f4:	9801      	ldr	r0, [sp, #4]
 80072f6:	0092      	lsls	r2, r2, #2
 80072f8:	4001      	ands	r1, r0
 80072fa:	2001      	movs	r0, #1
 80072fc:	0005      	movs	r5, r0
 80072fe:	408d      	lsls	r5, r1
 8007300:	58d3      	ldr	r3, [r2, r3]
 8007302:	422b      	tst	r3, r5
 8007304:	d000      	beq.n	8007308 <__gethex+0x3d4>
 8007306:	2601      	movs	r6, #1
 8007308:	2320      	movs	r3, #32
 800730a:	431e      	orrs	r6, r3
 800730c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800730e:	601c      	str	r4, [r3, #0]
 8007310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007312:	601f      	str	r7, [r3, #0]
 8007314:	e6a7      	b.n	8007066 <__gethex+0x132>
 8007316:	c301      	stmia	r3!, {r0}
 8007318:	4299      	cmp	r1, r3
 800731a:	d8da      	bhi.n	80072d2 <__gethex+0x39e>
 800731c:	9b03      	ldr	r3, [sp, #12]
 800731e:	68a2      	ldr	r2, [r4, #8]
 8007320:	4293      	cmp	r3, r2
 8007322:	db17      	blt.n	8007354 <__gethex+0x420>
 8007324:	6863      	ldr	r3, [r4, #4]
 8007326:	9805      	ldr	r0, [sp, #20]
 8007328:	1c59      	adds	r1, r3, #1
 800732a:	f000 f941 	bl	80075b0 <_Balloc>
 800732e:	1e05      	subs	r5, r0, #0
 8007330:	d103      	bne.n	800733a <__gethex+0x406>
 8007332:	0002      	movs	r2, r0
 8007334:	2184      	movs	r1, #132	; 0x84
 8007336:	4b1c      	ldr	r3, [pc, #112]	; (80073a8 <__gethex+0x474>)
 8007338:	e6b8      	b.n	80070ac <__gethex+0x178>
 800733a:	0021      	movs	r1, r4
 800733c:	6923      	ldr	r3, [r4, #16]
 800733e:	310c      	adds	r1, #12
 8007340:	1c9a      	adds	r2, r3, #2
 8007342:	0092      	lsls	r2, r2, #2
 8007344:	300c      	adds	r0, #12
 8007346:	f000 f92a 	bl	800759e <memcpy>
 800734a:	0021      	movs	r1, r4
 800734c:	9805      	ldr	r0, [sp, #20]
 800734e:	f000 f973 	bl	8007638 <_Bfree>
 8007352:	002c      	movs	r4, r5
 8007354:	6923      	ldr	r3, [r4, #16]
 8007356:	1c5a      	adds	r2, r3, #1
 8007358:	6122      	str	r2, [r4, #16]
 800735a:	2201      	movs	r2, #1
 800735c:	3304      	adds	r3, #4
 800735e:	009b      	lsls	r3, r3, #2
 8007360:	18e3      	adds	r3, r4, r3
 8007362:	605a      	str	r2, [r3, #4]
 8007364:	e7ba      	b.n	80072dc <__gethex+0x3a8>
 8007366:	6922      	ldr	r2, [r4, #16]
 8007368:	9903      	ldr	r1, [sp, #12]
 800736a:	428a      	cmp	r2, r1
 800736c:	dd09      	ble.n	8007382 <__gethex+0x44e>
 800736e:	2101      	movs	r1, #1
 8007370:	0020      	movs	r0, r4
 8007372:	f7ff fd75 	bl	8006e60 <rshift>
 8007376:	9b02      	ldr	r3, [sp, #8]
 8007378:	3701      	adds	r7, #1
 800737a:	689b      	ldr	r3, [r3, #8]
 800737c:	42bb      	cmp	r3, r7
 800737e:	dac2      	bge.n	8007306 <__gethex+0x3d2>
 8007380:	e6dc      	b.n	800713c <__gethex+0x208>
 8007382:	221f      	movs	r2, #31
 8007384:	9d01      	ldr	r5, [sp, #4]
 8007386:	9901      	ldr	r1, [sp, #4]
 8007388:	2601      	movs	r6, #1
 800738a:	4015      	ands	r5, r2
 800738c:	4211      	tst	r1, r2
 800738e:	d0bb      	beq.n	8007308 <__gethex+0x3d4>
 8007390:	9a04      	ldr	r2, [sp, #16]
 8007392:	189b      	adds	r3, r3, r2
 8007394:	3b04      	subs	r3, #4
 8007396:	6818      	ldr	r0, [r3, #0]
 8007398:	f000 fa02 	bl	80077a0 <__hi0bits>
 800739c:	2320      	movs	r3, #32
 800739e:	1b5d      	subs	r5, r3, r5
 80073a0:	42a8      	cmp	r0, r5
 80073a2:	dbe4      	blt.n	800736e <__gethex+0x43a>
 80073a4:	e7b0      	b.n	8007308 <__gethex+0x3d4>
 80073a6:	46c0      	nop			; (mov r8, r8)
 80073a8:	08009380 	.word	0x08009380

080073ac <L_shift>:
 80073ac:	2308      	movs	r3, #8
 80073ae:	b570      	push	{r4, r5, r6, lr}
 80073b0:	2520      	movs	r5, #32
 80073b2:	1a9a      	subs	r2, r3, r2
 80073b4:	0092      	lsls	r2, r2, #2
 80073b6:	1aad      	subs	r5, r5, r2
 80073b8:	6843      	ldr	r3, [r0, #4]
 80073ba:	6806      	ldr	r6, [r0, #0]
 80073bc:	001c      	movs	r4, r3
 80073be:	40ac      	lsls	r4, r5
 80073c0:	40d3      	lsrs	r3, r2
 80073c2:	4334      	orrs	r4, r6
 80073c4:	6004      	str	r4, [r0, #0]
 80073c6:	6043      	str	r3, [r0, #4]
 80073c8:	3004      	adds	r0, #4
 80073ca:	4288      	cmp	r0, r1
 80073cc:	d3f4      	bcc.n	80073b8 <L_shift+0xc>
 80073ce:	bd70      	pop	{r4, r5, r6, pc}

080073d0 <__match>:
 80073d0:	b530      	push	{r4, r5, lr}
 80073d2:	6803      	ldr	r3, [r0, #0]
 80073d4:	780c      	ldrb	r4, [r1, #0]
 80073d6:	3301      	adds	r3, #1
 80073d8:	2c00      	cmp	r4, #0
 80073da:	d102      	bne.n	80073e2 <__match+0x12>
 80073dc:	6003      	str	r3, [r0, #0]
 80073de:	2001      	movs	r0, #1
 80073e0:	bd30      	pop	{r4, r5, pc}
 80073e2:	781a      	ldrb	r2, [r3, #0]
 80073e4:	0015      	movs	r5, r2
 80073e6:	3d41      	subs	r5, #65	; 0x41
 80073e8:	2d19      	cmp	r5, #25
 80073ea:	d800      	bhi.n	80073ee <__match+0x1e>
 80073ec:	3220      	adds	r2, #32
 80073ee:	3101      	adds	r1, #1
 80073f0:	42a2      	cmp	r2, r4
 80073f2:	d0ef      	beq.n	80073d4 <__match+0x4>
 80073f4:	2000      	movs	r0, #0
 80073f6:	e7f3      	b.n	80073e0 <__match+0x10>

080073f8 <__hexnan>:
 80073f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073fa:	680b      	ldr	r3, [r1, #0]
 80073fc:	b08b      	sub	sp, #44	; 0x2c
 80073fe:	9201      	str	r2, [sp, #4]
 8007400:	9901      	ldr	r1, [sp, #4]
 8007402:	115a      	asrs	r2, r3, #5
 8007404:	0092      	lsls	r2, r2, #2
 8007406:	188a      	adds	r2, r1, r2
 8007408:	9202      	str	r2, [sp, #8]
 800740a:	0019      	movs	r1, r3
 800740c:	221f      	movs	r2, #31
 800740e:	4011      	ands	r1, r2
 8007410:	9008      	str	r0, [sp, #32]
 8007412:	9106      	str	r1, [sp, #24]
 8007414:	4213      	tst	r3, r2
 8007416:	d002      	beq.n	800741e <__hexnan+0x26>
 8007418:	9b02      	ldr	r3, [sp, #8]
 800741a:	3304      	adds	r3, #4
 800741c:	9302      	str	r3, [sp, #8]
 800741e:	9b02      	ldr	r3, [sp, #8]
 8007420:	2500      	movs	r5, #0
 8007422:	1f1e      	subs	r6, r3, #4
 8007424:	0037      	movs	r7, r6
 8007426:	0034      	movs	r4, r6
 8007428:	9b08      	ldr	r3, [sp, #32]
 800742a:	6035      	str	r5, [r6, #0]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	9507      	str	r5, [sp, #28]
 8007430:	9305      	str	r3, [sp, #20]
 8007432:	9503      	str	r5, [sp, #12]
 8007434:	9b05      	ldr	r3, [sp, #20]
 8007436:	3301      	adds	r3, #1
 8007438:	9309      	str	r3, [sp, #36]	; 0x24
 800743a:	9b05      	ldr	r3, [sp, #20]
 800743c:	785b      	ldrb	r3, [r3, #1]
 800743e:	9304      	str	r3, [sp, #16]
 8007440:	2b00      	cmp	r3, #0
 8007442:	d028      	beq.n	8007496 <__hexnan+0x9e>
 8007444:	9804      	ldr	r0, [sp, #16]
 8007446:	f7ff fd5f 	bl	8006f08 <__hexdig_fun>
 800744a:	2800      	cmp	r0, #0
 800744c:	d154      	bne.n	80074f8 <__hexnan+0x100>
 800744e:	9b04      	ldr	r3, [sp, #16]
 8007450:	2b20      	cmp	r3, #32
 8007452:	d819      	bhi.n	8007488 <__hexnan+0x90>
 8007454:	9b03      	ldr	r3, [sp, #12]
 8007456:	9a07      	ldr	r2, [sp, #28]
 8007458:	4293      	cmp	r3, r2
 800745a:	dd12      	ble.n	8007482 <__hexnan+0x8a>
 800745c:	42bc      	cmp	r4, r7
 800745e:	d206      	bcs.n	800746e <__hexnan+0x76>
 8007460:	2d07      	cmp	r5, #7
 8007462:	dc04      	bgt.n	800746e <__hexnan+0x76>
 8007464:	002a      	movs	r2, r5
 8007466:	0039      	movs	r1, r7
 8007468:	0020      	movs	r0, r4
 800746a:	f7ff ff9f 	bl	80073ac <L_shift>
 800746e:	9b01      	ldr	r3, [sp, #4]
 8007470:	2508      	movs	r5, #8
 8007472:	429c      	cmp	r4, r3
 8007474:	d905      	bls.n	8007482 <__hexnan+0x8a>
 8007476:	1f27      	subs	r7, r4, #4
 8007478:	2500      	movs	r5, #0
 800747a:	003c      	movs	r4, r7
 800747c:	9b03      	ldr	r3, [sp, #12]
 800747e:	603d      	str	r5, [r7, #0]
 8007480:	9307      	str	r3, [sp, #28]
 8007482:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007484:	9305      	str	r3, [sp, #20]
 8007486:	e7d5      	b.n	8007434 <__hexnan+0x3c>
 8007488:	9b04      	ldr	r3, [sp, #16]
 800748a:	2b29      	cmp	r3, #41	; 0x29
 800748c:	d159      	bne.n	8007542 <__hexnan+0x14a>
 800748e:	9b05      	ldr	r3, [sp, #20]
 8007490:	9a08      	ldr	r2, [sp, #32]
 8007492:	3302      	adds	r3, #2
 8007494:	6013      	str	r3, [r2, #0]
 8007496:	9b03      	ldr	r3, [sp, #12]
 8007498:	2b00      	cmp	r3, #0
 800749a:	d052      	beq.n	8007542 <__hexnan+0x14a>
 800749c:	42bc      	cmp	r4, r7
 800749e:	d206      	bcs.n	80074ae <__hexnan+0xb6>
 80074a0:	2d07      	cmp	r5, #7
 80074a2:	dc04      	bgt.n	80074ae <__hexnan+0xb6>
 80074a4:	002a      	movs	r2, r5
 80074a6:	0039      	movs	r1, r7
 80074a8:	0020      	movs	r0, r4
 80074aa:	f7ff ff7f 	bl	80073ac <L_shift>
 80074ae:	9b01      	ldr	r3, [sp, #4]
 80074b0:	429c      	cmp	r4, r3
 80074b2:	d935      	bls.n	8007520 <__hexnan+0x128>
 80074b4:	001a      	movs	r2, r3
 80074b6:	0023      	movs	r3, r4
 80074b8:	cb02      	ldmia	r3!, {r1}
 80074ba:	c202      	stmia	r2!, {r1}
 80074bc:	429e      	cmp	r6, r3
 80074be:	d2fb      	bcs.n	80074b8 <__hexnan+0xc0>
 80074c0:	9b02      	ldr	r3, [sp, #8]
 80074c2:	1c61      	adds	r1, r4, #1
 80074c4:	1eda      	subs	r2, r3, #3
 80074c6:	2304      	movs	r3, #4
 80074c8:	4291      	cmp	r1, r2
 80074ca:	d805      	bhi.n	80074d8 <__hexnan+0xe0>
 80074cc:	9b02      	ldr	r3, [sp, #8]
 80074ce:	3b04      	subs	r3, #4
 80074d0:	1b1b      	subs	r3, r3, r4
 80074d2:	089b      	lsrs	r3, r3, #2
 80074d4:	3301      	adds	r3, #1
 80074d6:	009b      	lsls	r3, r3, #2
 80074d8:	9a01      	ldr	r2, [sp, #4]
 80074da:	18d3      	adds	r3, r2, r3
 80074dc:	2200      	movs	r2, #0
 80074de:	c304      	stmia	r3!, {r2}
 80074e0:	429e      	cmp	r6, r3
 80074e2:	d2fc      	bcs.n	80074de <__hexnan+0xe6>
 80074e4:	6833      	ldr	r3, [r6, #0]
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d104      	bne.n	80074f4 <__hexnan+0xfc>
 80074ea:	9b01      	ldr	r3, [sp, #4]
 80074ec:	429e      	cmp	r6, r3
 80074ee:	d126      	bne.n	800753e <__hexnan+0x146>
 80074f0:	2301      	movs	r3, #1
 80074f2:	6033      	str	r3, [r6, #0]
 80074f4:	2005      	movs	r0, #5
 80074f6:	e025      	b.n	8007544 <__hexnan+0x14c>
 80074f8:	9b03      	ldr	r3, [sp, #12]
 80074fa:	3501      	adds	r5, #1
 80074fc:	3301      	adds	r3, #1
 80074fe:	9303      	str	r3, [sp, #12]
 8007500:	2d08      	cmp	r5, #8
 8007502:	dd06      	ble.n	8007512 <__hexnan+0x11a>
 8007504:	9b01      	ldr	r3, [sp, #4]
 8007506:	429c      	cmp	r4, r3
 8007508:	d9bb      	bls.n	8007482 <__hexnan+0x8a>
 800750a:	2300      	movs	r3, #0
 800750c:	2501      	movs	r5, #1
 800750e:	3c04      	subs	r4, #4
 8007510:	6023      	str	r3, [r4, #0]
 8007512:	220f      	movs	r2, #15
 8007514:	6823      	ldr	r3, [r4, #0]
 8007516:	4010      	ands	r0, r2
 8007518:	011b      	lsls	r3, r3, #4
 800751a:	4318      	orrs	r0, r3
 800751c:	6020      	str	r0, [r4, #0]
 800751e:	e7b0      	b.n	8007482 <__hexnan+0x8a>
 8007520:	9b06      	ldr	r3, [sp, #24]
 8007522:	2b00      	cmp	r3, #0
 8007524:	d0de      	beq.n	80074e4 <__hexnan+0xec>
 8007526:	2120      	movs	r1, #32
 8007528:	9a06      	ldr	r2, [sp, #24]
 800752a:	9b02      	ldr	r3, [sp, #8]
 800752c:	1a89      	subs	r1, r1, r2
 800752e:	2201      	movs	r2, #1
 8007530:	4252      	negs	r2, r2
 8007532:	40ca      	lsrs	r2, r1
 8007534:	3b04      	subs	r3, #4
 8007536:	6819      	ldr	r1, [r3, #0]
 8007538:	400a      	ands	r2, r1
 800753a:	601a      	str	r2, [r3, #0]
 800753c:	e7d2      	b.n	80074e4 <__hexnan+0xec>
 800753e:	3e04      	subs	r6, #4
 8007540:	e7d0      	b.n	80074e4 <__hexnan+0xec>
 8007542:	2004      	movs	r0, #4
 8007544:	b00b      	add	sp, #44	; 0x2c
 8007546:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007548 <_localeconv_r>:
 8007548:	4800      	ldr	r0, [pc, #0]	; (800754c <_localeconv_r+0x4>)
 800754a:	4770      	bx	lr
 800754c:	20000164 	.word	0x20000164

08007550 <malloc>:
 8007550:	b510      	push	{r4, lr}
 8007552:	4b03      	ldr	r3, [pc, #12]	; (8007560 <malloc+0x10>)
 8007554:	0001      	movs	r1, r0
 8007556:	6818      	ldr	r0, [r3, #0]
 8007558:	f000 fd8c 	bl	8008074 <_malloc_r>
 800755c:	bd10      	pop	{r4, pc}
 800755e:	46c0      	nop			; (mov r8, r8)
 8007560:	2000000c 	.word	0x2000000c

08007564 <__ascii_mbtowc>:
 8007564:	b082      	sub	sp, #8
 8007566:	2900      	cmp	r1, #0
 8007568:	d100      	bne.n	800756c <__ascii_mbtowc+0x8>
 800756a:	a901      	add	r1, sp, #4
 800756c:	1e10      	subs	r0, r2, #0
 800756e:	d006      	beq.n	800757e <__ascii_mbtowc+0x1a>
 8007570:	2b00      	cmp	r3, #0
 8007572:	d006      	beq.n	8007582 <__ascii_mbtowc+0x1e>
 8007574:	7813      	ldrb	r3, [r2, #0]
 8007576:	600b      	str	r3, [r1, #0]
 8007578:	7810      	ldrb	r0, [r2, #0]
 800757a:	1e43      	subs	r3, r0, #1
 800757c:	4198      	sbcs	r0, r3
 800757e:	b002      	add	sp, #8
 8007580:	4770      	bx	lr
 8007582:	2002      	movs	r0, #2
 8007584:	4240      	negs	r0, r0
 8007586:	e7fa      	b.n	800757e <__ascii_mbtowc+0x1a>

08007588 <memchr>:
 8007588:	b2c9      	uxtb	r1, r1
 800758a:	1882      	adds	r2, r0, r2
 800758c:	4290      	cmp	r0, r2
 800758e:	d101      	bne.n	8007594 <memchr+0xc>
 8007590:	2000      	movs	r0, #0
 8007592:	4770      	bx	lr
 8007594:	7803      	ldrb	r3, [r0, #0]
 8007596:	428b      	cmp	r3, r1
 8007598:	d0fb      	beq.n	8007592 <memchr+0xa>
 800759a:	3001      	adds	r0, #1
 800759c:	e7f6      	b.n	800758c <memchr+0x4>

0800759e <memcpy>:
 800759e:	2300      	movs	r3, #0
 80075a0:	b510      	push	{r4, lr}
 80075a2:	429a      	cmp	r2, r3
 80075a4:	d100      	bne.n	80075a8 <memcpy+0xa>
 80075a6:	bd10      	pop	{r4, pc}
 80075a8:	5ccc      	ldrb	r4, [r1, r3]
 80075aa:	54c4      	strb	r4, [r0, r3]
 80075ac:	3301      	adds	r3, #1
 80075ae:	e7f8      	b.n	80075a2 <memcpy+0x4>

080075b0 <_Balloc>:
 80075b0:	b570      	push	{r4, r5, r6, lr}
 80075b2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80075b4:	0006      	movs	r6, r0
 80075b6:	000c      	movs	r4, r1
 80075b8:	2d00      	cmp	r5, #0
 80075ba:	d10e      	bne.n	80075da <_Balloc+0x2a>
 80075bc:	2010      	movs	r0, #16
 80075be:	f7ff ffc7 	bl	8007550 <malloc>
 80075c2:	1e02      	subs	r2, r0, #0
 80075c4:	6270      	str	r0, [r6, #36]	; 0x24
 80075c6:	d104      	bne.n	80075d2 <_Balloc+0x22>
 80075c8:	2166      	movs	r1, #102	; 0x66
 80075ca:	4b19      	ldr	r3, [pc, #100]	; (8007630 <_Balloc+0x80>)
 80075cc:	4819      	ldr	r0, [pc, #100]	; (8007634 <_Balloc+0x84>)
 80075ce:	f000 ff61 	bl	8008494 <__assert_func>
 80075d2:	6045      	str	r5, [r0, #4]
 80075d4:	6085      	str	r5, [r0, #8]
 80075d6:	6005      	str	r5, [r0, #0]
 80075d8:	60c5      	str	r5, [r0, #12]
 80075da:	6a75      	ldr	r5, [r6, #36]	; 0x24
 80075dc:	68eb      	ldr	r3, [r5, #12]
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d013      	beq.n	800760a <_Balloc+0x5a>
 80075e2:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80075e4:	00a2      	lsls	r2, r4, #2
 80075e6:	68db      	ldr	r3, [r3, #12]
 80075e8:	189b      	adds	r3, r3, r2
 80075ea:	6818      	ldr	r0, [r3, #0]
 80075ec:	2800      	cmp	r0, #0
 80075ee:	d118      	bne.n	8007622 <_Balloc+0x72>
 80075f0:	2101      	movs	r1, #1
 80075f2:	000d      	movs	r5, r1
 80075f4:	40a5      	lsls	r5, r4
 80075f6:	1d6a      	adds	r2, r5, #5
 80075f8:	0030      	movs	r0, r6
 80075fa:	0092      	lsls	r2, r2, #2
 80075fc:	f000 fca1 	bl	8007f42 <_calloc_r>
 8007600:	2800      	cmp	r0, #0
 8007602:	d00c      	beq.n	800761e <_Balloc+0x6e>
 8007604:	6044      	str	r4, [r0, #4]
 8007606:	6085      	str	r5, [r0, #8]
 8007608:	e00d      	b.n	8007626 <_Balloc+0x76>
 800760a:	2221      	movs	r2, #33	; 0x21
 800760c:	2104      	movs	r1, #4
 800760e:	0030      	movs	r0, r6
 8007610:	f000 fc97 	bl	8007f42 <_calloc_r>
 8007614:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8007616:	60e8      	str	r0, [r5, #12]
 8007618:	68db      	ldr	r3, [r3, #12]
 800761a:	2b00      	cmp	r3, #0
 800761c:	d1e1      	bne.n	80075e2 <_Balloc+0x32>
 800761e:	2000      	movs	r0, #0
 8007620:	bd70      	pop	{r4, r5, r6, pc}
 8007622:	6802      	ldr	r2, [r0, #0]
 8007624:	601a      	str	r2, [r3, #0]
 8007626:	2300      	movs	r3, #0
 8007628:	6103      	str	r3, [r0, #16]
 800762a:	60c3      	str	r3, [r0, #12]
 800762c:	e7f8      	b.n	8007620 <_Balloc+0x70>
 800762e:	46c0      	nop			; (mov r8, r8)
 8007630:	0800930e 	.word	0x0800930e
 8007634:	0800940c 	.word	0x0800940c

08007638 <_Bfree>:
 8007638:	b570      	push	{r4, r5, r6, lr}
 800763a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800763c:	0005      	movs	r5, r0
 800763e:	000c      	movs	r4, r1
 8007640:	2e00      	cmp	r6, #0
 8007642:	d10e      	bne.n	8007662 <_Bfree+0x2a>
 8007644:	2010      	movs	r0, #16
 8007646:	f7ff ff83 	bl	8007550 <malloc>
 800764a:	1e02      	subs	r2, r0, #0
 800764c:	6268      	str	r0, [r5, #36]	; 0x24
 800764e:	d104      	bne.n	800765a <_Bfree+0x22>
 8007650:	218a      	movs	r1, #138	; 0x8a
 8007652:	4b09      	ldr	r3, [pc, #36]	; (8007678 <_Bfree+0x40>)
 8007654:	4809      	ldr	r0, [pc, #36]	; (800767c <_Bfree+0x44>)
 8007656:	f000 ff1d 	bl	8008494 <__assert_func>
 800765a:	6046      	str	r6, [r0, #4]
 800765c:	6086      	str	r6, [r0, #8]
 800765e:	6006      	str	r6, [r0, #0]
 8007660:	60c6      	str	r6, [r0, #12]
 8007662:	2c00      	cmp	r4, #0
 8007664:	d007      	beq.n	8007676 <_Bfree+0x3e>
 8007666:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8007668:	6862      	ldr	r2, [r4, #4]
 800766a:	68db      	ldr	r3, [r3, #12]
 800766c:	0092      	lsls	r2, r2, #2
 800766e:	189b      	adds	r3, r3, r2
 8007670:	681a      	ldr	r2, [r3, #0]
 8007672:	6022      	str	r2, [r4, #0]
 8007674:	601c      	str	r4, [r3, #0]
 8007676:	bd70      	pop	{r4, r5, r6, pc}
 8007678:	0800930e 	.word	0x0800930e
 800767c:	0800940c 	.word	0x0800940c

08007680 <__multadd>:
 8007680:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007682:	000e      	movs	r6, r1
 8007684:	9001      	str	r0, [sp, #4]
 8007686:	000c      	movs	r4, r1
 8007688:	001d      	movs	r5, r3
 800768a:	2000      	movs	r0, #0
 800768c:	690f      	ldr	r7, [r1, #16]
 800768e:	3614      	adds	r6, #20
 8007690:	6833      	ldr	r3, [r6, #0]
 8007692:	3001      	adds	r0, #1
 8007694:	b299      	uxth	r1, r3
 8007696:	4351      	muls	r1, r2
 8007698:	0c1b      	lsrs	r3, r3, #16
 800769a:	4353      	muls	r3, r2
 800769c:	1949      	adds	r1, r1, r5
 800769e:	0c0d      	lsrs	r5, r1, #16
 80076a0:	195b      	adds	r3, r3, r5
 80076a2:	0c1d      	lsrs	r5, r3, #16
 80076a4:	b289      	uxth	r1, r1
 80076a6:	041b      	lsls	r3, r3, #16
 80076a8:	185b      	adds	r3, r3, r1
 80076aa:	c608      	stmia	r6!, {r3}
 80076ac:	4287      	cmp	r7, r0
 80076ae:	dcef      	bgt.n	8007690 <__multadd+0x10>
 80076b0:	2d00      	cmp	r5, #0
 80076b2:	d022      	beq.n	80076fa <__multadd+0x7a>
 80076b4:	68a3      	ldr	r3, [r4, #8]
 80076b6:	42bb      	cmp	r3, r7
 80076b8:	dc19      	bgt.n	80076ee <__multadd+0x6e>
 80076ba:	6863      	ldr	r3, [r4, #4]
 80076bc:	9801      	ldr	r0, [sp, #4]
 80076be:	1c59      	adds	r1, r3, #1
 80076c0:	f7ff ff76 	bl	80075b0 <_Balloc>
 80076c4:	1e06      	subs	r6, r0, #0
 80076c6:	d105      	bne.n	80076d4 <__multadd+0x54>
 80076c8:	0002      	movs	r2, r0
 80076ca:	21b5      	movs	r1, #181	; 0xb5
 80076cc:	4b0c      	ldr	r3, [pc, #48]	; (8007700 <__multadd+0x80>)
 80076ce:	480d      	ldr	r0, [pc, #52]	; (8007704 <__multadd+0x84>)
 80076d0:	f000 fee0 	bl	8008494 <__assert_func>
 80076d4:	0021      	movs	r1, r4
 80076d6:	6923      	ldr	r3, [r4, #16]
 80076d8:	310c      	adds	r1, #12
 80076da:	1c9a      	adds	r2, r3, #2
 80076dc:	0092      	lsls	r2, r2, #2
 80076de:	300c      	adds	r0, #12
 80076e0:	f7ff ff5d 	bl	800759e <memcpy>
 80076e4:	0021      	movs	r1, r4
 80076e6:	9801      	ldr	r0, [sp, #4]
 80076e8:	f7ff ffa6 	bl	8007638 <_Bfree>
 80076ec:	0034      	movs	r4, r6
 80076ee:	1d3b      	adds	r3, r7, #4
 80076f0:	009b      	lsls	r3, r3, #2
 80076f2:	18e3      	adds	r3, r4, r3
 80076f4:	605d      	str	r5, [r3, #4]
 80076f6:	1c7b      	adds	r3, r7, #1
 80076f8:	6123      	str	r3, [r4, #16]
 80076fa:	0020      	movs	r0, r4
 80076fc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80076fe:	46c0      	nop			; (mov r8, r8)
 8007700:	08009380 	.word	0x08009380
 8007704:	0800940c 	.word	0x0800940c

08007708 <__s2b>:
 8007708:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800770a:	0006      	movs	r6, r0
 800770c:	0018      	movs	r0, r3
 800770e:	000c      	movs	r4, r1
 8007710:	3008      	adds	r0, #8
 8007712:	2109      	movs	r1, #9
 8007714:	9301      	str	r3, [sp, #4]
 8007716:	0015      	movs	r5, r2
 8007718:	f7f8 fd9c 	bl	8000254 <__divsi3>
 800771c:	2301      	movs	r3, #1
 800771e:	2100      	movs	r1, #0
 8007720:	4283      	cmp	r3, r0
 8007722:	db0a      	blt.n	800773a <__s2b+0x32>
 8007724:	0030      	movs	r0, r6
 8007726:	f7ff ff43 	bl	80075b0 <_Balloc>
 800772a:	1e01      	subs	r1, r0, #0
 800772c:	d108      	bne.n	8007740 <__s2b+0x38>
 800772e:	0002      	movs	r2, r0
 8007730:	4b19      	ldr	r3, [pc, #100]	; (8007798 <__s2b+0x90>)
 8007732:	481a      	ldr	r0, [pc, #104]	; (800779c <__s2b+0x94>)
 8007734:	31ce      	adds	r1, #206	; 0xce
 8007736:	f000 fead 	bl	8008494 <__assert_func>
 800773a:	005b      	lsls	r3, r3, #1
 800773c:	3101      	adds	r1, #1
 800773e:	e7ef      	b.n	8007720 <__s2b+0x18>
 8007740:	9b08      	ldr	r3, [sp, #32]
 8007742:	6143      	str	r3, [r0, #20]
 8007744:	2301      	movs	r3, #1
 8007746:	6103      	str	r3, [r0, #16]
 8007748:	2d09      	cmp	r5, #9
 800774a:	dd18      	ble.n	800777e <__s2b+0x76>
 800774c:	0023      	movs	r3, r4
 800774e:	3309      	adds	r3, #9
 8007750:	001f      	movs	r7, r3
 8007752:	9300      	str	r3, [sp, #0]
 8007754:	1964      	adds	r4, r4, r5
 8007756:	783b      	ldrb	r3, [r7, #0]
 8007758:	220a      	movs	r2, #10
 800775a:	0030      	movs	r0, r6
 800775c:	3b30      	subs	r3, #48	; 0x30
 800775e:	f7ff ff8f 	bl	8007680 <__multadd>
 8007762:	3701      	adds	r7, #1
 8007764:	0001      	movs	r1, r0
 8007766:	42a7      	cmp	r7, r4
 8007768:	d1f5      	bne.n	8007756 <__s2b+0x4e>
 800776a:	002c      	movs	r4, r5
 800776c:	9b00      	ldr	r3, [sp, #0]
 800776e:	3c08      	subs	r4, #8
 8007770:	191c      	adds	r4, r3, r4
 8007772:	002f      	movs	r7, r5
 8007774:	9b01      	ldr	r3, [sp, #4]
 8007776:	429f      	cmp	r7, r3
 8007778:	db04      	blt.n	8007784 <__s2b+0x7c>
 800777a:	0008      	movs	r0, r1
 800777c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800777e:	2509      	movs	r5, #9
 8007780:	340a      	adds	r4, #10
 8007782:	e7f6      	b.n	8007772 <__s2b+0x6a>
 8007784:	1b63      	subs	r3, r4, r5
 8007786:	5ddb      	ldrb	r3, [r3, r7]
 8007788:	220a      	movs	r2, #10
 800778a:	0030      	movs	r0, r6
 800778c:	3b30      	subs	r3, #48	; 0x30
 800778e:	f7ff ff77 	bl	8007680 <__multadd>
 8007792:	3701      	adds	r7, #1
 8007794:	0001      	movs	r1, r0
 8007796:	e7ed      	b.n	8007774 <__s2b+0x6c>
 8007798:	08009380 	.word	0x08009380
 800779c:	0800940c 	.word	0x0800940c

080077a0 <__hi0bits>:
 80077a0:	0003      	movs	r3, r0
 80077a2:	0c02      	lsrs	r2, r0, #16
 80077a4:	2000      	movs	r0, #0
 80077a6:	4282      	cmp	r2, r0
 80077a8:	d101      	bne.n	80077ae <__hi0bits+0xe>
 80077aa:	041b      	lsls	r3, r3, #16
 80077ac:	3010      	adds	r0, #16
 80077ae:	0e1a      	lsrs	r2, r3, #24
 80077b0:	d101      	bne.n	80077b6 <__hi0bits+0x16>
 80077b2:	3008      	adds	r0, #8
 80077b4:	021b      	lsls	r3, r3, #8
 80077b6:	0f1a      	lsrs	r2, r3, #28
 80077b8:	d101      	bne.n	80077be <__hi0bits+0x1e>
 80077ba:	3004      	adds	r0, #4
 80077bc:	011b      	lsls	r3, r3, #4
 80077be:	0f9a      	lsrs	r2, r3, #30
 80077c0:	d101      	bne.n	80077c6 <__hi0bits+0x26>
 80077c2:	3002      	adds	r0, #2
 80077c4:	009b      	lsls	r3, r3, #2
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	db03      	blt.n	80077d2 <__hi0bits+0x32>
 80077ca:	3001      	adds	r0, #1
 80077cc:	005b      	lsls	r3, r3, #1
 80077ce:	d400      	bmi.n	80077d2 <__hi0bits+0x32>
 80077d0:	2020      	movs	r0, #32
 80077d2:	4770      	bx	lr

080077d4 <__lo0bits>:
 80077d4:	6803      	ldr	r3, [r0, #0]
 80077d6:	0002      	movs	r2, r0
 80077d8:	2107      	movs	r1, #7
 80077da:	0018      	movs	r0, r3
 80077dc:	4008      	ands	r0, r1
 80077de:	420b      	tst	r3, r1
 80077e0:	d00d      	beq.n	80077fe <__lo0bits+0x2a>
 80077e2:	3906      	subs	r1, #6
 80077e4:	2000      	movs	r0, #0
 80077e6:	420b      	tst	r3, r1
 80077e8:	d105      	bne.n	80077f6 <__lo0bits+0x22>
 80077ea:	3002      	adds	r0, #2
 80077ec:	4203      	tst	r3, r0
 80077ee:	d003      	beq.n	80077f8 <__lo0bits+0x24>
 80077f0:	40cb      	lsrs	r3, r1
 80077f2:	0008      	movs	r0, r1
 80077f4:	6013      	str	r3, [r2, #0]
 80077f6:	4770      	bx	lr
 80077f8:	089b      	lsrs	r3, r3, #2
 80077fa:	6013      	str	r3, [r2, #0]
 80077fc:	e7fb      	b.n	80077f6 <__lo0bits+0x22>
 80077fe:	b299      	uxth	r1, r3
 8007800:	2900      	cmp	r1, #0
 8007802:	d101      	bne.n	8007808 <__lo0bits+0x34>
 8007804:	2010      	movs	r0, #16
 8007806:	0c1b      	lsrs	r3, r3, #16
 8007808:	b2d9      	uxtb	r1, r3
 800780a:	2900      	cmp	r1, #0
 800780c:	d101      	bne.n	8007812 <__lo0bits+0x3e>
 800780e:	3008      	adds	r0, #8
 8007810:	0a1b      	lsrs	r3, r3, #8
 8007812:	0719      	lsls	r1, r3, #28
 8007814:	d101      	bne.n	800781a <__lo0bits+0x46>
 8007816:	3004      	adds	r0, #4
 8007818:	091b      	lsrs	r3, r3, #4
 800781a:	0799      	lsls	r1, r3, #30
 800781c:	d101      	bne.n	8007822 <__lo0bits+0x4e>
 800781e:	3002      	adds	r0, #2
 8007820:	089b      	lsrs	r3, r3, #2
 8007822:	07d9      	lsls	r1, r3, #31
 8007824:	d4e9      	bmi.n	80077fa <__lo0bits+0x26>
 8007826:	3001      	adds	r0, #1
 8007828:	085b      	lsrs	r3, r3, #1
 800782a:	d1e6      	bne.n	80077fa <__lo0bits+0x26>
 800782c:	2020      	movs	r0, #32
 800782e:	e7e2      	b.n	80077f6 <__lo0bits+0x22>

08007830 <__i2b>:
 8007830:	b510      	push	{r4, lr}
 8007832:	000c      	movs	r4, r1
 8007834:	2101      	movs	r1, #1
 8007836:	f7ff febb 	bl	80075b0 <_Balloc>
 800783a:	2800      	cmp	r0, #0
 800783c:	d106      	bne.n	800784c <__i2b+0x1c>
 800783e:	21a0      	movs	r1, #160	; 0xa0
 8007840:	0002      	movs	r2, r0
 8007842:	4b04      	ldr	r3, [pc, #16]	; (8007854 <__i2b+0x24>)
 8007844:	4804      	ldr	r0, [pc, #16]	; (8007858 <__i2b+0x28>)
 8007846:	0049      	lsls	r1, r1, #1
 8007848:	f000 fe24 	bl	8008494 <__assert_func>
 800784c:	2301      	movs	r3, #1
 800784e:	6144      	str	r4, [r0, #20]
 8007850:	6103      	str	r3, [r0, #16]
 8007852:	bd10      	pop	{r4, pc}
 8007854:	08009380 	.word	0x08009380
 8007858:	0800940c 	.word	0x0800940c

0800785c <__multiply>:
 800785c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800785e:	690b      	ldr	r3, [r1, #16]
 8007860:	0014      	movs	r4, r2
 8007862:	6912      	ldr	r2, [r2, #16]
 8007864:	000d      	movs	r5, r1
 8007866:	b089      	sub	sp, #36	; 0x24
 8007868:	4293      	cmp	r3, r2
 800786a:	da01      	bge.n	8007870 <__multiply+0x14>
 800786c:	0025      	movs	r5, r4
 800786e:	000c      	movs	r4, r1
 8007870:	692f      	ldr	r7, [r5, #16]
 8007872:	6926      	ldr	r6, [r4, #16]
 8007874:	6869      	ldr	r1, [r5, #4]
 8007876:	19bb      	adds	r3, r7, r6
 8007878:	9302      	str	r3, [sp, #8]
 800787a:	68ab      	ldr	r3, [r5, #8]
 800787c:	19ba      	adds	r2, r7, r6
 800787e:	4293      	cmp	r3, r2
 8007880:	da00      	bge.n	8007884 <__multiply+0x28>
 8007882:	3101      	adds	r1, #1
 8007884:	f7ff fe94 	bl	80075b0 <_Balloc>
 8007888:	9001      	str	r0, [sp, #4]
 800788a:	2800      	cmp	r0, #0
 800788c:	d106      	bne.n	800789c <__multiply+0x40>
 800788e:	215e      	movs	r1, #94	; 0x5e
 8007890:	0002      	movs	r2, r0
 8007892:	4b48      	ldr	r3, [pc, #288]	; (80079b4 <__multiply+0x158>)
 8007894:	4848      	ldr	r0, [pc, #288]	; (80079b8 <__multiply+0x15c>)
 8007896:	31ff      	adds	r1, #255	; 0xff
 8007898:	f000 fdfc 	bl	8008494 <__assert_func>
 800789c:	9b01      	ldr	r3, [sp, #4]
 800789e:	2200      	movs	r2, #0
 80078a0:	3314      	adds	r3, #20
 80078a2:	469c      	mov	ip, r3
 80078a4:	19bb      	adds	r3, r7, r6
 80078a6:	009b      	lsls	r3, r3, #2
 80078a8:	4463      	add	r3, ip
 80078aa:	9303      	str	r3, [sp, #12]
 80078ac:	4663      	mov	r3, ip
 80078ae:	9903      	ldr	r1, [sp, #12]
 80078b0:	428b      	cmp	r3, r1
 80078b2:	d32c      	bcc.n	800790e <__multiply+0xb2>
 80078b4:	002b      	movs	r3, r5
 80078b6:	0022      	movs	r2, r4
 80078b8:	3314      	adds	r3, #20
 80078ba:	00bf      	lsls	r7, r7, #2
 80078bc:	3214      	adds	r2, #20
 80078be:	9306      	str	r3, [sp, #24]
 80078c0:	00b6      	lsls	r6, r6, #2
 80078c2:	19db      	adds	r3, r3, r7
 80078c4:	9304      	str	r3, [sp, #16]
 80078c6:	1993      	adds	r3, r2, r6
 80078c8:	9307      	str	r3, [sp, #28]
 80078ca:	2304      	movs	r3, #4
 80078cc:	9305      	str	r3, [sp, #20]
 80078ce:	002b      	movs	r3, r5
 80078d0:	9904      	ldr	r1, [sp, #16]
 80078d2:	3315      	adds	r3, #21
 80078d4:	9200      	str	r2, [sp, #0]
 80078d6:	4299      	cmp	r1, r3
 80078d8:	d305      	bcc.n	80078e6 <__multiply+0x8a>
 80078da:	1b4b      	subs	r3, r1, r5
 80078dc:	3b15      	subs	r3, #21
 80078de:	089b      	lsrs	r3, r3, #2
 80078e0:	3301      	adds	r3, #1
 80078e2:	009b      	lsls	r3, r3, #2
 80078e4:	9305      	str	r3, [sp, #20]
 80078e6:	9b07      	ldr	r3, [sp, #28]
 80078e8:	9a00      	ldr	r2, [sp, #0]
 80078ea:	429a      	cmp	r2, r3
 80078ec:	d311      	bcc.n	8007912 <__multiply+0xb6>
 80078ee:	9b02      	ldr	r3, [sp, #8]
 80078f0:	2b00      	cmp	r3, #0
 80078f2:	dd06      	ble.n	8007902 <__multiply+0xa6>
 80078f4:	9b03      	ldr	r3, [sp, #12]
 80078f6:	3b04      	subs	r3, #4
 80078f8:	9303      	str	r3, [sp, #12]
 80078fa:	681b      	ldr	r3, [r3, #0]
 80078fc:	9300      	str	r3, [sp, #0]
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d053      	beq.n	80079aa <__multiply+0x14e>
 8007902:	9b01      	ldr	r3, [sp, #4]
 8007904:	9a02      	ldr	r2, [sp, #8]
 8007906:	0018      	movs	r0, r3
 8007908:	611a      	str	r2, [r3, #16]
 800790a:	b009      	add	sp, #36	; 0x24
 800790c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800790e:	c304      	stmia	r3!, {r2}
 8007910:	e7cd      	b.n	80078ae <__multiply+0x52>
 8007912:	9b00      	ldr	r3, [sp, #0]
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	b298      	uxth	r0, r3
 8007918:	2800      	cmp	r0, #0
 800791a:	d01b      	beq.n	8007954 <__multiply+0xf8>
 800791c:	4667      	mov	r7, ip
 800791e:	2400      	movs	r4, #0
 8007920:	9e06      	ldr	r6, [sp, #24]
 8007922:	ce02      	ldmia	r6!, {r1}
 8007924:	683a      	ldr	r2, [r7, #0]
 8007926:	b28b      	uxth	r3, r1
 8007928:	4343      	muls	r3, r0
 800792a:	b292      	uxth	r2, r2
 800792c:	189b      	adds	r3, r3, r2
 800792e:	191b      	adds	r3, r3, r4
 8007930:	0c0c      	lsrs	r4, r1, #16
 8007932:	4344      	muls	r4, r0
 8007934:	683a      	ldr	r2, [r7, #0]
 8007936:	0c11      	lsrs	r1, r2, #16
 8007938:	1861      	adds	r1, r4, r1
 800793a:	0c1c      	lsrs	r4, r3, #16
 800793c:	1909      	adds	r1, r1, r4
 800793e:	0c0c      	lsrs	r4, r1, #16
 8007940:	b29b      	uxth	r3, r3
 8007942:	0409      	lsls	r1, r1, #16
 8007944:	430b      	orrs	r3, r1
 8007946:	c708      	stmia	r7!, {r3}
 8007948:	9b04      	ldr	r3, [sp, #16]
 800794a:	42b3      	cmp	r3, r6
 800794c:	d8e9      	bhi.n	8007922 <__multiply+0xc6>
 800794e:	4663      	mov	r3, ip
 8007950:	9a05      	ldr	r2, [sp, #20]
 8007952:	509c      	str	r4, [r3, r2]
 8007954:	9b00      	ldr	r3, [sp, #0]
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	0c1e      	lsrs	r6, r3, #16
 800795a:	d020      	beq.n	800799e <__multiply+0x142>
 800795c:	4663      	mov	r3, ip
 800795e:	002c      	movs	r4, r5
 8007960:	4660      	mov	r0, ip
 8007962:	2700      	movs	r7, #0
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	3414      	adds	r4, #20
 8007968:	6822      	ldr	r2, [r4, #0]
 800796a:	b29b      	uxth	r3, r3
 800796c:	b291      	uxth	r1, r2
 800796e:	4371      	muls	r1, r6
 8007970:	6802      	ldr	r2, [r0, #0]
 8007972:	0c12      	lsrs	r2, r2, #16
 8007974:	1889      	adds	r1, r1, r2
 8007976:	19cf      	adds	r7, r1, r7
 8007978:	0439      	lsls	r1, r7, #16
 800797a:	430b      	orrs	r3, r1
 800797c:	6003      	str	r3, [r0, #0]
 800797e:	cc02      	ldmia	r4!, {r1}
 8007980:	6843      	ldr	r3, [r0, #4]
 8007982:	0c09      	lsrs	r1, r1, #16
 8007984:	4371      	muls	r1, r6
 8007986:	b29b      	uxth	r3, r3
 8007988:	0c3f      	lsrs	r7, r7, #16
 800798a:	18cb      	adds	r3, r1, r3
 800798c:	9a04      	ldr	r2, [sp, #16]
 800798e:	19db      	adds	r3, r3, r7
 8007990:	0c1f      	lsrs	r7, r3, #16
 8007992:	3004      	adds	r0, #4
 8007994:	42a2      	cmp	r2, r4
 8007996:	d8e7      	bhi.n	8007968 <__multiply+0x10c>
 8007998:	4662      	mov	r2, ip
 800799a:	9905      	ldr	r1, [sp, #20]
 800799c:	5053      	str	r3, [r2, r1]
 800799e:	9b00      	ldr	r3, [sp, #0]
 80079a0:	3304      	adds	r3, #4
 80079a2:	9300      	str	r3, [sp, #0]
 80079a4:	2304      	movs	r3, #4
 80079a6:	449c      	add	ip, r3
 80079a8:	e79d      	b.n	80078e6 <__multiply+0x8a>
 80079aa:	9b02      	ldr	r3, [sp, #8]
 80079ac:	3b01      	subs	r3, #1
 80079ae:	9302      	str	r3, [sp, #8]
 80079b0:	e79d      	b.n	80078ee <__multiply+0x92>
 80079b2:	46c0      	nop			; (mov r8, r8)
 80079b4:	08009380 	.word	0x08009380
 80079b8:	0800940c 	.word	0x0800940c

080079bc <__pow5mult>:
 80079bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80079be:	2303      	movs	r3, #3
 80079c0:	0015      	movs	r5, r2
 80079c2:	0007      	movs	r7, r0
 80079c4:	000e      	movs	r6, r1
 80079c6:	401a      	ands	r2, r3
 80079c8:	421d      	tst	r5, r3
 80079ca:	d008      	beq.n	80079de <__pow5mult+0x22>
 80079cc:	4925      	ldr	r1, [pc, #148]	; (8007a64 <__pow5mult+0xa8>)
 80079ce:	3a01      	subs	r2, #1
 80079d0:	0092      	lsls	r2, r2, #2
 80079d2:	5852      	ldr	r2, [r2, r1]
 80079d4:	2300      	movs	r3, #0
 80079d6:	0031      	movs	r1, r6
 80079d8:	f7ff fe52 	bl	8007680 <__multadd>
 80079dc:	0006      	movs	r6, r0
 80079de:	10ad      	asrs	r5, r5, #2
 80079e0:	d03d      	beq.n	8007a5e <__pow5mult+0xa2>
 80079e2:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80079e4:	2c00      	cmp	r4, #0
 80079e6:	d10f      	bne.n	8007a08 <__pow5mult+0x4c>
 80079e8:	2010      	movs	r0, #16
 80079ea:	f7ff fdb1 	bl	8007550 <malloc>
 80079ee:	1e02      	subs	r2, r0, #0
 80079f0:	6278      	str	r0, [r7, #36]	; 0x24
 80079f2:	d105      	bne.n	8007a00 <__pow5mult+0x44>
 80079f4:	21d7      	movs	r1, #215	; 0xd7
 80079f6:	4b1c      	ldr	r3, [pc, #112]	; (8007a68 <__pow5mult+0xac>)
 80079f8:	481c      	ldr	r0, [pc, #112]	; (8007a6c <__pow5mult+0xb0>)
 80079fa:	0049      	lsls	r1, r1, #1
 80079fc:	f000 fd4a 	bl	8008494 <__assert_func>
 8007a00:	6044      	str	r4, [r0, #4]
 8007a02:	6084      	str	r4, [r0, #8]
 8007a04:	6004      	str	r4, [r0, #0]
 8007a06:	60c4      	str	r4, [r0, #12]
 8007a08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007a0a:	689c      	ldr	r4, [r3, #8]
 8007a0c:	9301      	str	r3, [sp, #4]
 8007a0e:	2c00      	cmp	r4, #0
 8007a10:	d108      	bne.n	8007a24 <__pow5mult+0x68>
 8007a12:	0038      	movs	r0, r7
 8007a14:	4916      	ldr	r1, [pc, #88]	; (8007a70 <__pow5mult+0xb4>)
 8007a16:	f7ff ff0b 	bl	8007830 <__i2b>
 8007a1a:	9b01      	ldr	r3, [sp, #4]
 8007a1c:	0004      	movs	r4, r0
 8007a1e:	6098      	str	r0, [r3, #8]
 8007a20:	2300      	movs	r3, #0
 8007a22:	6003      	str	r3, [r0, #0]
 8007a24:	2301      	movs	r3, #1
 8007a26:	421d      	tst	r5, r3
 8007a28:	d00a      	beq.n	8007a40 <__pow5mult+0x84>
 8007a2a:	0031      	movs	r1, r6
 8007a2c:	0022      	movs	r2, r4
 8007a2e:	0038      	movs	r0, r7
 8007a30:	f7ff ff14 	bl	800785c <__multiply>
 8007a34:	0031      	movs	r1, r6
 8007a36:	9001      	str	r0, [sp, #4]
 8007a38:	0038      	movs	r0, r7
 8007a3a:	f7ff fdfd 	bl	8007638 <_Bfree>
 8007a3e:	9e01      	ldr	r6, [sp, #4]
 8007a40:	106d      	asrs	r5, r5, #1
 8007a42:	d00c      	beq.n	8007a5e <__pow5mult+0xa2>
 8007a44:	6820      	ldr	r0, [r4, #0]
 8007a46:	2800      	cmp	r0, #0
 8007a48:	d107      	bne.n	8007a5a <__pow5mult+0x9e>
 8007a4a:	0022      	movs	r2, r4
 8007a4c:	0021      	movs	r1, r4
 8007a4e:	0038      	movs	r0, r7
 8007a50:	f7ff ff04 	bl	800785c <__multiply>
 8007a54:	2300      	movs	r3, #0
 8007a56:	6020      	str	r0, [r4, #0]
 8007a58:	6003      	str	r3, [r0, #0]
 8007a5a:	0004      	movs	r4, r0
 8007a5c:	e7e2      	b.n	8007a24 <__pow5mult+0x68>
 8007a5e:	0030      	movs	r0, r6
 8007a60:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007a62:	46c0      	nop			; (mov r8, r8)
 8007a64:	08009558 	.word	0x08009558
 8007a68:	0800930e 	.word	0x0800930e
 8007a6c:	0800940c 	.word	0x0800940c
 8007a70:	00000271 	.word	0x00000271

08007a74 <__lshift>:
 8007a74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a76:	000c      	movs	r4, r1
 8007a78:	0017      	movs	r7, r2
 8007a7a:	6923      	ldr	r3, [r4, #16]
 8007a7c:	1155      	asrs	r5, r2, #5
 8007a7e:	b087      	sub	sp, #28
 8007a80:	18eb      	adds	r3, r5, r3
 8007a82:	9302      	str	r3, [sp, #8]
 8007a84:	3301      	adds	r3, #1
 8007a86:	9301      	str	r3, [sp, #4]
 8007a88:	6849      	ldr	r1, [r1, #4]
 8007a8a:	68a3      	ldr	r3, [r4, #8]
 8007a8c:	9004      	str	r0, [sp, #16]
 8007a8e:	9a01      	ldr	r2, [sp, #4]
 8007a90:	4293      	cmp	r3, r2
 8007a92:	db10      	blt.n	8007ab6 <__lshift+0x42>
 8007a94:	9804      	ldr	r0, [sp, #16]
 8007a96:	f7ff fd8b 	bl	80075b0 <_Balloc>
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	0002      	movs	r2, r0
 8007a9e:	0006      	movs	r6, r0
 8007aa0:	0019      	movs	r1, r3
 8007aa2:	3214      	adds	r2, #20
 8007aa4:	4298      	cmp	r0, r3
 8007aa6:	d10c      	bne.n	8007ac2 <__lshift+0x4e>
 8007aa8:	21da      	movs	r1, #218	; 0xda
 8007aaa:	0002      	movs	r2, r0
 8007aac:	4b26      	ldr	r3, [pc, #152]	; (8007b48 <__lshift+0xd4>)
 8007aae:	4827      	ldr	r0, [pc, #156]	; (8007b4c <__lshift+0xd8>)
 8007ab0:	31ff      	adds	r1, #255	; 0xff
 8007ab2:	f000 fcef 	bl	8008494 <__assert_func>
 8007ab6:	3101      	adds	r1, #1
 8007ab8:	005b      	lsls	r3, r3, #1
 8007aba:	e7e8      	b.n	8007a8e <__lshift+0x1a>
 8007abc:	0098      	lsls	r0, r3, #2
 8007abe:	5011      	str	r1, [r2, r0]
 8007ac0:	3301      	adds	r3, #1
 8007ac2:	42ab      	cmp	r3, r5
 8007ac4:	dbfa      	blt.n	8007abc <__lshift+0x48>
 8007ac6:	43eb      	mvns	r3, r5
 8007ac8:	17db      	asrs	r3, r3, #31
 8007aca:	401d      	ands	r5, r3
 8007acc:	211f      	movs	r1, #31
 8007ace:	0023      	movs	r3, r4
 8007ad0:	0038      	movs	r0, r7
 8007ad2:	00ad      	lsls	r5, r5, #2
 8007ad4:	1955      	adds	r5, r2, r5
 8007ad6:	6922      	ldr	r2, [r4, #16]
 8007ad8:	3314      	adds	r3, #20
 8007ada:	0092      	lsls	r2, r2, #2
 8007adc:	4008      	ands	r0, r1
 8007ade:	4684      	mov	ip, r0
 8007ae0:	189a      	adds	r2, r3, r2
 8007ae2:	420f      	tst	r7, r1
 8007ae4:	d02a      	beq.n	8007b3c <__lshift+0xc8>
 8007ae6:	3101      	adds	r1, #1
 8007ae8:	1a09      	subs	r1, r1, r0
 8007aea:	9105      	str	r1, [sp, #20]
 8007aec:	2100      	movs	r1, #0
 8007aee:	9503      	str	r5, [sp, #12]
 8007af0:	4667      	mov	r7, ip
 8007af2:	6818      	ldr	r0, [r3, #0]
 8007af4:	40b8      	lsls	r0, r7
 8007af6:	4301      	orrs	r1, r0
 8007af8:	9803      	ldr	r0, [sp, #12]
 8007afa:	c002      	stmia	r0!, {r1}
 8007afc:	cb02      	ldmia	r3!, {r1}
 8007afe:	9003      	str	r0, [sp, #12]
 8007b00:	9805      	ldr	r0, [sp, #20]
 8007b02:	40c1      	lsrs	r1, r0
 8007b04:	429a      	cmp	r2, r3
 8007b06:	d8f3      	bhi.n	8007af0 <__lshift+0x7c>
 8007b08:	0020      	movs	r0, r4
 8007b0a:	3015      	adds	r0, #21
 8007b0c:	2304      	movs	r3, #4
 8007b0e:	4282      	cmp	r2, r0
 8007b10:	d304      	bcc.n	8007b1c <__lshift+0xa8>
 8007b12:	1b13      	subs	r3, r2, r4
 8007b14:	3b15      	subs	r3, #21
 8007b16:	089b      	lsrs	r3, r3, #2
 8007b18:	3301      	adds	r3, #1
 8007b1a:	009b      	lsls	r3, r3, #2
 8007b1c:	50e9      	str	r1, [r5, r3]
 8007b1e:	2900      	cmp	r1, #0
 8007b20:	d002      	beq.n	8007b28 <__lshift+0xb4>
 8007b22:	9b02      	ldr	r3, [sp, #8]
 8007b24:	3302      	adds	r3, #2
 8007b26:	9301      	str	r3, [sp, #4]
 8007b28:	9b01      	ldr	r3, [sp, #4]
 8007b2a:	9804      	ldr	r0, [sp, #16]
 8007b2c:	3b01      	subs	r3, #1
 8007b2e:	0021      	movs	r1, r4
 8007b30:	6133      	str	r3, [r6, #16]
 8007b32:	f7ff fd81 	bl	8007638 <_Bfree>
 8007b36:	0030      	movs	r0, r6
 8007b38:	b007      	add	sp, #28
 8007b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b3c:	cb02      	ldmia	r3!, {r1}
 8007b3e:	c502      	stmia	r5!, {r1}
 8007b40:	429a      	cmp	r2, r3
 8007b42:	d8fb      	bhi.n	8007b3c <__lshift+0xc8>
 8007b44:	e7f0      	b.n	8007b28 <__lshift+0xb4>
 8007b46:	46c0      	nop			; (mov r8, r8)
 8007b48:	08009380 	.word	0x08009380
 8007b4c:	0800940c 	.word	0x0800940c

08007b50 <__mcmp>:
 8007b50:	6902      	ldr	r2, [r0, #16]
 8007b52:	690b      	ldr	r3, [r1, #16]
 8007b54:	b530      	push	{r4, r5, lr}
 8007b56:	0004      	movs	r4, r0
 8007b58:	1ad0      	subs	r0, r2, r3
 8007b5a:	429a      	cmp	r2, r3
 8007b5c:	d10d      	bne.n	8007b7a <__mcmp+0x2a>
 8007b5e:	009b      	lsls	r3, r3, #2
 8007b60:	3414      	adds	r4, #20
 8007b62:	3114      	adds	r1, #20
 8007b64:	18e2      	adds	r2, r4, r3
 8007b66:	18c9      	adds	r1, r1, r3
 8007b68:	3a04      	subs	r2, #4
 8007b6a:	3904      	subs	r1, #4
 8007b6c:	6815      	ldr	r5, [r2, #0]
 8007b6e:	680b      	ldr	r3, [r1, #0]
 8007b70:	429d      	cmp	r5, r3
 8007b72:	d003      	beq.n	8007b7c <__mcmp+0x2c>
 8007b74:	2001      	movs	r0, #1
 8007b76:	429d      	cmp	r5, r3
 8007b78:	d303      	bcc.n	8007b82 <__mcmp+0x32>
 8007b7a:	bd30      	pop	{r4, r5, pc}
 8007b7c:	4294      	cmp	r4, r2
 8007b7e:	d3f3      	bcc.n	8007b68 <__mcmp+0x18>
 8007b80:	e7fb      	b.n	8007b7a <__mcmp+0x2a>
 8007b82:	4240      	negs	r0, r0
 8007b84:	e7f9      	b.n	8007b7a <__mcmp+0x2a>
	...

08007b88 <__mdiff>:
 8007b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b8a:	000e      	movs	r6, r1
 8007b8c:	0007      	movs	r7, r0
 8007b8e:	0011      	movs	r1, r2
 8007b90:	0030      	movs	r0, r6
 8007b92:	b087      	sub	sp, #28
 8007b94:	0014      	movs	r4, r2
 8007b96:	f7ff ffdb 	bl	8007b50 <__mcmp>
 8007b9a:	1e05      	subs	r5, r0, #0
 8007b9c:	d110      	bne.n	8007bc0 <__mdiff+0x38>
 8007b9e:	0001      	movs	r1, r0
 8007ba0:	0038      	movs	r0, r7
 8007ba2:	f7ff fd05 	bl	80075b0 <_Balloc>
 8007ba6:	1e02      	subs	r2, r0, #0
 8007ba8:	d104      	bne.n	8007bb4 <__mdiff+0x2c>
 8007baa:	4b40      	ldr	r3, [pc, #256]	; (8007cac <__mdiff+0x124>)
 8007bac:	4940      	ldr	r1, [pc, #256]	; (8007cb0 <__mdiff+0x128>)
 8007bae:	4841      	ldr	r0, [pc, #260]	; (8007cb4 <__mdiff+0x12c>)
 8007bb0:	f000 fc70 	bl	8008494 <__assert_func>
 8007bb4:	2301      	movs	r3, #1
 8007bb6:	6145      	str	r5, [r0, #20]
 8007bb8:	6103      	str	r3, [r0, #16]
 8007bba:	0010      	movs	r0, r2
 8007bbc:	b007      	add	sp, #28
 8007bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007bc0:	2301      	movs	r3, #1
 8007bc2:	9301      	str	r3, [sp, #4]
 8007bc4:	2800      	cmp	r0, #0
 8007bc6:	db04      	blt.n	8007bd2 <__mdiff+0x4a>
 8007bc8:	0023      	movs	r3, r4
 8007bca:	0034      	movs	r4, r6
 8007bcc:	001e      	movs	r6, r3
 8007bce:	2300      	movs	r3, #0
 8007bd0:	9301      	str	r3, [sp, #4]
 8007bd2:	0038      	movs	r0, r7
 8007bd4:	6861      	ldr	r1, [r4, #4]
 8007bd6:	f7ff fceb 	bl	80075b0 <_Balloc>
 8007bda:	1e02      	subs	r2, r0, #0
 8007bdc:	d103      	bne.n	8007be6 <__mdiff+0x5e>
 8007bde:	2190      	movs	r1, #144	; 0x90
 8007be0:	4b32      	ldr	r3, [pc, #200]	; (8007cac <__mdiff+0x124>)
 8007be2:	0089      	lsls	r1, r1, #2
 8007be4:	e7e3      	b.n	8007bae <__mdiff+0x26>
 8007be6:	9b01      	ldr	r3, [sp, #4]
 8007be8:	2700      	movs	r7, #0
 8007bea:	60c3      	str	r3, [r0, #12]
 8007bec:	6920      	ldr	r0, [r4, #16]
 8007bee:	3414      	adds	r4, #20
 8007bf0:	9401      	str	r4, [sp, #4]
 8007bf2:	9b01      	ldr	r3, [sp, #4]
 8007bf4:	0084      	lsls	r4, r0, #2
 8007bf6:	191b      	adds	r3, r3, r4
 8007bf8:	0034      	movs	r4, r6
 8007bfa:	9302      	str	r3, [sp, #8]
 8007bfc:	6933      	ldr	r3, [r6, #16]
 8007bfe:	3414      	adds	r4, #20
 8007c00:	0099      	lsls	r1, r3, #2
 8007c02:	1863      	adds	r3, r4, r1
 8007c04:	9303      	str	r3, [sp, #12]
 8007c06:	0013      	movs	r3, r2
 8007c08:	3314      	adds	r3, #20
 8007c0a:	469c      	mov	ip, r3
 8007c0c:	9305      	str	r3, [sp, #20]
 8007c0e:	9b01      	ldr	r3, [sp, #4]
 8007c10:	9304      	str	r3, [sp, #16]
 8007c12:	9b04      	ldr	r3, [sp, #16]
 8007c14:	cc02      	ldmia	r4!, {r1}
 8007c16:	cb20      	ldmia	r3!, {r5}
 8007c18:	9304      	str	r3, [sp, #16]
 8007c1a:	b2ab      	uxth	r3, r5
 8007c1c:	19df      	adds	r7, r3, r7
 8007c1e:	b28b      	uxth	r3, r1
 8007c20:	1afb      	subs	r3, r7, r3
 8007c22:	0c09      	lsrs	r1, r1, #16
 8007c24:	0c2d      	lsrs	r5, r5, #16
 8007c26:	1a6d      	subs	r5, r5, r1
 8007c28:	1419      	asrs	r1, r3, #16
 8007c2a:	186d      	adds	r5, r5, r1
 8007c2c:	4661      	mov	r1, ip
 8007c2e:	142f      	asrs	r7, r5, #16
 8007c30:	b29b      	uxth	r3, r3
 8007c32:	042d      	lsls	r5, r5, #16
 8007c34:	432b      	orrs	r3, r5
 8007c36:	c108      	stmia	r1!, {r3}
 8007c38:	9b03      	ldr	r3, [sp, #12]
 8007c3a:	468c      	mov	ip, r1
 8007c3c:	42a3      	cmp	r3, r4
 8007c3e:	d8e8      	bhi.n	8007c12 <__mdiff+0x8a>
 8007c40:	0031      	movs	r1, r6
 8007c42:	9c03      	ldr	r4, [sp, #12]
 8007c44:	3115      	adds	r1, #21
 8007c46:	2304      	movs	r3, #4
 8007c48:	428c      	cmp	r4, r1
 8007c4a:	d304      	bcc.n	8007c56 <__mdiff+0xce>
 8007c4c:	1ba3      	subs	r3, r4, r6
 8007c4e:	3b15      	subs	r3, #21
 8007c50:	089b      	lsrs	r3, r3, #2
 8007c52:	3301      	adds	r3, #1
 8007c54:	009b      	lsls	r3, r3, #2
 8007c56:	9901      	ldr	r1, [sp, #4]
 8007c58:	18cc      	adds	r4, r1, r3
 8007c5a:	9905      	ldr	r1, [sp, #20]
 8007c5c:	0026      	movs	r6, r4
 8007c5e:	18cb      	adds	r3, r1, r3
 8007c60:	469c      	mov	ip, r3
 8007c62:	9902      	ldr	r1, [sp, #8]
 8007c64:	428e      	cmp	r6, r1
 8007c66:	d310      	bcc.n	8007c8a <__mdiff+0x102>
 8007c68:	9e02      	ldr	r6, [sp, #8]
 8007c6a:	1ee1      	subs	r1, r4, #3
 8007c6c:	2500      	movs	r5, #0
 8007c6e:	428e      	cmp	r6, r1
 8007c70:	d304      	bcc.n	8007c7c <__mdiff+0xf4>
 8007c72:	0031      	movs	r1, r6
 8007c74:	3103      	adds	r1, #3
 8007c76:	1b0c      	subs	r4, r1, r4
 8007c78:	08a4      	lsrs	r4, r4, #2
 8007c7a:	00a5      	lsls	r5, r4, #2
 8007c7c:	195b      	adds	r3, r3, r5
 8007c7e:	3b04      	subs	r3, #4
 8007c80:	6819      	ldr	r1, [r3, #0]
 8007c82:	2900      	cmp	r1, #0
 8007c84:	d00f      	beq.n	8007ca6 <__mdiff+0x11e>
 8007c86:	6110      	str	r0, [r2, #16]
 8007c88:	e797      	b.n	8007bba <__mdiff+0x32>
 8007c8a:	ce02      	ldmia	r6!, {r1}
 8007c8c:	b28d      	uxth	r5, r1
 8007c8e:	19ed      	adds	r5, r5, r7
 8007c90:	0c0f      	lsrs	r7, r1, #16
 8007c92:	1429      	asrs	r1, r5, #16
 8007c94:	1879      	adds	r1, r7, r1
 8007c96:	140f      	asrs	r7, r1, #16
 8007c98:	b2ad      	uxth	r5, r5
 8007c9a:	0409      	lsls	r1, r1, #16
 8007c9c:	430d      	orrs	r5, r1
 8007c9e:	4661      	mov	r1, ip
 8007ca0:	c120      	stmia	r1!, {r5}
 8007ca2:	468c      	mov	ip, r1
 8007ca4:	e7dd      	b.n	8007c62 <__mdiff+0xda>
 8007ca6:	3801      	subs	r0, #1
 8007ca8:	e7e9      	b.n	8007c7e <__mdiff+0xf6>
 8007caa:	46c0      	nop			; (mov r8, r8)
 8007cac:	08009380 	.word	0x08009380
 8007cb0:	00000232 	.word	0x00000232
 8007cb4:	0800940c 	.word	0x0800940c

08007cb8 <__ulp>:
 8007cb8:	4b0f      	ldr	r3, [pc, #60]	; (8007cf8 <__ulp+0x40>)
 8007cba:	4019      	ands	r1, r3
 8007cbc:	4b0f      	ldr	r3, [pc, #60]	; (8007cfc <__ulp+0x44>)
 8007cbe:	18c9      	adds	r1, r1, r3
 8007cc0:	2900      	cmp	r1, #0
 8007cc2:	dd04      	ble.n	8007cce <__ulp+0x16>
 8007cc4:	2200      	movs	r2, #0
 8007cc6:	000b      	movs	r3, r1
 8007cc8:	0010      	movs	r0, r2
 8007cca:	0019      	movs	r1, r3
 8007ccc:	4770      	bx	lr
 8007cce:	4249      	negs	r1, r1
 8007cd0:	2200      	movs	r2, #0
 8007cd2:	2300      	movs	r3, #0
 8007cd4:	1509      	asrs	r1, r1, #20
 8007cd6:	2913      	cmp	r1, #19
 8007cd8:	dc04      	bgt.n	8007ce4 <__ulp+0x2c>
 8007cda:	2080      	movs	r0, #128	; 0x80
 8007cdc:	0300      	lsls	r0, r0, #12
 8007cde:	4108      	asrs	r0, r1
 8007ce0:	0003      	movs	r3, r0
 8007ce2:	e7f1      	b.n	8007cc8 <__ulp+0x10>
 8007ce4:	3914      	subs	r1, #20
 8007ce6:	2001      	movs	r0, #1
 8007ce8:	291e      	cmp	r1, #30
 8007cea:	dc02      	bgt.n	8007cf2 <__ulp+0x3a>
 8007cec:	2080      	movs	r0, #128	; 0x80
 8007cee:	0600      	lsls	r0, r0, #24
 8007cf0:	40c8      	lsrs	r0, r1
 8007cf2:	0002      	movs	r2, r0
 8007cf4:	e7e8      	b.n	8007cc8 <__ulp+0x10>
 8007cf6:	46c0      	nop			; (mov r8, r8)
 8007cf8:	7ff00000 	.word	0x7ff00000
 8007cfc:	fcc00000 	.word	0xfcc00000

08007d00 <__b2d>:
 8007d00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007d02:	0006      	movs	r6, r0
 8007d04:	6903      	ldr	r3, [r0, #16]
 8007d06:	3614      	adds	r6, #20
 8007d08:	009b      	lsls	r3, r3, #2
 8007d0a:	18f3      	adds	r3, r6, r3
 8007d0c:	1f1d      	subs	r5, r3, #4
 8007d0e:	682c      	ldr	r4, [r5, #0]
 8007d10:	000f      	movs	r7, r1
 8007d12:	0020      	movs	r0, r4
 8007d14:	9301      	str	r3, [sp, #4]
 8007d16:	f7ff fd43 	bl	80077a0 <__hi0bits>
 8007d1a:	2320      	movs	r3, #32
 8007d1c:	1a1b      	subs	r3, r3, r0
 8007d1e:	491f      	ldr	r1, [pc, #124]	; (8007d9c <__b2d+0x9c>)
 8007d20:	603b      	str	r3, [r7, #0]
 8007d22:	280a      	cmp	r0, #10
 8007d24:	dc16      	bgt.n	8007d54 <__b2d+0x54>
 8007d26:	230b      	movs	r3, #11
 8007d28:	0027      	movs	r7, r4
 8007d2a:	1a1b      	subs	r3, r3, r0
 8007d2c:	40df      	lsrs	r7, r3
 8007d2e:	4339      	orrs	r1, r7
 8007d30:	469c      	mov	ip, r3
 8007d32:	000b      	movs	r3, r1
 8007d34:	2100      	movs	r1, #0
 8007d36:	42ae      	cmp	r6, r5
 8007d38:	d202      	bcs.n	8007d40 <__b2d+0x40>
 8007d3a:	9901      	ldr	r1, [sp, #4]
 8007d3c:	3908      	subs	r1, #8
 8007d3e:	6809      	ldr	r1, [r1, #0]
 8007d40:	3015      	adds	r0, #21
 8007d42:	4084      	lsls	r4, r0
 8007d44:	4660      	mov	r0, ip
 8007d46:	40c1      	lsrs	r1, r0
 8007d48:	430c      	orrs	r4, r1
 8007d4a:	0022      	movs	r2, r4
 8007d4c:	0010      	movs	r0, r2
 8007d4e:	0019      	movs	r1, r3
 8007d50:	b003      	add	sp, #12
 8007d52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007d54:	2700      	movs	r7, #0
 8007d56:	42ae      	cmp	r6, r5
 8007d58:	d202      	bcs.n	8007d60 <__b2d+0x60>
 8007d5a:	9d01      	ldr	r5, [sp, #4]
 8007d5c:	3d08      	subs	r5, #8
 8007d5e:	682f      	ldr	r7, [r5, #0]
 8007d60:	230b      	movs	r3, #11
 8007d62:	425b      	negs	r3, r3
 8007d64:	469c      	mov	ip, r3
 8007d66:	4484      	add	ip, r0
 8007d68:	280b      	cmp	r0, #11
 8007d6a:	d013      	beq.n	8007d94 <__b2d+0x94>
 8007d6c:	4663      	mov	r3, ip
 8007d6e:	2020      	movs	r0, #32
 8007d70:	409c      	lsls	r4, r3
 8007d72:	1ac0      	subs	r0, r0, r3
 8007d74:	003b      	movs	r3, r7
 8007d76:	40c3      	lsrs	r3, r0
 8007d78:	431c      	orrs	r4, r3
 8007d7a:	4321      	orrs	r1, r4
 8007d7c:	000b      	movs	r3, r1
 8007d7e:	2100      	movs	r1, #0
 8007d80:	42b5      	cmp	r5, r6
 8007d82:	d901      	bls.n	8007d88 <__b2d+0x88>
 8007d84:	3d04      	subs	r5, #4
 8007d86:	6829      	ldr	r1, [r5, #0]
 8007d88:	4664      	mov	r4, ip
 8007d8a:	40c1      	lsrs	r1, r0
 8007d8c:	40a7      	lsls	r7, r4
 8007d8e:	430f      	orrs	r7, r1
 8007d90:	003a      	movs	r2, r7
 8007d92:	e7db      	b.n	8007d4c <__b2d+0x4c>
 8007d94:	4321      	orrs	r1, r4
 8007d96:	000b      	movs	r3, r1
 8007d98:	e7fa      	b.n	8007d90 <__b2d+0x90>
 8007d9a:	46c0      	nop			; (mov r8, r8)
 8007d9c:	3ff00000 	.word	0x3ff00000

08007da0 <__d2b>:
 8007da0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007da2:	2101      	movs	r1, #1
 8007da4:	0014      	movs	r4, r2
 8007da6:	001e      	movs	r6, r3
 8007da8:	9f08      	ldr	r7, [sp, #32]
 8007daa:	f7ff fc01 	bl	80075b0 <_Balloc>
 8007dae:	1e05      	subs	r5, r0, #0
 8007db0:	d105      	bne.n	8007dbe <__d2b+0x1e>
 8007db2:	0002      	movs	r2, r0
 8007db4:	4b26      	ldr	r3, [pc, #152]	; (8007e50 <__d2b+0xb0>)
 8007db6:	4927      	ldr	r1, [pc, #156]	; (8007e54 <__d2b+0xb4>)
 8007db8:	4827      	ldr	r0, [pc, #156]	; (8007e58 <__d2b+0xb8>)
 8007dba:	f000 fb6b 	bl	8008494 <__assert_func>
 8007dbe:	0333      	lsls	r3, r6, #12
 8007dc0:	0076      	lsls	r6, r6, #1
 8007dc2:	0b1b      	lsrs	r3, r3, #12
 8007dc4:	0d76      	lsrs	r6, r6, #21
 8007dc6:	d124      	bne.n	8007e12 <__d2b+0x72>
 8007dc8:	9301      	str	r3, [sp, #4]
 8007dca:	2c00      	cmp	r4, #0
 8007dcc:	d027      	beq.n	8007e1e <__d2b+0x7e>
 8007dce:	4668      	mov	r0, sp
 8007dd0:	9400      	str	r4, [sp, #0]
 8007dd2:	f7ff fcff 	bl	80077d4 <__lo0bits>
 8007dd6:	9c00      	ldr	r4, [sp, #0]
 8007dd8:	2800      	cmp	r0, #0
 8007dda:	d01e      	beq.n	8007e1a <__d2b+0x7a>
 8007ddc:	9b01      	ldr	r3, [sp, #4]
 8007dde:	2120      	movs	r1, #32
 8007de0:	001a      	movs	r2, r3
 8007de2:	1a09      	subs	r1, r1, r0
 8007de4:	408a      	lsls	r2, r1
 8007de6:	40c3      	lsrs	r3, r0
 8007de8:	4322      	orrs	r2, r4
 8007dea:	616a      	str	r2, [r5, #20]
 8007dec:	9301      	str	r3, [sp, #4]
 8007dee:	9c01      	ldr	r4, [sp, #4]
 8007df0:	61ac      	str	r4, [r5, #24]
 8007df2:	1e63      	subs	r3, r4, #1
 8007df4:	419c      	sbcs	r4, r3
 8007df6:	3401      	adds	r4, #1
 8007df8:	612c      	str	r4, [r5, #16]
 8007dfa:	2e00      	cmp	r6, #0
 8007dfc:	d018      	beq.n	8007e30 <__d2b+0x90>
 8007dfe:	4b17      	ldr	r3, [pc, #92]	; (8007e5c <__d2b+0xbc>)
 8007e00:	18f6      	adds	r6, r6, r3
 8007e02:	2335      	movs	r3, #53	; 0x35
 8007e04:	1836      	adds	r6, r6, r0
 8007e06:	1a18      	subs	r0, r3, r0
 8007e08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e0a:	603e      	str	r6, [r7, #0]
 8007e0c:	6018      	str	r0, [r3, #0]
 8007e0e:	0028      	movs	r0, r5
 8007e10:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007e12:	2280      	movs	r2, #128	; 0x80
 8007e14:	0352      	lsls	r2, r2, #13
 8007e16:	4313      	orrs	r3, r2
 8007e18:	e7d6      	b.n	8007dc8 <__d2b+0x28>
 8007e1a:	616c      	str	r4, [r5, #20]
 8007e1c:	e7e7      	b.n	8007dee <__d2b+0x4e>
 8007e1e:	a801      	add	r0, sp, #4
 8007e20:	f7ff fcd8 	bl	80077d4 <__lo0bits>
 8007e24:	2401      	movs	r4, #1
 8007e26:	9b01      	ldr	r3, [sp, #4]
 8007e28:	612c      	str	r4, [r5, #16]
 8007e2a:	616b      	str	r3, [r5, #20]
 8007e2c:	3020      	adds	r0, #32
 8007e2e:	e7e4      	b.n	8007dfa <__d2b+0x5a>
 8007e30:	4b0b      	ldr	r3, [pc, #44]	; (8007e60 <__d2b+0xc0>)
 8007e32:	18c0      	adds	r0, r0, r3
 8007e34:	4b0b      	ldr	r3, [pc, #44]	; (8007e64 <__d2b+0xc4>)
 8007e36:	6038      	str	r0, [r7, #0]
 8007e38:	18e3      	adds	r3, r4, r3
 8007e3a:	009b      	lsls	r3, r3, #2
 8007e3c:	18eb      	adds	r3, r5, r3
 8007e3e:	6958      	ldr	r0, [r3, #20]
 8007e40:	f7ff fcae 	bl	80077a0 <__hi0bits>
 8007e44:	0164      	lsls	r4, r4, #5
 8007e46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e48:	1a24      	subs	r4, r4, r0
 8007e4a:	601c      	str	r4, [r3, #0]
 8007e4c:	e7df      	b.n	8007e0e <__d2b+0x6e>
 8007e4e:	46c0      	nop			; (mov r8, r8)
 8007e50:	08009380 	.word	0x08009380
 8007e54:	0000030a 	.word	0x0000030a
 8007e58:	0800940c 	.word	0x0800940c
 8007e5c:	fffffbcd 	.word	0xfffffbcd
 8007e60:	fffffbce 	.word	0xfffffbce
 8007e64:	3fffffff 	.word	0x3fffffff

08007e68 <__ratio>:
 8007e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e6a:	b087      	sub	sp, #28
 8007e6c:	000f      	movs	r7, r1
 8007e6e:	a904      	add	r1, sp, #16
 8007e70:	0006      	movs	r6, r0
 8007e72:	f7ff ff45 	bl	8007d00 <__b2d>
 8007e76:	9000      	str	r0, [sp, #0]
 8007e78:	9101      	str	r1, [sp, #4]
 8007e7a:	9c00      	ldr	r4, [sp, #0]
 8007e7c:	9d01      	ldr	r5, [sp, #4]
 8007e7e:	0038      	movs	r0, r7
 8007e80:	a905      	add	r1, sp, #20
 8007e82:	f7ff ff3d 	bl	8007d00 <__b2d>
 8007e86:	9002      	str	r0, [sp, #8]
 8007e88:	9103      	str	r1, [sp, #12]
 8007e8a:	9a02      	ldr	r2, [sp, #8]
 8007e8c:	9b03      	ldr	r3, [sp, #12]
 8007e8e:	6931      	ldr	r1, [r6, #16]
 8007e90:	6938      	ldr	r0, [r7, #16]
 8007e92:	9e05      	ldr	r6, [sp, #20]
 8007e94:	1a08      	subs	r0, r1, r0
 8007e96:	9904      	ldr	r1, [sp, #16]
 8007e98:	0140      	lsls	r0, r0, #5
 8007e9a:	1b89      	subs	r1, r1, r6
 8007e9c:	1841      	adds	r1, r0, r1
 8007e9e:	0508      	lsls	r0, r1, #20
 8007ea0:	2900      	cmp	r1, #0
 8007ea2:	dd07      	ble.n	8007eb4 <__ratio+0x4c>
 8007ea4:	9901      	ldr	r1, [sp, #4]
 8007ea6:	1845      	adds	r5, r0, r1
 8007ea8:	0020      	movs	r0, r4
 8007eaa:	0029      	movs	r1, r5
 8007eac:	f7f8 fea8 	bl	8000c00 <__aeabi_ddiv>
 8007eb0:	b007      	add	sp, #28
 8007eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007eb4:	9903      	ldr	r1, [sp, #12]
 8007eb6:	1a0b      	subs	r3, r1, r0
 8007eb8:	e7f6      	b.n	8007ea8 <__ratio+0x40>

08007eba <__copybits>:
 8007eba:	b570      	push	{r4, r5, r6, lr}
 8007ebc:	0014      	movs	r4, r2
 8007ebe:	0005      	movs	r5, r0
 8007ec0:	3901      	subs	r1, #1
 8007ec2:	6913      	ldr	r3, [r2, #16]
 8007ec4:	1149      	asrs	r1, r1, #5
 8007ec6:	3101      	adds	r1, #1
 8007ec8:	0089      	lsls	r1, r1, #2
 8007eca:	3414      	adds	r4, #20
 8007ecc:	009b      	lsls	r3, r3, #2
 8007ece:	1841      	adds	r1, r0, r1
 8007ed0:	18e3      	adds	r3, r4, r3
 8007ed2:	42a3      	cmp	r3, r4
 8007ed4:	d80d      	bhi.n	8007ef2 <__copybits+0x38>
 8007ed6:	0014      	movs	r4, r2
 8007ed8:	3411      	adds	r4, #17
 8007eda:	2500      	movs	r5, #0
 8007edc:	429c      	cmp	r4, r3
 8007ede:	d803      	bhi.n	8007ee8 <__copybits+0x2e>
 8007ee0:	1a9b      	subs	r3, r3, r2
 8007ee2:	3b11      	subs	r3, #17
 8007ee4:	089b      	lsrs	r3, r3, #2
 8007ee6:	009d      	lsls	r5, r3, #2
 8007ee8:	2300      	movs	r3, #0
 8007eea:	1940      	adds	r0, r0, r5
 8007eec:	4281      	cmp	r1, r0
 8007eee:	d803      	bhi.n	8007ef8 <__copybits+0x3e>
 8007ef0:	bd70      	pop	{r4, r5, r6, pc}
 8007ef2:	cc40      	ldmia	r4!, {r6}
 8007ef4:	c540      	stmia	r5!, {r6}
 8007ef6:	e7ec      	b.n	8007ed2 <__copybits+0x18>
 8007ef8:	c008      	stmia	r0!, {r3}
 8007efa:	e7f7      	b.n	8007eec <__copybits+0x32>

08007efc <__any_on>:
 8007efc:	0002      	movs	r2, r0
 8007efe:	6900      	ldr	r0, [r0, #16]
 8007f00:	b510      	push	{r4, lr}
 8007f02:	3214      	adds	r2, #20
 8007f04:	114b      	asrs	r3, r1, #5
 8007f06:	4298      	cmp	r0, r3
 8007f08:	db13      	blt.n	8007f32 <__any_on+0x36>
 8007f0a:	dd0c      	ble.n	8007f26 <__any_on+0x2a>
 8007f0c:	241f      	movs	r4, #31
 8007f0e:	0008      	movs	r0, r1
 8007f10:	4020      	ands	r0, r4
 8007f12:	4221      	tst	r1, r4
 8007f14:	d007      	beq.n	8007f26 <__any_on+0x2a>
 8007f16:	0099      	lsls	r1, r3, #2
 8007f18:	588c      	ldr	r4, [r1, r2]
 8007f1a:	0021      	movs	r1, r4
 8007f1c:	40c1      	lsrs	r1, r0
 8007f1e:	4081      	lsls	r1, r0
 8007f20:	2001      	movs	r0, #1
 8007f22:	428c      	cmp	r4, r1
 8007f24:	d104      	bne.n	8007f30 <__any_on+0x34>
 8007f26:	009b      	lsls	r3, r3, #2
 8007f28:	18d3      	adds	r3, r2, r3
 8007f2a:	4293      	cmp	r3, r2
 8007f2c:	d803      	bhi.n	8007f36 <__any_on+0x3a>
 8007f2e:	2000      	movs	r0, #0
 8007f30:	bd10      	pop	{r4, pc}
 8007f32:	0003      	movs	r3, r0
 8007f34:	e7f7      	b.n	8007f26 <__any_on+0x2a>
 8007f36:	3b04      	subs	r3, #4
 8007f38:	6819      	ldr	r1, [r3, #0]
 8007f3a:	2900      	cmp	r1, #0
 8007f3c:	d0f5      	beq.n	8007f2a <__any_on+0x2e>
 8007f3e:	2001      	movs	r0, #1
 8007f40:	e7f6      	b.n	8007f30 <__any_on+0x34>

08007f42 <_calloc_r>:
 8007f42:	b570      	push	{r4, r5, r6, lr}
 8007f44:	0c13      	lsrs	r3, r2, #16
 8007f46:	0c0d      	lsrs	r5, r1, #16
 8007f48:	d11e      	bne.n	8007f88 <_calloc_r+0x46>
 8007f4a:	2b00      	cmp	r3, #0
 8007f4c:	d10c      	bne.n	8007f68 <_calloc_r+0x26>
 8007f4e:	b289      	uxth	r1, r1
 8007f50:	b294      	uxth	r4, r2
 8007f52:	434c      	muls	r4, r1
 8007f54:	0021      	movs	r1, r4
 8007f56:	f000 f88d 	bl	8008074 <_malloc_r>
 8007f5a:	1e05      	subs	r5, r0, #0
 8007f5c:	d01b      	beq.n	8007f96 <_calloc_r+0x54>
 8007f5e:	0022      	movs	r2, r4
 8007f60:	2100      	movs	r1, #0
 8007f62:	f7fc fb6f 	bl	8004644 <memset>
 8007f66:	e016      	b.n	8007f96 <_calloc_r+0x54>
 8007f68:	1c1d      	adds	r5, r3, #0
 8007f6a:	1c0b      	adds	r3, r1, #0
 8007f6c:	b292      	uxth	r2, r2
 8007f6e:	b289      	uxth	r1, r1
 8007f70:	b29c      	uxth	r4, r3
 8007f72:	4351      	muls	r1, r2
 8007f74:	b2ab      	uxth	r3, r5
 8007f76:	4363      	muls	r3, r4
 8007f78:	0c0c      	lsrs	r4, r1, #16
 8007f7a:	191c      	adds	r4, r3, r4
 8007f7c:	0c22      	lsrs	r2, r4, #16
 8007f7e:	d107      	bne.n	8007f90 <_calloc_r+0x4e>
 8007f80:	0424      	lsls	r4, r4, #16
 8007f82:	b289      	uxth	r1, r1
 8007f84:	430c      	orrs	r4, r1
 8007f86:	e7e5      	b.n	8007f54 <_calloc_r+0x12>
 8007f88:	2b00      	cmp	r3, #0
 8007f8a:	d101      	bne.n	8007f90 <_calloc_r+0x4e>
 8007f8c:	1c13      	adds	r3, r2, #0
 8007f8e:	e7ed      	b.n	8007f6c <_calloc_r+0x2a>
 8007f90:	230c      	movs	r3, #12
 8007f92:	2500      	movs	r5, #0
 8007f94:	6003      	str	r3, [r0, #0]
 8007f96:	0028      	movs	r0, r5
 8007f98:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f9c <_free_r>:
 8007f9c:	b570      	push	{r4, r5, r6, lr}
 8007f9e:	0005      	movs	r5, r0
 8007fa0:	2900      	cmp	r1, #0
 8007fa2:	d010      	beq.n	8007fc6 <_free_r+0x2a>
 8007fa4:	1f0c      	subs	r4, r1, #4
 8007fa6:	6823      	ldr	r3, [r4, #0]
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	da00      	bge.n	8007fae <_free_r+0x12>
 8007fac:	18e4      	adds	r4, r4, r3
 8007fae:	0028      	movs	r0, r5
 8007fb0:	f000 fab2 	bl	8008518 <__malloc_lock>
 8007fb4:	4a1d      	ldr	r2, [pc, #116]	; (800802c <_free_r+0x90>)
 8007fb6:	6813      	ldr	r3, [r2, #0]
 8007fb8:	2b00      	cmp	r3, #0
 8007fba:	d105      	bne.n	8007fc8 <_free_r+0x2c>
 8007fbc:	6063      	str	r3, [r4, #4]
 8007fbe:	6014      	str	r4, [r2, #0]
 8007fc0:	0028      	movs	r0, r5
 8007fc2:	f000 fab1 	bl	8008528 <__malloc_unlock>
 8007fc6:	bd70      	pop	{r4, r5, r6, pc}
 8007fc8:	42a3      	cmp	r3, r4
 8007fca:	d908      	bls.n	8007fde <_free_r+0x42>
 8007fcc:	6821      	ldr	r1, [r4, #0]
 8007fce:	1860      	adds	r0, r4, r1
 8007fd0:	4283      	cmp	r3, r0
 8007fd2:	d1f3      	bne.n	8007fbc <_free_r+0x20>
 8007fd4:	6818      	ldr	r0, [r3, #0]
 8007fd6:	685b      	ldr	r3, [r3, #4]
 8007fd8:	1841      	adds	r1, r0, r1
 8007fda:	6021      	str	r1, [r4, #0]
 8007fdc:	e7ee      	b.n	8007fbc <_free_r+0x20>
 8007fde:	001a      	movs	r2, r3
 8007fe0:	685b      	ldr	r3, [r3, #4]
 8007fe2:	2b00      	cmp	r3, #0
 8007fe4:	d001      	beq.n	8007fea <_free_r+0x4e>
 8007fe6:	42a3      	cmp	r3, r4
 8007fe8:	d9f9      	bls.n	8007fde <_free_r+0x42>
 8007fea:	6811      	ldr	r1, [r2, #0]
 8007fec:	1850      	adds	r0, r2, r1
 8007fee:	42a0      	cmp	r0, r4
 8007ff0:	d10b      	bne.n	800800a <_free_r+0x6e>
 8007ff2:	6820      	ldr	r0, [r4, #0]
 8007ff4:	1809      	adds	r1, r1, r0
 8007ff6:	1850      	adds	r0, r2, r1
 8007ff8:	6011      	str	r1, [r2, #0]
 8007ffa:	4283      	cmp	r3, r0
 8007ffc:	d1e0      	bne.n	8007fc0 <_free_r+0x24>
 8007ffe:	6818      	ldr	r0, [r3, #0]
 8008000:	685b      	ldr	r3, [r3, #4]
 8008002:	1841      	adds	r1, r0, r1
 8008004:	6011      	str	r1, [r2, #0]
 8008006:	6053      	str	r3, [r2, #4]
 8008008:	e7da      	b.n	8007fc0 <_free_r+0x24>
 800800a:	42a0      	cmp	r0, r4
 800800c:	d902      	bls.n	8008014 <_free_r+0x78>
 800800e:	230c      	movs	r3, #12
 8008010:	602b      	str	r3, [r5, #0]
 8008012:	e7d5      	b.n	8007fc0 <_free_r+0x24>
 8008014:	6821      	ldr	r1, [r4, #0]
 8008016:	1860      	adds	r0, r4, r1
 8008018:	4283      	cmp	r3, r0
 800801a:	d103      	bne.n	8008024 <_free_r+0x88>
 800801c:	6818      	ldr	r0, [r3, #0]
 800801e:	685b      	ldr	r3, [r3, #4]
 8008020:	1841      	adds	r1, r0, r1
 8008022:	6021      	str	r1, [r4, #0]
 8008024:	6063      	str	r3, [r4, #4]
 8008026:	6054      	str	r4, [r2, #4]
 8008028:	e7ca      	b.n	8007fc0 <_free_r+0x24>
 800802a:	46c0      	nop			; (mov r8, r8)
 800802c:	200002e8 	.word	0x200002e8

08008030 <sbrk_aligned>:
 8008030:	b570      	push	{r4, r5, r6, lr}
 8008032:	4e0f      	ldr	r6, [pc, #60]	; (8008070 <sbrk_aligned+0x40>)
 8008034:	000d      	movs	r5, r1
 8008036:	6831      	ldr	r1, [r6, #0]
 8008038:	0004      	movs	r4, r0
 800803a:	2900      	cmp	r1, #0
 800803c:	d102      	bne.n	8008044 <sbrk_aligned+0x14>
 800803e:	f000 f9f7 	bl	8008430 <_sbrk_r>
 8008042:	6030      	str	r0, [r6, #0]
 8008044:	0029      	movs	r1, r5
 8008046:	0020      	movs	r0, r4
 8008048:	f000 f9f2 	bl	8008430 <_sbrk_r>
 800804c:	1c43      	adds	r3, r0, #1
 800804e:	d00a      	beq.n	8008066 <sbrk_aligned+0x36>
 8008050:	2303      	movs	r3, #3
 8008052:	1cc5      	adds	r5, r0, #3
 8008054:	439d      	bics	r5, r3
 8008056:	42a8      	cmp	r0, r5
 8008058:	d007      	beq.n	800806a <sbrk_aligned+0x3a>
 800805a:	1a29      	subs	r1, r5, r0
 800805c:	0020      	movs	r0, r4
 800805e:	f000 f9e7 	bl	8008430 <_sbrk_r>
 8008062:	1c43      	adds	r3, r0, #1
 8008064:	d101      	bne.n	800806a <sbrk_aligned+0x3a>
 8008066:	2501      	movs	r5, #1
 8008068:	426d      	negs	r5, r5
 800806a:	0028      	movs	r0, r5
 800806c:	bd70      	pop	{r4, r5, r6, pc}
 800806e:	46c0      	nop			; (mov r8, r8)
 8008070:	200002ec 	.word	0x200002ec

08008074 <_malloc_r>:
 8008074:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008076:	2203      	movs	r2, #3
 8008078:	1ccb      	adds	r3, r1, #3
 800807a:	4393      	bics	r3, r2
 800807c:	3308      	adds	r3, #8
 800807e:	0006      	movs	r6, r0
 8008080:	001f      	movs	r7, r3
 8008082:	2b0c      	cmp	r3, #12
 8008084:	d232      	bcs.n	80080ec <_malloc_r+0x78>
 8008086:	270c      	movs	r7, #12
 8008088:	42b9      	cmp	r1, r7
 800808a:	d831      	bhi.n	80080f0 <_malloc_r+0x7c>
 800808c:	0030      	movs	r0, r6
 800808e:	f000 fa43 	bl	8008518 <__malloc_lock>
 8008092:	4d32      	ldr	r5, [pc, #200]	; (800815c <_malloc_r+0xe8>)
 8008094:	682b      	ldr	r3, [r5, #0]
 8008096:	001c      	movs	r4, r3
 8008098:	2c00      	cmp	r4, #0
 800809a:	d12e      	bne.n	80080fa <_malloc_r+0x86>
 800809c:	0039      	movs	r1, r7
 800809e:	0030      	movs	r0, r6
 80080a0:	f7ff ffc6 	bl	8008030 <sbrk_aligned>
 80080a4:	0004      	movs	r4, r0
 80080a6:	1c43      	adds	r3, r0, #1
 80080a8:	d11e      	bne.n	80080e8 <_malloc_r+0x74>
 80080aa:	682c      	ldr	r4, [r5, #0]
 80080ac:	0025      	movs	r5, r4
 80080ae:	2d00      	cmp	r5, #0
 80080b0:	d14a      	bne.n	8008148 <_malloc_r+0xd4>
 80080b2:	6823      	ldr	r3, [r4, #0]
 80080b4:	0029      	movs	r1, r5
 80080b6:	18e3      	adds	r3, r4, r3
 80080b8:	0030      	movs	r0, r6
 80080ba:	9301      	str	r3, [sp, #4]
 80080bc:	f000 f9b8 	bl	8008430 <_sbrk_r>
 80080c0:	9b01      	ldr	r3, [sp, #4]
 80080c2:	4283      	cmp	r3, r0
 80080c4:	d143      	bne.n	800814e <_malloc_r+0xda>
 80080c6:	6823      	ldr	r3, [r4, #0]
 80080c8:	3703      	adds	r7, #3
 80080ca:	1aff      	subs	r7, r7, r3
 80080cc:	2303      	movs	r3, #3
 80080ce:	439f      	bics	r7, r3
 80080d0:	3708      	adds	r7, #8
 80080d2:	2f0c      	cmp	r7, #12
 80080d4:	d200      	bcs.n	80080d8 <_malloc_r+0x64>
 80080d6:	270c      	movs	r7, #12
 80080d8:	0039      	movs	r1, r7
 80080da:	0030      	movs	r0, r6
 80080dc:	f7ff ffa8 	bl	8008030 <sbrk_aligned>
 80080e0:	1c43      	adds	r3, r0, #1
 80080e2:	d034      	beq.n	800814e <_malloc_r+0xda>
 80080e4:	6823      	ldr	r3, [r4, #0]
 80080e6:	19df      	adds	r7, r3, r7
 80080e8:	6027      	str	r7, [r4, #0]
 80080ea:	e013      	b.n	8008114 <_malloc_r+0xa0>
 80080ec:	2b00      	cmp	r3, #0
 80080ee:	dacb      	bge.n	8008088 <_malloc_r+0x14>
 80080f0:	230c      	movs	r3, #12
 80080f2:	2500      	movs	r5, #0
 80080f4:	6033      	str	r3, [r6, #0]
 80080f6:	0028      	movs	r0, r5
 80080f8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80080fa:	6822      	ldr	r2, [r4, #0]
 80080fc:	1bd1      	subs	r1, r2, r7
 80080fe:	d420      	bmi.n	8008142 <_malloc_r+0xce>
 8008100:	290b      	cmp	r1, #11
 8008102:	d917      	bls.n	8008134 <_malloc_r+0xc0>
 8008104:	19e2      	adds	r2, r4, r7
 8008106:	6027      	str	r7, [r4, #0]
 8008108:	42a3      	cmp	r3, r4
 800810a:	d111      	bne.n	8008130 <_malloc_r+0xbc>
 800810c:	602a      	str	r2, [r5, #0]
 800810e:	6863      	ldr	r3, [r4, #4]
 8008110:	6011      	str	r1, [r2, #0]
 8008112:	6053      	str	r3, [r2, #4]
 8008114:	0030      	movs	r0, r6
 8008116:	0025      	movs	r5, r4
 8008118:	f000 fa06 	bl	8008528 <__malloc_unlock>
 800811c:	2207      	movs	r2, #7
 800811e:	350b      	adds	r5, #11
 8008120:	1d23      	adds	r3, r4, #4
 8008122:	4395      	bics	r5, r2
 8008124:	1aea      	subs	r2, r5, r3
 8008126:	429d      	cmp	r5, r3
 8008128:	d0e5      	beq.n	80080f6 <_malloc_r+0x82>
 800812a:	1b5b      	subs	r3, r3, r5
 800812c:	50a3      	str	r3, [r4, r2]
 800812e:	e7e2      	b.n	80080f6 <_malloc_r+0x82>
 8008130:	605a      	str	r2, [r3, #4]
 8008132:	e7ec      	b.n	800810e <_malloc_r+0x9a>
 8008134:	6862      	ldr	r2, [r4, #4]
 8008136:	42a3      	cmp	r3, r4
 8008138:	d101      	bne.n	800813e <_malloc_r+0xca>
 800813a:	602a      	str	r2, [r5, #0]
 800813c:	e7ea      	b.n	8008114 <_malloc_r+0xa0>
 800813e:	605a      	str	r2, [r3, #4]
 8008140:	e7e8      	b.n	8008114 <_malloc_r+0xa0>
 8008142:	0023      	movs	r3, r4
 8008144:	6864      	ldr	r4, [r4, #4]
 8008146:	e7a7      	b.n	8008098 <_malloc_r+0x24>
 8008148:	002c      	movs	r4, r5
 800814a:	686d      	ldr	r5, [r5, #4]
 800814c:	e7af      	b.n	80080ae <_malloc_r+0x3a>
 800814e:	230c      	movs	r3, #12
 8008150:	0030      	movs	r0, r6
 8008152:	6033      	str	r3, [r6, #0]
 8008154:	f000 f9e8 	bl	8008528 <__malloc_unlock>
 8008158:	e7cd      	b.n	80080f6 <_malloc_r+0x82>
 800815a:	46c0      	nop			; (mov r8, r8)
 800815c:	200002e8 	.word	0x200002e8

08008160 <__ssputs_r>:
 8008160:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008162:	688e      	ldr	r6, [r1, #8]
 8008164:	b085      	sub	sp, #20
 8008166:	0007      	movs	r7, r0
 8008168:	000c      	movs	r4, r1
 800816a:	9203      	str	r2, [sp, #12]
 800816c:	9301      	str	r3, [sp, #4]
 800816e:	429e      	cmp	r6, r3
 8008170:	d83c      	bhi.n	80081ec <__ssputs_r+0x8c>
 8008172:	2390      	movs	r3, #144	; 0x90
 8008174:	898a      	ldrh	r2, [r1, #12]
 8008176:	00db      	lsls	r3, r3, #3
 8008178:	421a      	tst	r2, r3
 800817a:	d034      	beq.n	80081e6 <__ssputs_r+0x86>
 800817c:	6909      	ldr	r1, [r1, #16]
 800817e:	6823      	ldr	r3, [r4, #0]
 8008180:	6960      	ldr	r0, [r4, #20]
 8008182:	1a5b      	subs	r3, r3, r1
 8008184:	9302      	str	r3, [sp, #8]
 8008186:	2303      	movs	r3, #3
 8008188:	4343      	muls	r3, r0
 800818a:	0fdd      	lsrs	r5, r3, #31
 800818c:	18ed      	adds	r5, r5, r3
 800818e:	9b01      	ldr	r3, [sp, #4]
 8008190:	9802      	ldr	r0, [sp, #8]
 8008192:	3301      	adds	r3, #1
 8008194:	181b      	adds	r3, r3, r0
 8008196:	106d      	asrs	r5, r5, #1
 8008198:	42ab      	cmp	r3, r5
 800819a:	d900      	bls.n	800819e <__ssputs_r+0x3e>
 800819c:	001d      	movs	r5, r3
 800819e:	0553      	lsls	r3, r2, #21
 80081a0:	d532      	bpl.n	8008208 <__ssputs_r+0xa8>
 80081a2:	0029      	movs	r1, r5
 80081a4:	0038      	movs	r0, r7
 80081a6:	f7ff ff65 	bl	8008074 <_malloc_r>
 80081aa:	1e06      	subs	r6, r0, #0
 80081ac:	d109      	bne.n	80081c2 <__ssputs_r+0x62>
 80081ae:	230c      	movs	r3, #12
 80081b0:	603b      	str	r3, [r7, #0]
 80081b2:	2340      	movs	r3, #64	; 0x40
 80081b4:	2001      	movs	r0, #1
 80081b6:	89a2      	ldrh	r2, [r4, #12]
 80081b8:	4240      	negs	r0, r0
 80081ba:	4313      	orrs	r3, r2
 80081bc:	81a3      	strh	r3, [r4, #12]
 80081be:	b005      	add	sp, #20
 80081c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081c2:	9a02      	ldr	r2, [sp, #8]
 80081c4:	6921      	ldr	r1, [r4, #16]
 80081c6:	f7ff f9ea 	bl	800759e <memcpy>
 80081ca:	89a3      	ldrh	r3, [r4, #12]
 80081cc:	4a14      	ldr	r2, [pc, #80]	; (8008220 <__ssputs_r+0xc0>)
 80081ce:	401a      	ands	r2, r3
 80081d0:	2380      	movs	r3, #128	; 0x80
 80081d2:	4313      	orrs	r3, r2
 80081d4:	81a3      	strh	r3, [r4, #12]
 80081d6:	9b02      	ldr	r3, [sp, #8]
 80081d8:	6126      	str	r6, [r4, #16]
 80081da:	18f6      	adds	r6, r6, r3
 80081dc:	6026      	str	r6, [r4, #0]
 80081de:	6165      	str	r5, [r4, #20]
 80081e0:	9e01      	ldr	r6, [sp, #4]
 80081e2:	1aed      	subs	r5, r5, r3
 80081e4:	60a5      	str	r5, [r4, #8]
 80081e6:	9b01      	ldr	r3, [sp, #4]
 80081e8:	429e      	cmp	r6, r3
 80081ea:	d900      	bls.n	80081ee <__ssputs_r+0x8e>
 80081ec:	9e01      	ldr	r6, [sp, #4]
 80081ee:	0032      	movs	r2, r6
 80081f0:	9903      	ldr	r1, [sp, #12]
 80081f2:	6820      	ldr	r0, [r4, #0]
 80081f4:	f000 f97c 	bl	80084f0 <memmove>
 80081f8:	68a3      	ldr	r3, [r4, #8]
 80081fa:	2000      	movs	r0, #0
 80081fc:	1b9b      	subs	r3, r3, r6
 80081fe:	60a3      	str	r3, [r4, #8]
 8008200:	6823      	ldr	r3, [r4, #0]
 8008202:	199e      	adds	r6, r3, r6
 8008204:	6026      	str	r6, [r4, #0]
 8008206:	e7da      	b.n	80081be <__ssputs_r+0x5e>
 8008208:	002a      	movs	r2, r5
 800820a:	0038      	movs	r0, r7
 800820c:	f000 f994 	bl	8008538 <_realloc_r>
 8008210:	1e06      	subs	r6, r0, #0
 8008212:	d1e0      	bne.n	80081d6 <__ssputs_r+0x76>
 8008214:	0038      	movs	r0, r7
 8008216:	6921      	ldr	r1, [r4, #16]
 8008218:	f7ff fec0 	bl	8007f9c <_free_r>
 800821c:	e7c7      	b.n	80081ae <__ssputs_r+0x4e>
 800821e:	46c0      	nop			; (mov r8, r8)
 8008220:	fffffb7f 	.word	0xfffffb7f

08008224 <_svfiprintf_r>:
 8008224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008226:	b0a1      	sub	sp, #132	; 0x84
 8008228:	9003      	str	r0, [sp, #12]
 800822a:	001d      	movs	r5, r3
 800822c:	898b      	ldrh	r3, [r1, #12]
 800822e:	000f      	movs	r7, r1
 8008230:	0016      	movs	r6, r2
 8008232:	061b      	lsls	r3, r3, #24
 8008234:	d511      	bpl.n	800825a <_svfiprintf_r+0x36>
 8008236:	690b      	ldr	r3, [r1, #16]
 8008238:	2b00      	cmp	r3, #0
 800823a:	d10e      	bne.n	800825a <_svfiprintf_r+0x36>
 800823c:	2140      	movs	r1, #64	; 0x40
 800823e:	f7ff ff19 	bl	8008074 <_malloc_r>
 8008242:	6038      	str	r0, [r7, #0]
 8008244:	6138      	str	r0, [r7, #16]
 8008246:	2800      	cmp	r0, #0
 8008248:	d105      	bne.n	8008256 <_svfiprintf_r+0x32>
 800824a:	230c      	movs	r3, #12
 800824c:	9a03      	ldr	r2, [sp, #12]
 800824e:	3801      	subs	r0, #1
 8008250:	6013      	str	r3, [r2, #0]
 8008252:	b021      	add	sp, #132	; 0x84
 8008254:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008256:	2340      	movs	r3, #64	; 0x40
 8008258:	617b      	str	r3, [r7, #20]
 800825a:	2300      	movs	r3, #0
 800825c:	ac08      	add	r4, sp, #32
 800825e:	6163      	str	r3, [r4, #20]
 8008260:	3320      	adds	r3, #32
 8008262:	7663      	strb	r3, [r4, #25]
 8008264:	3310      	adds	r3, #16
 8008266:	76a3      	strb	r3, [r4, #26]
 8008268:	9507      	str	r5, [sp, #28]
 800826a:	0035      	movs	r5, r6
 800826c:	782b      	ldrb	r3, [r5, #0]
 800826e:	2b00      	cmp	r3, #0
 8008270:	d001      	beq.n	8008276 <_svfiprintf_r+0x52>
 8008272:	2b25      	cmp	r3, #37	; 0x25
 8008274:	d147      	bne.n	8008306 <_svfiprintf_r+0xe2>
 8008276:	1bab      	subs	r3, r5, r6
 8008278:	9305      	str	r3, [sp, #20]
 800827a:	42b5      	cmp	r5, r6
 800827c:	d00c      	beq.n	8008298 <_svfiprintf_r+0x74>
 800827e:	0032      	movs	r2, r6
 8008280:	0039      	movs	r1, r7
 8008282:	9803      	ldr	r0, [sp, #12]
 8008284:	f7ff ff6c 	bl	8008160 <__ssputs_r>
 8008288:	1c43      	adds	r3, r0, #1
 800828a:	d100      	bne.n	800828e <_svfiprintf_r+0x6a>
 800828c:	e0ae      	b.n	80083ec <_svfiprintf_r+0x1c8>
 800828e:	6962      	ldr	r2, [r4, #20]
 8008290:	9b05      	ldr	r3, [sp, #20]
 8008292:	4694      	mov	ip, r2
 8008294:	4463      	add	r3, ip
 8008296:	6163      	str	r3, [r4, #20]
 8008298:	782b      	ldrb	r3, [r5, #0]
 800829a:	2b00      	cmp	r3, #0
 800829c:	d100      	bne.n	80082a0 <_svfiprintf_r+0x7c>
 800829e:	e0a5      	b.n	80083ec <_svfiprintf_r+0x1c8>
 80082a0:	2201      	movs	r2, #1
 80082a2:	2300      	movs	r3, #0
 80082a4:	4252      	negs	r2, r2
 80082a6:	6062      	str	r2, [r4, #4]
 80082a8:	a904      	add	r1, sp, #16
 80082aa:	3254      	adds	r2, #84	; 0x54
 80082ac:	1852      	adds	r2, r2, r1
 80082ae:	1c6e      	adds	r6, r5, #1
 80082b0:	6023      	str	r3, [r4, #0]
 80082b2:	60e3      	str	r3, [r4, #12]
 80082b4:	60a3      	str	r3, [r4, #8]
 80082b6:	7013      	strb	r3, [r2, #0]
 80082b8:	65a3      	str	r3, [r4, #88]	; 0x58
 80082ba:	2205      	movs	r2, #5
 80082bc:	7831      	ldrb	r1, [r6, #0]
 80082be:	4854      	ldr	r0, [pc, #336]	; (8008410 <_svfiprintf_r+0x1ec>)
 80082c0:	f7ff f962 	bl	8007588 <memchr>
 80082c4:	1c75      	adds	r5, r6, #1
 80082c6:	2800      	cmp	r0, #0
 80082c8:	d11f      	bne.n	800830a <_svfiprintf_r+0xe6>
 80082ca:	6822      	ldr	r2, [r4, #0]
 80082cc:	06d3      	lsls	r3, r2, #27
 80082ce:	d504      	bpl.n	80082da <_svfiprintf_r+0xb6>
 80082d0:	2353      	movs	r3, #83	; 0x53
 80082d2:	a904      	add	r1, sp, #16
 80082d4:	185b      	adds	r3, r3, r1
 80082d6:	2120      	movs	r1, #32
 80082d8:	7019      	strb	r1, [r3, #0]
 80082da:	0713      	lsls	r3, r2, #28
 80082dc:	d504      	bpl.n	80082e8 <_svfiprintf_r+0xc4>
 80082de:	2353      	movs	r3, #83	; 0x53
 80082e0:	a904      	add	r1, sp, #16
 80082e2:	185b      	adds	r3, r3, r1
 80082e4:	212b      	movs	r1, #43	; 0x2b
 80082e6:	7019      	strb	r1, [r3, #0]
 80082e8:	7833      	ldrb	r3, [r6, #0]
 80082ea:	2b2a      	cmp	r3, #42	; 0x2a
 80082ec:	d016      	beq.n	800831c <_svfiprintf_r+0xf8>
 80082ee:	0035      	movs	r5, r6
 80082f0:	2100      	movs	r1, #0
 80082f2:	200a      	movs	r0, #10
 80082f4:	68e3      	ldr	r3, [r4, #12]
 80082f6:	782a      	ldrb	r2, [r5, #0]
 80082f8:	1c6e      	adds	r6, r5, #1
 80082fa:	3a30      	subs	r2, #48	; 0x30
 80082fc:	2a09      	cmp	r2, #9
 80082fe:	d94e      	bls.n	800839e <_svfiprintf_r+0x17a>
 8008300:	2900      	cmp	r1, #0
 8008302:	d111      	bne.n	8008328 <_svfiprintf_r+0x104>
 8008304:	e017      	b.n	8008336 <_svfiprintf_r+0x112>
 8008306:	3501      	adds	r5, #1
 8008308:	e7b0      	b.n	800826c <_svfiprintf_r+0x48>
 800830a:	4b41      	ldr	r3, [pc, #260]	; (8008410 <_svfiprintf_r+0x1ec>)
 800830c:	6822      	ldr	r2, [r4, #0]
 800830e:	1ac0      	subs	r0, r0, r3
 8008310:	2301      	movs	r3, #1
 8008312:	4083      	lsls	r3, r0
 8008314:	4313      	orrs	r3, r2
 8008316:	002e      	movs	r6, r5
 8008318:	6023      	str	r3, [r4, #0]
 800831a:	e7ce      	b.n	80082ba <_svfiprintf_r+0x96>
 800831c:	9b07      	ldr	r3, [sp, #28]
 800831e:	1d19      	adds	r1, r3, #4
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	9107      	str	r1, [sp, #28]
 8008324:	2b00      	cmp	r3, #0
 8008326:	db01      	blt.n	800832c <_svfiprintf_r+0x108>
 8008328:	930b      	str	r3, [sp, #44]	; 0x2c
 800832a:	e004      	b.n	8008336 <_svfiprintf_r+0x112>
 800832c:	425b      	negs	r3, r3
 800832e:	60e3      	str	r3, [r4, #12]
 8008330:	2302      	movs	r3, #2
 8008332:	4313      	orrs	r3, r2
 8008334:	6023      	str	r3, [r4, #0]
 8008336:	782b      	ldrb	r3, [r5, #0]
 8008338:	2b2e      	cmp	r3, #46	; 0x2e
 800833a:	d10a      	bne.n	8008352 <_svfiprintf_r+0x12e>
 800833c:	786b      	ldrb	r3, [r5, #1]
 800833e:	2b2a      	cmp	r3, #42	; 0x2a
 8008340:	d135      	bne.n	80083ae <_svfiprintf_r+0x18a>
 8008342:	9b07      	ldr	r3, [sp, #28]
 8008344:	3502      	adds	r5, #2
 8008346:	1d1a      	adds	r2, r3, #4
 8008348:	681b      	ldr	r3, [r3, #0]
 800834a:	9207      	str	r2, [sp, #28]
 800834c:	2b00      	cmp	r3, #0
 800834e:	db2b      	blt.n	80083a8 <_svfiprintf_r+0x184>
 8008350:	9309      	str	r3, [sp, #36]	; 0x24
 8008352:	4e30      	ldr	r6, [pc, #192]	; (8008414 <_svfiprintf_r+0x1f0>)
 8008354:	2203      	movs	r2, #3
 8008356:	0030      	movs	r0, r6
 8008358:	7829      	ldrb	r1, [r5, #0]
 800835a:	f7ff f915 	bl	8007588 <memchr>
 800835e:	2800      	cmp	r0, #0
 8008360:	d006      	beq.n	8008370 <_svfiprintf_r+0x14c>
 8008362:	2340      	movs	r3, #64	; 0x40
 8008364:	1b80      	subs	r0, r0, r6
 8008366:	4083      	lsls	r3, r0
 8008368:	6822      	ldr	r2, [r4, #0]
 800836a:	3501      	adds	r5, #1
 800836c:	4313      	orrs	r3, r2
 800836e:	6023      	str	r3, [r4, #0]
 8008370:	7829      	ldrb	r1, [r5, #0]
 8008372:	2206      	movs	r2, #6
 8008374:	4828      	ldr	r0, [pc, #160]	; (8008418 <_svfiprintf_r+0x1f4>)
 8008376:	1c6e      	adds	r6, r5, #1
 8008378:	7621      	strb	r1, [r4, #24]
 800837a:	f7ff f905 	bl	8007588 <memchr>
 800837e:	2800      	cmp	r0, #0
 8008380:	d03c      	beq.n	80083fc <_svfiprintf_r+0x1d8>
 8008382:	4b26      	ldr	r3, [pc, #152]	; (800841c <_svfiprintf_r+0x1f8>)
 8008384:	2b00      	cmp	r3, #0
 8008386:	d125      	bne.n	80083d4 <_svfiprintf_r+0x1b0>
 8008388:	2207      	movs	r2, #7
 800838a:	9b07      	ldr	r3, [sp, #28]
 800838c:	3307      	adds	r3, #7
 800838e:	4393      	bics	r3, r2
 8008390:	3308      	adds	r3, #8
 8008392:	9307      	str	r3, [sp, #28]
 8008394:	6963      	ldr	r3, [r4, #20]
 8008396:	9a04      	ldr	r2, [sp, #16]
 8008398:	189b      	adds	r3, r3, r2
 800839a:	6163      	str	r3, [r4, #20]
 800839c:	e765      	b.n	800826a <_svfiprintf_r+0x46>
 800839e:	4343      	muls	r3, r0
 80083a0:	0035      	movs	r5, r6
 80083a2:	2101      	movs	r1, #1
 80083a4:	189b      	adds	r3, r3, r2
 80083a6:	e7a6      	b.n	80082f6 <_svfiprintf_r+0xd2>
 80083a8:	2301      	movs	r3, #1
 80083aa:	425b      	negs	r3, r3
 80083ac:	e7d0      	b.n	8008350 <_svfiprintf_r+0x12c>
 80083ae:	2300      	movs	r3, #0
 80083b0:	200a      	movs	r0, #10
 80083b2:	001a      	movs	r2, r3
 80083b4:	3501      	adds	r5, #1
 80083b6:	6063      	str	r3, [r4, #4]
 80083b8:	7829      	ldrb	r1, [r5, #0]
 80083ba:	1c6e      	adds	r6, r5, #1
 80083bc:	3930      	subs	r1, #48	; 0x30
 80083be:	2909      	cmp	r1, #9
 80083c0:	d903      	bls.n	80083ca <_svfiprintf_r+0x1a6>
 80083c2:	2b00      	cmp	r3, #0
 80083c4:	d0c5      	beq.n	8008352 <_svfiprintf_r+0x12e>
 80083c6:	9209      	str	r2, [sp, #36]	; 0x24
 80083c8:	e7c3      	b.n	8008352 <_svfiprintf_r+0x12e>
 80083ca:	4342      	muls	r2, r0
 80083cc:	0035      	movs	r5, r6
 80083ce:	2301      	movs	r3, #1
 80083d0:	1852      	adds	r2, r2, r1
 80083d2:	e7f1      	b.n	80083b8 <_svfiprintf_r+0x194>
 80083d4:	ab07      	add	r3, sp, #28
 80083d6:	9300      	str	r3, [sp, #0]
 80083d8:	003a      	movs	r2, r7
 80083da:	0021      	movs	r1, r4
 80083dc:	4b10      	ldr	r3, [pc, #64]	; (8008420 <_svfiprintf_r+0x1fc>)
 80083de:	9803      	ldr	r0, [sp, #12]
 80083e0:	f7fc f9e2 	bl	80047a8 <_printf_float>
 80083e4:	9004      	str	r0, [sp, #16]
 80083e6:	9b04      	ldr	r3, [sp, #16]
 80083e8:	3301      	adds	r3, #1
 80083ea:	d1d3      	bne.n	8008394 <_svfiprintf_r+0x170>
 80083ec:	89bb      	ldrh	r3, [r7, #12]
 80083ee:	980d      	ldr	r0, [sp, #52]	; 0x34
 80083f0:	065b      	lsls	r3, r3, #25
 80083f2:	d400      	bmi.n	80083f6 <_svfiprintf_r+0x1d2>
 80083f4:	e72d      	b.n	8008252 <_svfiprintf_r+0x2e>
 80083f6:	2001      	movs	r0, #1
 80083f8:	4240      	negs	r0, r0
 80083fa:	e72a      	b.n	8008252 <_svfiprintf_r+0x2e>
 80083fc:	ab07      	add	r3, sp, #28
 80083fe:	9300      	str	r3, [sp, #0]
 8008400:	003a      	movs	r2, r7
 8008402:	0021      	movs	r1, r4
 8008404:	4b06      	ldr	r3, [pc, #24]	; (8008420 <_svfiprintf_r+0x1fc>)
 8008406:	9803      	ldr	r0, [sp, #12]
 8008408:	f7fc fc80 	bl	8004d0c <_printf_i>
 800840c:	e7ea      	b.n	80083e4 <_svfiprintf_r+0x1c0>
 800840e:	46c0      	nop			; (mov r8, r8)
 8008410:	08009564 	.word	0x08009564
 8008414:	0800956a 	.word	0x0800956a
 8008418:	0800956e 	.word	0x0800956e
 800841c:	080047a9 	.word	0x080047a9
 8008420:	08008161 	.word	0x08008161

08008424 <nan>:
 8008424:	2000      	movs	r0, #0
 8008426:	4901      	ldr	r1, [pc, #4]	; (800842c <nan+0x8>)
 8008428:	4770      	bx	lr
 800842a:	46c0      	nop			; (mov r8, r8)
 800842c:	7ff80000 	.word	0x7ff80000

08008430 <_sbrk_r>:
 8008430:	2300      	movs	r3, #0
 8008432:	b570      	push	{r4, r5, r6, lr}
 8008434:	4d06      	ldr	r5, [pc, #24]	; (8008450 <_sbrk_r+0x20>)
 8008436:	0004      	movs	r4, r0
 8008438:	0008      	movs	r0, r1
 800843a:	602b      	str	r3, [r5, #0]
 800843c:	f7fa f9f8 	bl	8002830 <_sbrk>
 8008440:	1c43      	adds	r3, r0, #1
 8008442:	d103      	bne.n	800844c <_sbrk_r+0x1c>
 8008444:	682b      	ldr	r3, [r5, #0]
 8008446:	2b00      	cmp	r3, #0
 8008448:	d000      	beq.n	800844c <_sbrk_r+0x1c>
 800844a:	6023      	str	r3, [r4, #0]
 800844c:	bd70      	pop	{r4, r5, r6, pc}
 800844e:	46c0      	nop			; (mov r8, r8)
 8008450:	200002f0 	.word	0x200002f0

08008454 <strncmp>:
 8008454:	b530      	push	{r4, r5, lr}
 8008456:	0005      	movs	r5, r0
 8008458:	1e10      	subs	r0, r2, #0
 800845a:	d008      	beq.n	800846e <strncmp+0x1a>
 800845c:	2400      	movs	r4, #0
 800845e:	3a01      	subs	r2, #1
 8008460:	5d2b      	ldrb	r3, [r5, r4]
 8008462:	5d08      	ldrb	r0, [r1, r4]
 8008464:	4283      	cmp	r3, r0
 8008466:	d101      	bne.n	800846c <strncmp+0x18>
 8008468:	4294      	cmp	r4, r2
 800846a:	d101      	bne.n	8008470 <strncmp+0x1c>
 800846c:	1a18      	subs	r0, r3, r0
 800846e:	bd30      	pop	{r4, r5, pc}
 8008470:	3401      	adds	r4, #1
 8008472:	2b00      	cmp	r3, #0
 8008474:	d1f4      	bne.n	8008460 <strncmp+0xc>
 8008476:	e7f9      	b.n	800846c <strncmp+0x18>

08008478 <__ascii_wctomb>:
 8008478:	0003      	movs	r3, r0
 800847a:	1e08      	subs	r0, r1, #0
 800847c:	d005      	beq.n	800848a <__ascii_wctomb+0x12>
 800847e:	2aff      	cmp	r2, #255	; 0xff
 8008480:	d904      	bls.n	800848c <__ascii_wctomb+0x14>
 8008482:	228a      	movs	r2, #138	; 0x8a
 8008484:	2001      	movs	r0, #1
 8008486:	601a      	str	r2, [r3, #0]
 8008488:	4240      	negs	r0, r0
 800848a:	4770      	bx	lr
 800848c:	2001      	movs	r0, #1
 800848e:	700a      	strb	r2, [r1, #0]
 8008490:	e7fb      	b.n	800848a <__ascii_wctomb+0x12>
	...

08008494 <__assert_func>:
 8008494:	b530      	push	{r4, r5, lr}
 8008496:	0014      	movs	r4, r2
 8008498:	001a      	movs	r2, r3
 800849a:	4b09      	ldr	r3, [pc, #36]	; (80084c0 <__assert_func+0x2c>)
 800849c:	0005      	movs	r5, r0
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	b085      	sub	sp, #20
 80084a2:	68d8      	ldr	r0, [r3, #12]
 80084a4:	4b07      	ldr	r3, [pc, #28]	; (80084c4 <__assert_func+0x30>)
 80084a6:	2c00      	cmp	r4, #0
 80084a8:	d101      	bne.n	80084ae <__assert_func+0x1a>
 80084aa:	4b07      	ldr	r3, [pc, #28]	; (80084c8 <__assert_func+0x34>)
 80084ac:	001c      	movs	r4, r3
 80084ae:	9301      	str	r3, [sp, #4]
 80084b0:	9100      	str	r1, [sp, #0]
 80084b2:	002b      	movs	r3, r5
 80084b4:	4905      	ldr	r1, [pc, #20]	; (80084cc <__assert_func+0x38>)
 80084b6:	9402      	str	r4, [sp, #8]
 80084b8:	f000 f80a 	bl	80084d0 <fiprintf>
 80084bc:	f000 fa9a 	bl	80089f4 <abort>
 80084c0:	2000000c 	.word	0x2000000c
 80084c4:	08009575 	.word	0x08009575
 80084c8:	080095b0 	.word	0x080095b0
 80084cc:	08009582 	.word	0x08009582

080084d0 <fiprintf>:
 80084d0:	b40e      	push	{r1, r2, r3}
 80084d2:	b503      	push	{r0, r1, lr}
 80084d4:	0001      	movs	r1, r0
 80084d6:	ab03      	add	r3, sp, #12
 80084d8:	4804      	ldr	r0, [pc, #16]	; (80084ec <fiprintf+0x1c>)
 80084da:	cb04      	ldmia	r3!, {r2}
 80084dc:	6800      	ldr	r0, [r0, #0]
 80084de:	9301      	str	r3, [sp, #4]
 80084e0:	f000 f880 	bl	80085e4 <_vfiprintf_r>
 80084e4:	b002      	add	sp, #8
 80084e6:	bc08      	pop	{r3}
 80084e8:	b003      	add	sp, #12
 80084ea:	4718      	bx	r3
 80084ec:	2000000c 	.word	0x2000000c

080084f0 <memmove>:
 80084f0:	b510      	push	{r4, lr}
 80084f2:	4288      	cmp	r0, r1
 80084f4:	d902      	bls.n	80084fc <memmove+0xc>
 80084f6:	188b      	adds	r3, r1, r2
 80084f8:	4298      	cmp	r0, r3
 80084fa:	d303      	bcc.n	8008504 <memmove+0x14>
 80084fc:	2300      	movs	r3, #0
 80084fe:	e007      	b.n	8008510 <memmove+0x20>
 8008500:	5c8b      	ldrb	r3, [r1, r2]
 8008502:	5483      	strb	r3, [r0, r2]
 8008504:	3a01      	subs	r2, #1
 8008506:	d2fb      	bcs.n	8008500 <memmove+0x10>
 8008508:	bd10      	pop	{r4, pc}
 800850a:	5ccc      	ldrb	r4, [r1, r3]
 800850c:	54c4      	strb	r4, [r0, r3]
 800850e:	3301      	adds	r3, #1
 8008510:	429a      	cmp	r2, r3
 8008512:	d1fa      	bne.n	800850a <memmove+0x1a>
 8008514:	e7f8      	b.n	8008508 <memmove+0x18>
	...

08008518 <__malloc_lock>:
 8008518:	b510      	push	{r4, lr}
 800851a:	4802      	ldr	r0, [pc, #8]	; (8008524 <__malloc_lock+0xc>)
 800851c:	f000 fc41 	bl	8008da2 <__retarget_lock_acquire_recursive>
 8008520:	bd10      	pop	{r4, pc}
 8008522:	46c0      	nop			; (mov r8, r8)
 8008524:	200002f4 	.word	0x200002f4

08008528 <__malloc_unlock>:
 8008528:	b510      	push	{r4, lr}
 800852a:	4802      	ldr	r0, [pc, #8]	; (8008534 <__malloc_unlock+0xc>)
 800852c:	f000 fc3a 	bl	8008da4 <__retarget_lock_release_recursive>
 8008530:	bd10      	pop	{r4, pc}
 8008532:	46c0      	nop			; (mov r8, r8)
 8008534:	200002f4 	.word	0x200002f4

08008538 <_realloc_r>:
 8008538:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800853a:	0007      	movs	r7, r0
 800853c:	000e      	movs	r6, r1
 800853e:	0014      	movs	r4, r2
 8008540:	2900      	cmp	r1, #0
 8008542:	d105      	bne.n	8008550 <_realloc_r+0x18>
 8008544:	0011      	movs	r1, r2
 8008546:	f7ff fd95 	bl	8008074 <_malloc_r>
 800854a:	0005      	movs	r5, r0
 800854c:	0028      	movs	r0, r5
 800854e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008550:	2a00      	cmp	r2, #0
 8008552:	d103      	bne.n	800855c <_realloc_r+0x24>
 8008554:	f7ff fd22 	bl	8007f9c <_free_r>
 8008558:	0025      	movs	r5, r4
 800855a:	e7f7      	b.n	800854c <_realloc_r+0x14>
 800855c:	f000 fc90 	bl	8008e80 <_malloc_usable_size_r>
 8008560:	9001      	str	r0, [sp, #4]
 8008562:	4284      	cmp	r4, r0
 8008564:	d803      	bhi.n	800856e <_realloc_r+0x36>
 8008566:	0035      	movs	r5, r6
 8008568:	0843      	lsrs	r3, r0, #1
 800856a:	42a3      	cmp	r3, r4
 800856c:	d3ee      	bcc.n	800854c <_realloc_r+0x14>
 800856e:	0021      	movs	r1, r4
 8008570:	0038      	movs	r0, r7
 8008572:	f7ff fd7f 	bl	8008074 <_malloc_r>
 8008576:	1e05      	subs	r5, r0, #0
 8008578:	d0e8      	beq.n	800854c <_realloc_r+0x14>
 800857a:	9b01      	ldr	r3, [sp, #4]
 800857c:	0022      	movs	r2, r4
 800857e:	429c      	cmp	r4, r3
 8008580:	d900      	bls.n	8008584 <_realloc_r+0x4c>
 8008582:	001a      	movs	r2, r3
 8008584:	0031      	movs	r1, r6
 8008586:	0028      	movs	r0, r5
 8008588:	f7ff f809 	bl	800759e <memcpy>
 800858c:	0031      	movs	r1, r6
 800858e:	0038      	movs	r0, r7
 8008590:	f7ff fd04 	bl	8007f9c <_free_r>
 8008594:	e7da      	b.n	800854c <_realloc_r+0x14>

08008596 <__sfputc_r>:
 8008596:	6893      	ldr	r3, [r2, #8]
 8008598:	b510      	push	{r4, lr}
 800859a:	3b01      	subs	r3, #1
 800859c:	6093      	str	r3, [r2, #8]
 800859e:	2b00      	cmp	r3, #0
 80085a0:	da04      	bge.n	80085ac <__sfputc_r+0x16>
 80085a2:	6994      	ldr	r4, [r2, #24]
 80085a4:	42a3      	cmp	r3, r4
 80085a6:	db07      	blt.n	80085b8 <__sfputc_r+0x22>
 80085a8:	290a      	cmp	r1, #10
 80085aa:	d005      	beq.n	80085b8 <__sfputc_r+0x22>
 80085ac:	6813      	ldr	r3, [r2, #0]
 80085ae:	1c58      	adds	r0, r3, #1
 80085b0:	6010      	str	r0, [r2, #0]
 80085b2:	7019      	strb	r1, [r3, #0]
 80085b4:	0008      	movs	r0, r1
 80085b6:	bd10      	pop	{r4, pc}
 80085b8:	f000 f94e 	bl	8008858 <__swbuf_r>
 80085bc:	0001      	movs	r1, r0
 80085be:	e7f9      	b.n	80085b4 <__sfputc_r+0x1e>

080085c0 <__sfputs_r>:
 80085c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80085c2:	0006      	movs	r6, r0
 80085c4:	000f      	movs	r7, r1
 80085c6:	0014      	movs	r4, r2
 80085c8:	18d5      	adds	r5, r2, r3
 80085ca:	42ac      	cmp	r4, r5
 80085cc:	d101      	bne.n	80085d2 <__sfputs_r+0x12>
 80085ce:	2000      	movs	r0, #0
 80085d0:	e007      	b.n	80085e2 <__sfputs_r+0x22>
 80085d2:	7821      	ldrb	r1, [r4, #0]
 80085d4:	003a      	movs	r2, r7
 80085d6:	0030      	movs	r0, r6
 80085d8:	f7ff ffdd 	bl	8008596 <__sfputc_r>
 80085dc:	3401      	adds	r4, #1
 80085de:	1c43      	adds	r3, r0, #1
 80085e0:	d1f3      	bne.n	80085ca <__sfputs_r+0xa>
 80085e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080085e4 <_vfiprintf_r>:
 80085e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085e6:	b0a1      	sub	sp, #132	; 0x84
 80085e8:	0006      	movs	r6, r0
 80085ea:	000c      	movs	r4, r1
 80085ec:	001f      	movs	r7, r3
 80085ee:	9203      	str	r2, [sp, #12]
 80085f0:	2800      	cmp	r0, #0
 80085f2:	d004      	beq.n	80085fe <_vfiprintf_r+0x1a>
 80085f4:	6983      	ldr	r3, [r0, #24]
 80085f6:	2b00      	cmp	r3, #0
 80085f8:	d101      	bne.n	80085fe <_vfiprintf_r+0x1a>
 80085fa:	f000 fb31 	bl	8008c60 <__sinit>
 80085fe:	4b8e      	ldr	r3, [pc, #568]	; (8008838 <_vfiprintf_r+0x254>)
 8008600:	429c      	cmp	r4, r3
 8008602:	d11c      	bne.n	800863e <_vfiprintf_r+0x5a>
 8008604:	6874      	ldr	r4, [r6, #4]
 8008606:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008608:	07db      	lsls	r3, r3, #31
 800860a:	d405      	bmi.n	8008618 <_vfiprintf_r+0x34>
 800860c:	89a3      	ldrh	r3, [r4, #12]
 800860e:	059b      	lsls	r3, r3, #22
 8008610:	d402      	bmi.n	8008618 <_vfiprintf_r+0x34>
 8008612:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008614:	f000 fbc5 	bl	8008da2 <__retarget_lock_acquire_recursive>
 8008618:	89a3      	ldrh	r3, [r4, #12]
 800861a:	071b      	lsls	r3, r3, #28
 800861c:	d502      	bpl.n	8008624 <_vfiprintf_r+0x40>
 800861e:	6923      	ldr	r3, [r4, #16]
 8008620:	2b00      	cmp	r3, #0
 8008622:	d11d      	bne.n	8008660 <_vfiprintf_r+0x7c>
 8008624:	0021      	movs	r1, r4
 8008626:	0030      	movs	r0, r6
 8008628:	f000 f96c 	bl	8008904 <__swsetup_r>
 800862c:	2800      	cmp	r0, #0
 800862e:	d017      	beq.n	8008660 <_vfiprintf_r+0x7c>
 8008630:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008632:	07db      	lsls	r3, r3, #31
 8008634:	d50d      	bpl.n	8008652 <_vfiprintf_r+0x6e>
 8008636:	2001      	movs	r0, #1
 8008638:	4240      	negs	r0, r0
 800863a:	b021      	add	sp, #132	; 0x84
 800863c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800863e:	4b7f      	ldr	r3, [pc, #508]	; (800883c <_vfiprintf_r+0x258>)
 8008640:	429c      	cmp	r4, r3
 8008642:	d101      	bne.n	8008648 <_vfiprintf_r+0x64>
 8008644:	68b4      	ldr	r4, [r6, #8]
 8008646:	e7de      	b.n	8008606 <_vfiprintf_r+0x22>
 8008648:	4b7d      	ldr	r3, [pc, #500]	; (8008840 <_vfiprintf_r+0x25c>)
 800864a:	429c      	cmp	r4, r3
 800864c:	d1db      	bne.n	8008606 <_vfiprintf_r+0x22>
 800864e:	68f4      	ldr	r4, [r6, #12]
 8008650:	e7d9      	b.n	8008606 <_vfiprintf_r+0x22>
 8008652:	89a3      	ldrh	r3, [r4, #12]
 8008654:	059b      	lsls	r3, r3, #22
 8008656:	d4ee      	bmi.n	8008636 <_vfiprintf_r+0x52>
 8008658:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800865a:	f000 fba3 	bl	8008da4 <__retarget_lock_release_recursive>
 800865e:	e7ea      	b.n	8008636 <_vfiprintf_r+0x52>
 8008660:	2300      	movs	r3, #0
 8008662:	ad08      	add	r5, sp, #32
 8008664:	616b      	str	r3, [r5, #20]
 8008666:	3320      	adds	r3, #32
 8008668:	766b      	strb	r3, [r5, #25]
 800866a:	3310      	adds	r3, #16
 800866c:	76ab      	strb	r3, [r5, #26]
 800866e:	9707      	str	r7, [sp, #28]
 8008670:	9f03      	ldr	r7, [sp, #12]
 8008672:	783b      	ldrb	r3, [r7, #0]
 8008674:	2b00      	cmp	r3, #0
 8008676:	d001      	beq.n	800867c <_vfiprintf_r+0x98>
 8008678:	2b25      	cmp	r3, #37	; 0x25
 800867a:	d14e      	bne.n	800871a <_vfiprintf_r+0x136>
 800867c:	9b03      	ldr	r3, [sp, #12]
 800867e:	1afb      	subs	r3, r7, r3
 8008680:	9305      	str	r3, [sp, #20]
 8008682:	9b03      	ldr	r3, [sp, #12]
 8008684:	429f      	cmp	r7, r3
 8008686:	d00d      	beq.n	80086a4 <_vfiprintf_r+0xc0>
 8008688:	9b05      	ldr	r3, [sp, #20]
 800868a:	0021      	movs	r1, r4
 800868c:	0030      	movs	r0, r6
 800868e:	9a03      	ldr	r2, [sp, #12]
 8008690:	f7ff ff96 	bl	80085c0 <__sfputs_r>
 8008694:	1c43      	adds	r3, r0, #1
 8008696:	d100      	bne.n	800869a <_vfiprintf_r+0xb6>
 8008698:	e0b5      	b.n	8008806 <_vfiprintf_r+0x222>
 800869a:	696a      	ldr	r2, [r5, #20]
 800869c:	9b05      	ldr	r3, [sp, #20]
 800869e:	4694      	mov	ip, r2
 80086a0:	4463      	add	r3, ip
 80086a2:	616b      	str	r3, [r5, #20]
 80086a4:	783b      	ldrb	r3, [r7, #0]
 80086a6:	2b00      	cmp	r3, #0
 80086a8:	d100      	bne.n	80086ac <_vfiprintf_r+0xc8>
 80086aa:	e0ac      	b.n	8008806 <_vfiprintf_r+0x222>
 80086ac:	2201      	movs	r2, #1
 80086ae:	1c7b      	adds	r3, r7, #1
 80086b0:	9303      	str	r3, [sp, #12]
 80086b2:	2300      	movs	r3, #0
 80086b4:	4252      	negs	r2, r2
 80086b6:	606a      	str	r2, [r5, #4]
 80086b8:	a904      	add	r1, sp, #16
 80086ba:	3254      	adds	r2, #84	; 0x54
 80086bc:	1852      	adds	r2, r2, r1
 80086be:	602b      	str	r3, [r5, #0]
 80086c0:	60eb      	str	r3, [r5, #12]
 80086c2:	60ab      	str	r3, [r5, #8]
 80086c4:	7013      	strb	r3, [r2, #0]
 80086c6:	65ab      	str	r3, [r5, #88]	; 0x58
 80086c8:	9b03      	ldr	r3, [sp, #12]
 80086ca:	2205      	movs	r2, #5
 80086cc:	7819      	ldrb	r1, [r3, #0]
 80086ce:	485d      	ldr	r0, [pc, #372]	; (8008844 <_vfiprintf_r+0x260>)
 80086d0:	f7fe ff5a 	bl	8007588 <memchr>
 80086d4:	9b03      	ldr	r3, [sp, #12]
 80086d6:	1c5f      	adds	r7, r3, #1
 80086d8:	2800      	cmp	r0, #0
 80086da:	d120      	bne.n	800871e <_vfiprintf_r+0x13a>
 80086dc:	682a      	ldr	r2, [r5, #0]
 80086de:	06d3      	lsls	r3, r2, #27
 80086e0:	d504      	bpl.n	80086ec <_vfiprintf_r+0x108>
 80086e2:	2353      	movs	r3, #83	; 0x53
 80086e4:	a904      	add	r1, sp, #16
 80086e6:	185b      	adds	r3, r3, r1
 80086e8:	2120      	movs	r1, #32
 80086ea:	7019      	strb	r1, [r3, #0]
 80086ec:	0713      	lsls	r3, r2, #28
 80086ee:	d504      	bpl.n	80086fa <_vfiprintf_r+0x116>
 80086f0:	2353      	movs	r3, #83	; 0x53
 80086f2:	a904      	add	r1, sp, #16
 80086f4:	185b      	adds	r3, r3, r1
 80086f6:	212b      	movs	r1, #43	; 0x2b
 80086f8:	7019      	strb	r1, [r3, #0]
 80086fa:	9b03      	ldr	r3, [sp, #12]
 80086fc:	781b      	ldrb	r3, [r3, #0]
 80086fe:	2b2a      	cmp	r3, #42	; 0x2a
 8008700:	d016      	beq.n	8008730 <_vfiprintf_r+0x14c>
 8008702:	2100      	movs	r1, #0
 8008704:	68eb      	ldr	r3, [r5, #12]
 8008706:	9f03      	ldr	r7, [sp, #12]
 8008708:	783a      	ldrb	r2, [r7, #0]
 800870a:	1c78      	adds	r0, r7, #1
 800870c:	3a30      	subs	r2, #48	; 0x30
 800870e:	4684      	mov	ip, r0
 8008710:	2a09      	cmp	r2, #9
 8008712:	d94f      	bls.n	80087b4 <_vfiprintf_r+0x1d0>
 8008714:	2900      	cmp	r1, #0
 8008716:	d111      	bne.n	800873c <_vfiprintf_r+0x158>
 8008718:	e017      	b.n	800874a <_vfiprintf_r+0x166>
 800871a:	3701      	adds	r7, #1
 800871c:	e7a9      	b.n	8008672 <_vfiprintf_r+0x8e>
 800871e:	4b49      	ldr	r3, [pc, #292]	; (8008844 <_vfiprintf_r+0x260>)
 8008720:	682a      	ldr	r2, [r5, #0]
 8008722:	1ac0      	subs	r0, r0, r3
 8008724:	2301      	movs	r3, #1
 8008726:	4083      	lsls	r3, r0
 8008728:	4313      	orrs	r3, r2
 800872a:	602b      	str	r3, [r5, #0]
 800872c:	9703      	str	r7, [sp, #12]
 800872e:	e7cb      	b.n	80086c8 <_vfiprintf_r+0xe4>
 8008730:	9b07      	ldr	r3, [sp, #28]
 8008732:	1d19      	adds	r1, r3, #4
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	9107      	str	r1, [sp, #28]
 8008738:	2b00      	cmp	r3, #0
 800873a:	db01      	blt.n	8008740 <_vfiprintf_r+0x15c>
 800873c:	930b      	str	r3, [sp, #44]	; 0x2c
 800873e:	e004      	b.n	800874a <_vfiprintf_r+0x166>
 8008740:	425b      	negs	r3, r3
 8008742:	60eb      	str	r3, [r5, #12]
 8008744:	2302      	movs	r3, #2
 8008746:	4313      	orrs	r3, r2
 8008748:	602b      	str	r3, [r5, #0]
 800874a:	783b      	ldrb	r3, [r7, #0]
 800874c:	2b2e      	cmp	r3, #46	; 0x2e
 800874e:	d10a      	bne.n	8008766 <_vfiprintf_r+0x182>
 8008750:	787b      	ldrb	r3, [r7, #1]
 8008752:	2b2a      	cmp	r3, #42	; 0x2a
 8008754:	d137      	bne.n	80087c6 <_vfiprintf_r+0x1e2>
 8008756:	9b07      	ldr	r3, [sp, #28]
 8008758:	3702      	adds	r7, #2
 800875a:	1d1a      	adds	r2, r3, #4
 800875c:	681b      	ldr	r3, [r3, #0]
 800875e:	9207      	str	r2, [sp, #28]
 8008760:	2b00      	cmp	r3, #0
 8008762:	db2d      	blt.n	80087c0 <_vfiprintf_r+0x1dc>
 8008764:	9309      	str	r3, [sp, #36]	; 0x24
 8008766:	2203      	movs	r2, #3
 8008768:	7839      	ldrb	r1, [r7, #0]
 800876a:	4837      	ldr	r0, [pc, #220]	; (8008848 <_vfiprintf_r+0x264>)
 800876c:	f7fe ff0c 	bl	8007588 <memchr>
 8008770:	2800      	cmp	r0, #0
 8008772:	d007      	beq.n	8008784 <_vfiprintf_r+0x1a0>
 8008774:	4b34      	ldr	r3, [pc, #208]	; (8008848 <_vfiprintf_r+0x264>)
 8008776:	682a      	ldr	r2, [r5, #0]
 8008778:	1ac0      	subs	r0, r0, r3
 800877a:	2340      	movs	r3, #64	; 0x40
 800877c:	4083      	lsls	r3, r0
 800877e:	4313      	orrs	r3, r2
 8008780:	3701      	adds	r7, #1
 8008782:	602b      	str	r3, [r5, #0]
 8008784:	7839      	ldrb	r1, [r7, #0]
 8008786:	1c7b      	adds	r3, r7, #1
 8008788:	2206      	movs	r2, #6
 800878a:	4830      	ldr	r0, [pc, #192]	; (800884c <_vfiprintf_r+0x268>)
 800878c:	9303      	str	r3, [sp, #12]
 800878e:	7629      	strb	r1, [r5, #24]
 8008790:	f7fe fefa 	bl	8007588 <memchr>
 8008794:	2800      	cmp	r0, #0
 8008796:	d045      	beq.n	8008824 <_vfiprintf_r+0x240>
 8008798:	4b2d      	ldr	r3, [pc, #180]	; (8008850 <_vfiprintf_r+0x26c>)
 800879a:	2b00      	cmp	r3, #0
 800879c:	d127      	bne.n	80087ee <_vfiprintf_r+0x20a>
 800879e:	2207      	movs	r2, #7
 80087a0:	9b07      	ldr	r3, [sp, #28]
 80087a2:	3307      	adds	r3, #7
 80087a4:	4393      	bics	r3, r2
 80087a6:	3308      	adds	r3, #8
 80087a8:	9307      	str	r3, [sp, #28]
 80087aa:	696b      	ldr	r3, [r5, #20]
 80087ac:	9a04      	ldr	r2, [sp, #16]
 80087ae:	189b      	adds	r3, r3, r2
 80087b0:	616b      	str	r3, [r5, #20]
 80087b2:	e75d      	b.n	8008670 <_vfiprintf_r+0x8c>
 80087b4:	210a      	movs	r1, #10
 80087b6:	434b      	muls	r3, r1
 80087b8:	4667      	mov	r7, ip
 80087ba:	189b      	adds	r3, r3, r2
 80087bc:	3909      	subs	r1, #9
 80087be:	e7a3      	b.n	8008708 <_vfiprintf_r+0x124>
 80087c0:	2301      	movs	r3, #1
 80087c2:	425b      	negs	r3, r3
 80087c4:	e7ce      	b.n	8008764 <_vfiprintf_r+0x180>
 80087c6:	2300      	movs	r3, #0
 80087c8:	001a      	movs	r2, r3
 80087ca:	3701      	adds	r7, #1
 80087cc:	606b      	str	r3, [r5, #4]
 80087ce:	7839      	ldrb	r1, [r7, #0]
 80087d0:	1c78      	adds	r0, r7, #1
 80087d2:	3930      	subs	r1, #48	; 0x30
 80087d4:	4684      	mov	ip, r0
 80087d6:	2909      	cmp	r1, #9
 80087d8:	d903      	bls.n	80087e2 <_vfiprintf_r+0x1fe>
 80087da:	2b00      	cmp	r3, #0
 80087dc:	d0c3      	beq.n	8008766 <_vfiprintf_r+0x182>
 80087de:	9209      	str	r2, [sp, #36]	; 0x24
 80087e0:	e7c1      	b.n	8008766 <_vfiprintf_r+0x182>
 80087e2:	230a      	movs	r3, #10
 80087e4:	435a      	muls	r2, r3
 80087e6:	4667      	mov	r7, ip
 80087e8:	1852      	adds	r2, r2, r1
 80087ea:	3b09      	subs	r3, #9
 80087ec:	e7ef      	b.n	80087ce <_vfiprintf_r+0x1ea>
 80087ee:	ab07      	add	r3, sp, #28
 80087f0:	9300      	str	r3, [sp, #0]
 80087f2:	0022      	movs	r2, r4
 80087f4:	0029      	movs	r1, r5
 80087f6:	0030      	movs	r0, r6
 80087f8:	4b16      	ldr	r3, [pc, #88]	; (8008854 <_vfiprintf_r+0x270>)
 80087fa:	f7fb ffd5 	bl	80047a8 <_printf_float>
 80087fe:	9004      	str	r0, [sp, #16]
 8008800:	9b04      	ldr	r3, [sp, #16]
 8008802:	3301      	adds	r3, #1
 8008804:	d1d1      	bne.n	80087aa <_vfiprintf_r+0x1c6>
 8008806:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008808:	07db      	lsls	r3, r3, #31
 800880a:	d405      	bmi.n	8008818 <_vfiprintf_r+0x234>
 800880c:	89a3      	ldrh	r3, [r4, #12]
 800880e:	059b      	lsls	r3, r3, #22
 8008810:	d402      	bmi.n	8008818 <_vfiprintf_r+0x234>
 8008812:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008814:	f000 fac6 	bl	8008da4 <__retarget_lock_release_recursive>
 8008818:	89a3      	ldrh	r3, [r4, #12]
 800881a:	065b      	lsls	r3, r3, #25
 800881c:	d500      	bpl.n	8008820 <_vfiprintf_r+0x23c>
 800881e:	e70a      	b.n	8008636 <_vfiprintf_r+0x52>
 8008820:	980d      	ldr	r0, [sp, #52]	; 0x34
 8008822:	e70a      	b.n	800863a <_vfiprintf_r+0x56>
 8008824:	ab07      	add	r3, sp, #28
 8008826:	9300      	str	r3, [sp, #0]
 8008828:	0022      	movs	r2, r4
 800882a:	0029      	movs	r1, r5
 800882c:	0030      	movs	r0, r6
 800882e:	4b09      	ldr	r3, [pc, #36]	; (8008854 <_vfiprintf_r+0x270>)
 8008830:	f7fc fa6c 	bl	8004d0c <_printf_i>
 8008834:	e7e3      	b.n	80087fe <_vfiprintf_r+0x21a>
 8008836:	46c0      	nop			; (mov r8, r8)
 8008838:	080095d4 	.word	0x080095d4
 800883c:	080095f4 	.word	0x080095f4
 8008840:	080095b4 	.word	0x080095b4
 8008844:	08009564 	.word	0x08009564
 8008848:	0800956a 	.word	0x0800956a
 800884c:	0800956e 	.word	0x0800956e
 8008850:	080047a9 	.word	0x080047a9
 8008854:	080085c1 	.word	0x080085c1

08008858 <__swbuf_r>:
 8008858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800885a:	0005      	movs	r5, r0
 800885c:	000e      	movs	r6, r1
 800885e:	0014      	movs	r4, r2
 8008860:	2800      	cmp	r0, #0
 8008862:	d004      	beq.n	800886e <__swbuf_r+0x16>
 8008864:	6983      	ldr	r3, [r0, #24]
 8008866:	2b00      	cmp	r3, #0
 8008868:	d101      	bne.n	800886e <__swbuf_r+0x16>
 800886a:	f000 f9f9 	bl	8008c60 <__sinit>
 800886e:	4b22      	ldr	r3, [pc, #136]	; (80088f8 <__swbuf_r+0xa0>)
 8008870:	429c      	cmp	r4, r3
 8008872:	d12e      	bne.n	80088d2 <__swbuf_r+0x7a>
 8008874:	686c      	ldr	r4, [r5, #4]
 8008876:	69a3      	ldr	r3, [r4, #24]
 8008878:	60a3      	str	r3, [r4, #8]
 800887a:	89a3      	ldrh	r3, [r4, #12]
 800887c:	071b      	lsls	r3, r3, #28
 800887e:	d532      	bpl.n	80088e6 <__swbuf_r+0x8e>
 8008880:	6923      	ldr	r3, [r4, #16]
 8008882:	2b00      	cmp	r3, #0
 8008884:	d02f      	beq.n	80088e6 <__swbuf_r+0x8e>
 8008886:	6823      	ldr	r3, [r4, #0]
 8008888:	6922      	ldr	r2, [r4, #16]
 800888a:	b2f7      	uxtb	r7, r6
 800888c:	1a98      	subs	r0, r3, r2
 800888e:	6963      	ldr	r3, [r4, #20]
 8008890:	b2f6      	uxtb	r6, r6
 8008892:	4283      	cmp	r3, r0
 8008894:	dc05      	bgt.n	80088a2 <__swbuf_r+0x4a>
 8008896:	0021      	movs	r1, r4
 8008898:	0028      	movs	r0, r5
 800889a:	f000 f93f 	bl	8008b1c <_fflush_r>
 800889e:	2800      	cmp	r0, #0
 80088a0:	d127      	bne.n	80088f2 <__swbuf_r+0x9a>
 80088a2:	68a3      	ldr	r3, [r4, #8]
 80088a4:	3001      	adds	r0, #1
 80088a6:	3b01      	subs	r3, #1
 80088a8:	60a3      	str	r3, [r4, #8]
 80088aa:	6823      	ldr	r3, [r4, #0]
 80088ac:	1c5a      	adds	r2, r3, #1
 80088ae:	6022      	str	r2, [r4, #0]
 80088b0:	701f      	strb	r7, [r3, #0]
 80088b2:	6963      	ldr	r3, [r4, #20]
 80088b4:	4283      	cmp	r3, r0
 80088b6:	d004      	beq.n	80088c2 <__swbuf_r+0x6a>
 80088b8:	89a3      	ldrh	r3, [r4, #12]
 80088ba:	07db      	lsls	r3, r3, #31
 80088bc:	d507      	bpl.n	80088ce <__swbuf_r+0x76>
 80088be:	2e0a      	cmp	r6, #10
 80088c0:	d105      	bne.n	80088ce <__swbuf_r+0x76>
 80088c2:	0021      	movs	r1, r4
 80088c4:	0028      	movs	r0, r5
 80088c6:	f000 f929 	bl	8008b1c <_fflush_r>
 80088ca:	2800      	cmp	r0, #0
 80088cc:	d111      	bne.n	80088f2 <__swbuf_r+0x9a>
 80088ce:	0030      	movs	r0, r6
 80088d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80088d2:	4b0a      	ldr	r3, [pc, #40]	; (80088fc <__swbuf_r+0xa4>)
 80088d4:	429c      	cmp	r4, r3
 80088d6:	d101      	bne.n	80088dc <__swbuf_r+0x84>
 80088d8:	68ac      	ldr	r4, [r5, #8]
 80088da:	e7cc      	b.n	8008876 <__swbuf_r+0x1e>
 80088dc:	4b08      	ldr	r3, [pc, #32]	; (8008900 <__swbuf_r+0xa8>)
 80088de:	429c      	cmp	r4, r3
 80088e0:	d1c9      	bne.n	8008876 <__swbuf_r+0x1e>
 80088e2:	68ec      	ldr	r4, [r5, #12]
 80088e4:	e7c7      	b.n	8008876 <__swbuf_r+0x1e>
 80088e6:	0021      	movs	r1, r4
 80088e8:	0028      	movs	r0, r5
 80088ea:	f000 f80b 	bl	8008904 <__swsetup_r>
 80088ee:	2800      	cmp	r0, #0
 80088f0:	d0c9      	beq.n	8008886 <__swbuf_r+0x2e>
 80088f2:	2601      	movs	r6, #1
 80088f4:	4276      	negs	r6, r6
 80088f6:	e7ea      	b.n	80088ce <__swbuf_r+0x76>
 80088f8:	080095d4 	.word	0x080095d4
 80088fc:	080095f4 	.word	0x080095f4
 8008900:	080095b4 	.word	0x080095b4

08008904 <__swsetup_r>:
 8008904:	4b37      	ldr	r3, [pc, #220]	; (80089e4 <__swsetup_r+0xe0>)
 8008906:	b570      	push	{r4, r5, r6, lr}
 8008908:	681d      	ldr	r5, [r3, #0]
 800890a:	0006      	movs	r6, r0
 800890c:	000c      	movs	r4, r1
 800890e:	2d00      	cmp	r5, #0
 8008910:	d005      	beq.n	800891e <__swsetup_r+0x1a>
 8008912:	69ab      	ldr	r3, [r5, #24]
 8008914:	2b00      	cmp	r3, #0
 8008916:	d102      	bne.n	800891e <__swsetup_r+0x1a>
 8008918:	0028      	movs	r0, r5
 800891a:	f000 f9a1 	bl	8008c60 <__sinit>
 800891e:	4b32      	ldr	r3, [pc, #200]	; (80089e8 <__swsetup_r+0xe4>)
 8008920:	429c      	cmp	r4, r3
 8008922:	d10f      	bne.n	8008944 <__swsetup_r+0x40>
 8008924:	686c      	ldr	r4, [r5, #4]
 8008926:	230c      	movs	r3, #12
 8008928:	5ee2      	ldrsh	r2, [r4, r3]
 800892a:	b293      	uxth	r3, r2
 800892c:	0711      	lsls	r1, r2, #28
 800892e:	d42d      	bmi.n	800898c <__swsetup_r+0x88>
 8008930:	06d9      	lsls	r1, r3, #27
 8008932:	d411      	bmi.n	8008958 <__swsetup_r+0x54>
 8008934:	2309      	movs	r3, #9
 8008936:	2001      	movs	r0, #1
 8008938:	6033      	str	r3, [r6, #0]
 800893a:	3337      	adds	r3, #55	; 0x37
 800893c:	4313      	orrs	r3, r2
 800893e:	81a3      	strh	r3, [r4, #12]
 8008940:	4240      	negs	r0, r0
 8008942:	bd70      	pop	{r4, r5, r6, pc}
 8008944:	4b29      	ldr	r3, [pc, #164]	; (80089ec <__swsetup_r+0xe8>)
 8008946:	429c      	cmp	r4, r3
 8008948:	d101      	bne.n	800894e <__swsetup_r+0x4a>
 800894a:	68ac      	ldr	r4, [r5, #8]
 800894c:	e7eb      	b.n	8008926 <__swsetup_r+0x22>
 800894e:	4b28      	ldr	r3, [pc, #160]	; (80089f0 <__swsetup_r+0xec>)
 8008950:	429c      	cmp	r4, r3
 8008952:	d1e8      	bne.n	8008926 <__swsetup_r+0x22>
 8008954:	68ec      	ldr	r4, [r5, #12]
 8008956:	e7e6      	b.n	8008926 <__swsetup_r+0x22>
 8008958:	075b      	lsls	r3, r3, #29
 800895a:	d513      	bpl.n	8008984 <__swsetup_r+0x80>
 800895c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800895e:	2900      	cmp	r1, #0
 8008960:	d008      	beq.n	8008974 <__swsetup_r+0x70>
 8008962:	0023      	movs	r3, r4
 8008964:	3344      	adds	r3, #68	; 0x44
 8008966:	4299      	cmp	r1, r3
 8008968:	d002      	beq.n	8008970 <__swsetup_r+0x6c>
 800896a:	0030      	movs	r0, r6
 800896c:	f7ff fb16 	bl	8007f9c <_free_r>
 8008970:	2300      	movs	r3, #0
 8008972:	6363      	str	r3, [r4, #52]	; 0x34
 8008974:	2224      	movs	r2, #36	; 0x24
 8008976:	89a3      	ldrh	r3, [r4, #12]
 8008978:	4393      	bics	r3, r2
 800897a:	81a3      	strh	r3, [r4, #12]
 800897c:	2300      	movs	r3, #0
 800897e:	6063      	str	r3, [r4, #4]
 8008980:	6923      	ldr	r3, [r4, #16]
 8008982:	6023      	str	r3, [r4, #0]
 8008984:	2308      	movs	r3, #8
 8008986:	89a2      	ldrh	r2, [r4, #12]
 8008988:	4313      	orrs	r3, r2
 800898a:	81a3      	strh	r3, [r4, #12]
 800898c:	6923      	ldr	r3, [r4, #16]
 800898e:	2b00      	cmp	r3, #0
 8008990:	d10b      	bne.n	80089aa <__swsetup_r+0xa6>
 8008992:	21a0      	movs	r1, #160	; 0xa0
 8008994:	2280      	movs	r2, #128	; 0x80
 8008996:	89a3      	ldrh	r3, [r4, #12]
 8008998:	0089      	lsls	r1, r1, #2
 800899a:	0092      	lsls	r2, r2, #2
 800899c:	400b      	ands	r3, r1
 800899e:	4293      	cmp	r3, r2
 80089a0:	d003      	beq.n	80089aa <__swsetup_r+0xa6>
 80089a2:	0021      	movs	r1, r4
 80089a4:	0030      	movs	r0, r6
 80089a6:	f000 fa27 	bl	8008df8 <__smakebuf_r>
 80089aa:	220c      	movs	r2, #12
 80089ac:	5ea3      	ldrsh	r3, [r4, r2]
 80089ae:	2001      	movs	r0, #1
 80089b0:	001a      	movs	r2, r3
 80089b2:	b299      	uxth	r1, r3
 80089b4:	4002      	ands	r2, r0
 80089b6:	4203      	tst	r3, r0
 80089b8:	d00f      	beq.n	80089da <__swsetup_r+0xd6>
 80089ba:	2200      	movs	r2, #0
 80089bc:	60a2      	str	r2, [r4, #8]
 80089be:	6962      	ldr	r2, [r4, #20]
 80089c0:	4252      	negs	r2, r2
 80089c2:	61a2      	str	r2, [r4, #24]
 80089c4:	2000      	movs	r0, #0
 80089c6:	6922      	ldr	r2, [r4, #16]
 80089c8:	4282      	cmp	r2, r0
 80089ca:	d1ba      	bne.n	8008942 <__swsetup_r+0x3e>
 80089cc:	060a      	lsls	r2, r1, #24
 80089ce:	d5b8      	bpl.n	8008942 <__swsetup_r+0x3e>
 80089d0:	2240      	movs	r2, #64	; 0x40
 80089d2:	4313      	orrs	r3, r2
 80089d4:	81a3      	strh	r3, [r4, #12]
 80089d6:	3801      	subs	r0, #1
 80089d8:	e7b3      	b.n	8008942 <__swsetup_r+0x3e>
 80089da:	0788      	lsls	r0, r1, #30
 80089dc:	d400      	bmi.n	80089e0 <__swsetup_r+0xdc>
 80089de:	6962      	ldr	r2, [r4, #20]
 80089e0:	60a2      	str	r2, [r4, #8]
 80089e2:	e7ef      	b.n	80089c4 <__swsetup_r+0xc0>
 80089e4:	2000000c 	.word	0x2000000c
 80089e8:	080095d4 	.word	0x080095d4
 80089ec:	080095f4 	.word	0x080095f4
 80089f0:	080095b4 	.word	0x080095b4

080089f4 <abort>:
 80089f4:	2006      	movs	r0, #6
 80089f6:	b510      	push	{r4, lr}
 80089f8:	f000 fa74 	bl	8008ee4 <raise>
 80089fc:	2001      	movs	r0, #1
 80089fe:	f7f9 fea6 	bl	800274e <_exit>
	...

08008a04 <__sflush_r>:
 8008a04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008a06:	898b      	ldrh	r3, [r1, #12]
 8008a08:	0005      	movs	r5, r0
 8008a0a:	000c      	movs	r4, r1
 8008a0c:	071a      	lsls	r2, r3, #28
 8008a0e:	d45f      	bmi.n	8008ad0 <__sflush_r+0xcc>
 8008a10:	684a      	ldr	r2, [r1, #4]
 8008a12:	2a00      	cmp	r2, #0
 8008a14:	dc04      	bgt.n	8008a20 <__sflush_r+0x1c>
 8008a16:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8008a18:	2a00      	cmp	r2, #0
 8008a1a:	dc01      	bgt.n	8008a20 <__sflush_r+0x1c>
 8008a1c:	2000      	movs	r0, #0
 8008a1e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008a20:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8008a22:	2f00      	cmp	r7, #0
 8008a24:	d0fa      	beq.n	8008a1c <__sflush_r+0x18>
 8008a26:	2200      	movs	r2, #0
 8008a28:	2180      	movs	r1, #128	; 0x80
 8008a2a:	682e      	ldr	r6, [r5, #0]
 8008a2c:	602a      	str	r2, [r5, #0]
 8008a2e:	001a      	movs	r2, r3
 8008a30:	0149      	lsls	r1, r1, #5
 8008a32:	400a      	ands	r2, r1
 8008a34:	420b      	tst	r3, r1
 8008a36:	d034      	beq.n	8008aa2 <__sflush_r+0x9e>
 8008a38:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008a3a:	89a3      	ldrh	r3, [r4, #12]
 8008a3c:	075b      	lsls	r3, r3, #29
 8008a3e:	d506      	bpl.n	8008a4e <__sflush_r+0x4a>
 8008a40:	6863      	ldr	r3, [r4, #4]
 8008a42:	1ac0      	subs	r0, r0, r3
 8008a44:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008a46:	2b00      	cmp	r3, #0
 8008a48:	d001      	beq.n	8008a4e <__sflush_r+0x4a>
 8008a4a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008a4c:	1ac0      	subs	r0, r0, r3
 8008a4e:	0002      	movs	r2, r0
 8008a50:	6a21      	ldr	r1, [r4, #32]
 8008a52:	2300      	movs	r3, #0
 8008a54:	0028      	movs	r0, r5
 8008a56:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8008a58:	47b8      	blx	r7
 8008a5a:	89a1      	ldrh	r1, [r4, #12]
 8008a5c:	1c43      	adds	r3, r0, #1
 8008a5e:	d106      	bne.n	8008a6e <__sflush_r+0x6a>
 8008a60:	682b      	ldr	r3, [r5, #0]
 8008a62:	2b1d      	cmp	r3, #29
 8008a64:	d831      	bhi.n	8008aca <__sflush_r+0xc6>
 8008a66:	4a2c      	ldr	r2, [pc, #176]	; (8008b18 <__sflush_r+0x114>)
 8008a68:	40da      	lsrs	r2, r3
 8008a6a:	07d3      	lsls	r3, r2, #31
 8008a6c:	d52d      	bpl.n	8008aca <__sflush_r+0xc6>
 8008a6e:	2300      	movs	r3, #0
 8008a70:	6063      	str	r3, [r4, #4]
 8008a72:	6923      	ldr	r3, [r4, #16]
 8008a74:	6023      	str	r3, [r4, #0]
 8008a76:	04cb      	lsls	r3, r1, #19
 8008a78:	d505      	bpl.n	8008a86 <__sflush_r+0x82>
 8008a7a:	1c43      	adds	r3, r0, #1
 8008a7c:	d102      	bne.n	8008a84 <__sflush_r+0x80>
 8008a7e:	682b      	ldr	r3, [r5, #0]
 8008a80:	2b00      	cmp	r3, #0
 8008a82:	d100      	bne.n	8008a86 <__sflush_r+0x82>
 8008a84:	6560      	str	r0, [r4, #84]	; 0x54
 8008a86:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008a88:	602e      	str	r6, [r5, #0]
 8008a8a:	2900      	cmp	r1, #0
 8008a8c:	d0c6      	beq.n	8008a1c <__sflush_r+0x18>
 8008a8e:	0023      	movs	r3, r4
 8008a90:	3344      	adds	r3, #68	; 0x44
 8008a92:	4299      	cmp	r1, r3
 8008a94:	d002      	beq.n	8008a9c <__sflush_r+0x98>
 8008a96:	0028      	movs	r0, r5
 8008a98:	f7ff fa80 	bl	8007f9c <_free_r>
 8008a9c:	2000      	movs	r0, #0
 8008a9e:	6360      	str	r0, [r4, #52]	; 0x34
 8008aa0:	e7bd      	b.n	8008a1e <__sflush_r+0x1a>
 8008aa2:	2301      	movs	r3, #1
 8008aa4:	0028      	movs	r0, r5
 8008aa6:	6a21      	ldr	r1, [r4, #32]
 8008aa8:	47b8      	blx	r7
 8008aaa:	1c43      	adds	r3, r0, #1
 8008aac:	d1c5      	bne.n	8008a3a <__sflush_r+0x36>
 8008aae:	682b      	ldr	r3, [r5, #0]
 8008ab0:	2b00      	cmp	r3, #0
 8008ab2:	d0c2      	beq.n	8008a3a <__sflush_r+0x36>
 8008ab4:	2b1d      	cmp	r3, #29
 8008ab6:	d001      	beq.n	8008abc <__sflush_r+0xb8>
 8008ab8:	2b16      	cmp	r3, #22
 8008aba:	d101      	bne.n	8008ac0 <__sflush_r+0xbc>
 8008abc:	602e      	str	r6, [r5, #0]
 8008abe:	e7ad      	b.n	8008a1c <__sflush_r+0x18>
 8008ac0:	2340      	movs	r3, #64	; 0x40
 8008ac2:	89a2      	ldrh	r2, [r4, #12]
 8008ac4:	4313      	orrs	r3, r2
 8008ac6:	81a3      	strh	r3, [r4, #12]
 8008ac8:	e7a9      	b.n	8008a1e <__sflush_r+0x1a>
 8008aca:	2340      	movs	r3, #64	; 0x40
 8008acc:	430b      	orrs	r3, r1
 8008ace:	e7fa      	b.n	8008ac6 <__sflush_r+0xc2>
 8008ad0:	690f      	ldr	r7, [r1, #16]
 8008ad2:	2f00      	cmp	r7, #0
 8008ad4:	d0a2      	beq.n	8008a1c <__sflush_r+0x18>
 8008ad6:	680a      	ldr	r2, [r1, #0]
 8008ad8:	600f      	str	r7, [r1, #0]
 8008ada:	1bd2      	subs	r2, r2, r7
 8008adc:	9201      	str	r2, [sp, #4]
 8008ade:	2200      	movs	r2, #0
 8008ae0:	079b      	lsls	r3, r3, #30
 8008ae2:	d100      	bne.n	8008ae6 <__sflush_r+0xe2>
 8008ae4:	694a      	ldr	r2, [r1, #20]
 8008ae6:	60a2      	str	r2, [r4, #8]
 8008ae8:	9b01      	ldr	r3, [sp, #4]
 8008aea:	2b00      	cmp	r3, #0
 8008aec:	dc00      	bgt.n	8008af0 <__sflush_r+0xec>
 8008aee:	e795      	b.n	8008a1c <__sflush_r+0x18>
 8008af0:	003a      	movs	r2, r7
 8008af2:	0028      	movs	r0, r5
 8008af4:	9b01      	ldr	r3, [sp, #4]
 8008af6:	6a21      	ldr	r1, [r4, #32]
 8008af8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008afa:	47b0      	blx	r6
 8008afc:	2800      	cmp	r0, #0
 8008afe:	dc06      	bgt.n	8008b0e <__sflush_r+0x10a>
 8008b00:	2340      	movs	r3, #64	; 0x40
 8008b02:	2001      	movs	r0, #1
 8008b04:	89a2      	ldrh	r2, [r4, #12]
 8008b06:	4240      	negs	r0, r0
 8008b08:	4313      	orrs	r3, r2
 8008b0a:	81a3      	strh	r3, [r4, #12]
 8008b0c:	e787      	b.n	8008a1e <__sflush_r+0x1a>
 8008b0e:	9b01      	ldr	r3, [sp, #4]
 8008b10:	183f      	adds	r7, r7, r0
 8008b12:	1a1b      	subs	r3, r3, r0
 8008b14:	9301      	str	r3, [sp, #4]
 8008b16:	e7e7      	b.n	8008ae8 <__sflush_r+0xe4>
 8008b18:	20400001 	.word	0x20400001

08008b1c <_fflush_r>:
 8008b1c:	690b      	ldr	r3, [r1, #16]
 8008b1e:	b570      	push	{r4, r5, r6, lr}
 8008b20:	0005      	movs	r5, r0
 8008b22:	000c      	movs	r4, r1
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d102      	bne.n	8008b2e <_fflush_r+0x12>
 8008b28:	2500      	movs	r5, #0
 8008b2a:	0028      	movs	r0, r5
 8008b2c:	bd70      	pop	{r4, r5, r6, pc}
 8008b2e:	2800      	cmp	r0, #0
 8008b30:	d004      	beq.n	8008b3c <_fflush_r+0x20>
 8008b32:	6983      	ldr	r3, [r0, #24]
 8008b34:	2b00      	cmp	r3, #0
 8008b36:	d101      	bne.n	8008b3c <_fflush_r+0x20>
 8008b38:	f000 f892 	bl	8008c60 <__sinit>
 8008b3c:	4b14      	ldr	r3, [pc, #80]	; (8008b90 <_fflush_r+0x74>)
 8008b3e:	429c      	cmp	r4, r3
 8008b40:	d11b      	bne.n	8008b7a <_fflush_r+0x5e>
 8008b42:	686c      	ldr	r4, [r5, #4]
 8008b44:	220c      	movs	r2, #12
 8008b46:	5ea3      	ldrsh	r3, [r4, r2]
 8008b48:	2b00      	cmp	r3, #0
 8008b4a:	d0ed      	beq.n	8008b28 <_fflush_r+0xc>
 8008b4c:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008b4e:	07d2      	lsls	r2, r2, #31
 8008b50:	d404      	bmi.n	8008b5c <_fflush_r+0x40>
 8008b52:	059b      	lsls	r3, r3, #22
 8008b54:	d402      	bmi.n	8008b5c <_fflush_r+0x40>
 8008b56:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008b58:	f000 f923 	bl	8008da2 <__retarget_lock_acquire_recursive>
 8008b5c:	0028      	movs	r0, r5
 8008b5e:	0021      	movs	r1, r4
 8008b60:	f7ff ff50 	bl	8008a04 <__sflush_r>
 8008b64:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008b66:	0005      	movs	r5, r0
 8008b68:	07db      	lsls	r3, r3, #31
 8008b6a:	d4de      	bmi.n	8008b2a <_fflush_r+0xe>
 8008b6c:	89a3      	ldrh	r3, [r4, #12]
 8008b6e:	059b      	lsls	r3, r3, #22
 8008b70:	d4db      	bmi.n	8008b2a <_fflush_r+0xe>
 8008b72:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008b74:	f000 f916 	bl	8008da4 <__retarget_lock_release_recursive>
 8008b78:	e7d7      	b.n	8008b2a <_fflush_r+0xe>
 8008b7a:	4b06      	ldr	r3, [pc, #24]	; (8008b94 <_fflush_r+0x78>)
 8008b7c:	429c      	cmp	r4, r3
 8008b7e:	d101      	bne.n	8008b84 <_fflush_r+0x68>
 8008b80:	68ac      	ldr	r4, [r5, #8]
 8008b82:	e7df      	b.n	8008b44 <_fflush_r+0x28>
 8008b84:	4b04      	ldr	r3, [pc, #16]	; (8008b98 <_fflush_r+0x7c>)
 8008b86:	429c      	cmp	r4, r3
 8008b88:	d1dc      	bne.n	8008b44 <_fflush_r+0x28>
 8008b8a:	68ec      	ldr	r4, [r5, #12]
 8008b8c:	e7da      	b.n	8008b44 <_fflush_r+0x28>
 8008b8e:	46c0      	nop			; (mov r8, r8)
 8008b90:	080095d4 	.word	0x080095d4
 8008b94:	080095f4 	.word	0x080095f4
 8008b98:	080095b4 	.word	0x080095b4

08008b9c <std>:
 8008b9c:	2300      	movs	r3, #0
 8008b9e:	b510      	push	{r4, lr}
 8008ba0:	0004      	movs	r4, r0
 8008ba2:	6003      	str	r3, [r0, #0]
 8008ba4:	6043      	str	r3, [r0, #4]
 8008ba6:	6083      	str	r3, [r0, #8]
 8008ba8:	8181      	strh	r1, [r0, #12]
 8008baa:	6643      	str	r3, [r0, #100]	; 0x64
 8008bac:	0019      	movs	r1, r3
 8008bae:	81c2      	strh	r2, [r0, #14]
 8008bb0:	6103      	str	r3, [r0, #16]
 8008bb2:	6143      	str	r3, [r0, #20]
 8008bb4:	6183      	str	r3, [r0, #24]
 8008bb6:	2208      	movs	r2, #8
 8008bb8:	305c      	adds	r0, #92	; 0x5c
 8008bba:	f7fb fd43 	bl	8004644 <memset>
 8008bbe:	4b05      	ldr	r3, [pc, #20]	; (8008bd4 <std+0x38>)
 8008bc0:	6224      	str	r4, [r4, #32]
 8008bc2:	6263      	str	r3, [r4, #36]	; 0x24
 8008bc4:	4b04      	ldr	r3, [pc, #16]	; (8008bd8 <std+0x3c>)
 8008bc6:	62a3      	str	r3, [r4, #40]	; 0x28
 8008bc8:	4b04      	ldr	r3, [pc, #16]	; (8008bdc <std+0x40>)
 8008bca:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008bcc:	4b04      	ldr	r3, [pc, #16]	; (8008be0 <std+0x44>)
 8008bce:	6323      	str	r3, [r4, #48]	; 0x30
 8008bd0:	bd10      	pop	{r4, pc}
 8008bd2:	46c0      	nop			; (mov r8, r8)
 8008bd4:	08008f25 	.word	0x08008f25
 8008bd8:	08008f4d 	.word	0x08008f4d
 8008bdc:	08008f85 	.word	0x08008f85
 8008be0:	08008fb1 	.word	0x08008fb1

08008be4 <_cleanup_r>:
 8008be4:	b510      	push	{r4, lr}
 8008be6:	4902      	ldr	r1, [pc, #8]	; (8008bf0 <_cleanup_r+0xc>)
 8008be8:	f000 f8ba 	bl	8008d60 <_fwalk_reent>
 8008bec:	bd10      	pop	{r4, pc}
 8008bee:	46c0      	nop			; (mov r8, r8)
 8008bf0:	08008b1d 	.word	0x08008b1d

08008bf4 <__sfmoreglue>:
 8008bf4:	b570      	push	{r4, r5, r6, lr}
 8008bf6:	2568      	movs	r5, #104	; 0x68
 8008bf8:	1e4a      	subs	r2, r1, #1
 8008bfa:	4355      	muls	r5, r2
 8008bfc:	000e      	movs	r6, r1
 8008bfe:	0029      	movs	r1, r5
 8008c00:	3174      	adds	r1, #116	; 0x74
 8008c02:	f7ff fa37 	bl	8008074 <_malloc_r>
 8008c06:	1e04      	subs	r4, r0, #0
 8008c08:	d008      	beq.n	8008c1c <__sfmoreglue+0x28>
 8008c0a:	2100      	movs	r1, #0
 8008c0c:	002a      	movs	r2, r5
 8008c0e:	6001      	str	r1, [r0, #0]
 8008c10:	6046      	str	r6, [r0, #4]
 8008c12:	300c      	adds	r0, #12
 8008c14:	60a0      	str	r0, [r4, #8]
 8008c16:	3268      	adds	r2, #104	; 0x68
 8008c18:	f7fb fd14 	bl	8004644 <memset>
 8008c1c:	0020      	movs	r0, r4
 8008c1e:	bd70      	pop	{r4, r5, r6, pc}

08008c20 <__sfp_lock_acquire>:
 8008c20:	b510      	push	{r4, lr}
 8008c22:	4802      	ldr	r0, [pc, #8]	; (8008c2c <__sfp_lock_acquire+0xc>)
 8008c24:	f000 f8bd 	bl	8008da2 <__retarget_lock_acquire_recursive>
 8008c28:	bd10      	pop	{r4, pc}
 8008c2a:	46c0      	nop			; (mov r8, r8)
 8008c2c:	200002f5 	.word	0x200002f5

08008c30 <__sfp_lock_release>:
 8008c30:	b510      	push	{r4, lr}
 8008c32:	4802      	ldr	r0, [pc, #8]	; (8008c3c <__sfp_lock_release+0xc>)
 8008c34:	f000 f8b6 	bl	8008da4 <__retarget_lock_release_recursive>
 8008c38:	bd10      	pop	{r4, pc}
 8008c3a:	46c0      	nop			; (mov r8, r8)
 8008c3c:	200002f5 	.word	0x200002f5

08008c40 <__sinit_lock_acquire>:
 8008c40:	b510      	push	{r4, lr}
 8008c42:	4802      	ldr	r0, [pc, #8]	; (8008c4c <__sinit_lock_acquire+0xc>)
 8008c44:	f000 f8ad 	bl	8008da2 <__retarget_lock_acquire_recursive>
 8008c48:	bd10      	pop	{r4, pc}
 8008c4a:	46c0      	nop			; (mov r8, r8)
 8008c4c:	200002f6 	.word	0x200002f6

08008c50 <__sinit_lock_release>:
 8008c50:	b510      	push	{r4, lr}
 8008c52:	4802      	ldr	r0, [pc, #8]	; (8008c5c <__sinit_lock_release+0xc>)
 8008c54:	f000 f8a6 	bl	8008da4 <__retarget_lock_release_recursive>
 8008c58:	bd10      	pop	{r4, pc}
 8008c5a:	46c0      	nop			; (mov r8, r8)
 8008c5c:	200002f6 	.word	0x200002f6

08008c60 <__sinit>:
 8008c60:	b513      	push	{r0, r1, r4, lr}
 8008c62:	0004      	movs	r4, r0
 8008c64:	f7ff ffec 	bl	8008c40 <__sinit_lock_acquire>
 8008c68:	69a3      	ldr	r3, [r4, #24]
 8008c6a:	2b00      	cmp	r3, #0
 8008c6c:	d002      	beq.n	8008c74 <__sinit+0x14>
 8008c6e:	f7ff ffef 	bl	8008c50 <__sinit_lock_release>
 8008c72:	bd13      	pop	{r0, r1, r4, pc}
 8008c74:	64a3      	str	r3, [r4, #72]	; 0x48
 8008c76:	64e3      	str	r3, [r4, #76]	; 0x4c
 8008c78:	6523      	str	r3, [r4, #80]	; 0x50
 8008c7a:	4b13      	ldr	r3, [pc, #76]	; (8008cc8 <__sinit+0x68>)
 8008c7c:	4a13      	ldr	r2, [pc, #76]	; (8008ccc <__sinit+0x6c>)
 8008c7e:	681b      	ldr	r3, [r3, #0]
 8008c80:	62a2      	str	r2, [r4, #40]	; 0x28
 8008c82:	9301      	str	r3, [sp, #4]
 8008c84:	42a3      	cmp	r3, r4
 8008c86:	d101      	bne.n	8008c8c <__sinit+0x2c>
 8008c88:	2301      	movs	r3, #1
 8008c8a:	61a3      	str	r3, [r4, #24]
 8008c8c:	0020      	movs	r0, r4
 8008c8e:	f000 f81f 	bl	8008cd0 <__sfp>
 8008c92:	6060      	str	r0, [r4, #4]
 8008c94:	0020      	movs	r0, r4
 8008c96:	f000 f81b 	bl	8008cd0 <__sfp>
 8008c9a:	60a0      	str	r0, [r4, #8]
 8008c9c:	0020      	movs	r0, r4
 8008c9e:	f000 f817 	bl	8008cd0 <__sfp>
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	2104      	movs	r1, #4
 8008ca6:	60e0      	str	r0, [r4, #12]
 8008ca8:	6860      	ldr	r0, [r4, #4]
 8008caa:	f7ff ff77 	bl	8008b9c <std>
 8008cae:	2201      	movs	r2, #1
 8008cb0:	2109      	movs	r1, #9
 8008cb2:	68a0      	ldr	r0, [r4, #8]
 8008cb4:	f7ff ff72 	bl	8008b9c <std>
 8008cb8:	2202      	movs	r2, #2
 8008cba:	2112      	movs	r1, #18
 8008cbc:	68e0      	ldr	r0, [r4, #12]
 8008cbe:	f7ff ff6d 	bl	8008b9c <std>
 8008cc2:	2301      	movs	r3, #1
 8008cc4:	61a3      	str	r3, [r4, #24]
 8008cc6:	e7d2      	b.n	8008c6e <__sinit+0xe>
 8008cc8:	08009170 	.word	0x08009170
 8008ccc:	08008be5 	.word	0x08008be5

08008cd0 <__sfp>:
 8008cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008cd2:	0007      	movs	r7, r0
 8008cd4:	f7ff ffa4 	bl	8008c20 <__sfp_lock_acquire>
 8008cd8:	4b1f      	ldr	r3, [pc, #124]	; (8008d58 <__sfp+0x88>)
 8008cda:	681e      	ldr	r6, [r3, #0]
 8008cdc:	69b3      	ldr	r3, [r6, #24]
 8008cde:	2b00      	cmp	r3, #0
 8008ce0:	d102      	bne.n	8008ce8 <__sfp+0x18>
 8008ce2:	0030      	movs	r0, r6
 8008ce4:	f7ff ffbc 	bl	8008c60 <__sinit>
 8008ce8:	3648      	adds	r6, #72	; 0x48
 8008cea:	68b4      	ldr	r4, [r6, #8]
 8008cec:	6873      	ldr	r3, [r6, #4]
 8008cee:	3b01      	subs	r3, #1
 8008cf0:	d504      	bpl.n	8008cfc <__sfp+0x2c>
 8008cf2:	6833      	ldr	r3, [r6, #0]
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	d022      	beq.n	8008d3e <__sfp+0x6e>
 8008cf8:	6836      	ldr	r6, [r6, #0]
 8008cfa:	e7f6      	b.n	8008cea <__sfp+0x1a>
 8008cfc:	220c      	movs	r2, #12
 8008cfe:	5ea5      	ldrsh	r5, [r4, r2]
 8008d00:	2d00      	cmp	r5, #0
 8008d02:	d11a      	bne.n	8008d3a <__sfp+0x6a>
 8008d04:	0020      	movs	r0, r4
 8008d06:	4b15      	ldr	r3, [pc, #84]	; (8008d5c <__sfp+0x8c>)
 8008d08:	3058      	adds	r0, #88	; 0x58
 8008d0a:	60e3      	str	r3, [r4, #12]
 8008d0c:	6665      	str	r5, [r4, #100]	; 0x64
 8008d0e:	f000 f847 	bl	8008da0 <__retarget_lock_init_recursive>
 8008d12:	f7ff ff8d 	bl	8008c30 <__sfp_lock_release>
 8008d16:	0020      	movs	r0, r4
 8008d18:	2208      	movs	r2, #8
 8008d1a:	0029      	movs	r1, r5
 8008d1c:	6025      	str	r5, [r4, #0]
 8008d1e:	60a5      	str	r5, [r4, #8]
 8008d20:	6065      	str	r5, [r4, #4]
 8008d22:	6125      	str	r5, [r4, #16]
 8008d24:	6165      	str	r5, [r4, #20]
 8008d26:	61a5      	str	r5, [r4, #24]
 8008d28:	305c      	adds	r0, #92	; 0x5c
 8008d2a:	f7fb fc8b 	bl	8004644 <memset>
 8008d2e:	6365      	str	r5, [r4, #52]	; 0x34
 8008d30:	63a5      	str	r5, [r4, #56]	; 0x38
 8008d32:	64a5      	str	r5, [r4, #72]	; 0x48
 8008d34:	64e5      	str	r5, [r4, #76]	; 0x4c
 8008d36:	0020      	movs	r0, r4
 8008d38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008d3a:	3468      	adds	r4, #104	; 0x68
 8008d3c:	e7d7      	b.n	8008cee <__sfp+0x1e>
 8008d3e:	2104      	movs	r1, #4
 8008d40:	0038      	movs	r0, r7
 8008d42:	f7ff ff57 	bl	8008bf4 <__sfmoreglue>
 8008d46:	1e04      	subs	r4, r0, #0
 8008d48:	6030      	str	r0, [r6, #0]
 8008d4a:	d1d5      	bne.n	8008cf8 <__sfp+0x28>
 8008d4c:	f7ff ff70 	bl	8008c30 <__sfp_lock_release>
 8008d50:	230c      	movs	r3, #12
 8008d52:	603b      	str	r3, [r7, #0]
 8008d54:	e7ef      	b.n	8008d36 <__sfp+0x66>
 8008d56:	46c0      	nop			; (mov r8, r8)
 8008d58:	08009170 	.word	0x08009170
 8008d5c:	ffff0001 	.word	0xffff0001

08008d60 <_fwalk_reent>:
 8008d60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008d62:	0004      	movs	r4, r0
 8008d64:	0006      	movs	r6, r0
 8008d66:	2700      	movs	r7, #0
 8008d68:	9101      	str	r1, [sp, #4]
 8008d6a:	3448      	adds	r4, #72	; 0x48
 8008d6c:	6863      	ldr	r3, [r4, #4]
 8008d6e:	68a5      	ldr	r5, [r4, #8]
 8008d70:	9300      	str	r3, [sp, #0]
 8008d72:	9b00      	ldr	r3, [sp, #0]
 8008d74:	3b01      	subs	r3, #1
 8008d76:	9300      	str	r3, [sp, #0]
 8008d78:	d504      	bpl.n	8008d84 <_fwalk_reent+0x24>
 8008d7a:	6824      	ldr	r4, [r4, #0]
 8008d7c:	2c00      	cmp	r4, #0
 8008d7e:	d1f5      	bne.n	8008d6c <_fwalk_reent+0xc>
 8008d80:	0038      	movs	r0, r7
 8008d82:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008d84:	89ab      	ldrh	r3, [r5, #12]
 8008d86:	2b01      	cmp	r3, #1
 8008d88:	d908      	bls.n	8008d9c <_fwalk_reent+0x3c>
 8008d8a:	220e      	movs	r2, #14
 8008d8c:	5eab      	ldrsh	r3, [r5, r2]
 8008d8e:	3301      	adds	r3, #1
 8008d90:	d004      	beq.n	8008d9c <_fwalk_reent+0x3c>
 8008d92:	0029      	movs	r1, r5
 8008d94:	0030      	movs	r0, r6
 8008d96:	9b01      	ldr	r3, [sp, #4]
 8008d98:	4798      	blx	r3
 8008d9a:	4307      	orrs	r7, r0
 8008d9c:	3568      	adds	r5, #104	; 0x68
 8008d9e:	e7e8      	b.n	8008d72 <_fwalk_reent+0x12>

08008da0 <__retarget_lock_init_recursive>:
 8008da0:	4770      	bx	lr

08008da2 <__retarget_lock_acquire_recursive>:
 8008da2:	4770      	bx	lr

08008da4 <__retarget_lock_release_recursive>:
 8008da4:	4770      	bx	lr
	...

08008da8 <__swhatbuf_r>:
 8008da8:	b570      	push	{r4, r5, r6, lr}
 8008daa:	000e      	movs	r6, r1
 8008dac:	001d      	movs	r5, r3
 8008dae:	230e      	movs	r3, #14
 8008db0:	5ec9      	ldrsh	r1, [r1, r3]
 8008db2:	0014      	movs	r4, r2
 8008db4:	b096      	sub	sp, #88	; 0x58
 8008db6:	2900      	cmp	r1, #0
 8008db8:	da08      	bge.n	8008dcc <__swhatbuf_r+0x24>
 8008dba:	220c      	movs	r2, #12
 8008dbc:	5eb3      	ldrsh	r3, [r6, r2]
 8008dbe:	2200      	movs	r2, #0
 8008dc0:	602a      	str	r2, [r5, #0]
 8008dc2:	061b      	lsls	r3, r3, #24
 8008dc4:	d411      	bmi.n	8008dea <__swhatbuf_r+0x42>
 8008dc6:	2380      	movs	r3, #128	; 0x80
 8008dc8:	00db      	lsls	r3, r3, #3
 8008dca:	e00f      	b.n	8008dec <__swhatbuf_r+0x44>
 8008dcc:	466a      	mov	r2, sp
 8008dce:	f000 f91b 	bl	8009008 <_fstat_r>
 8008dd2:	2800      	cmp	r0, #0
 8008dd4:	dbf1      	blt.n	8008dba <__swhatbuf_r+0x12>
 8008dd6:	23f0      	movs	r3, #240	; 0xf0
 8008dd8:	9901      	ldr	r1, [sp, #4]
 8008dda:	021b      	lsls	r3, r3, #8
 8008ddc:	4019      	ands	r1, r3
 8008dde:	4b05      	ldr	r3, [pc, #20]	; (8008df4 <__swhatbuf_r+0x4c>)
 8008de0:	18c9      	adds	r1, r1, r3
 8008de2:	424b      	negs	r3, r1
 8008de4:	4159      	adcs	r1, r3
 8008de6:	6029      	str	r1, [r5, #0]
 8008de8:	e7ed      	b.n	8008dc6 <__swhatbuf_r+0x1e>
 8008dea:	2340      	movs	r3, #64	; 0x40
 8008dec:	2000      	movs	r0, #0
 8008dee:	6023      	str	r3, [r4, #0]
 8008df0:	b016      	add	sp, #88	; 0x58
 8008df2:	bd70      	pop	{r4, r5, r6, pc}
 8008df4:	ffffe000 	.word	0xffffe000

08008df8 <__smakebuf_r>:
 8008df8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008dfa:	2602      	movs	r6, #2
 8008dfc:	898b      	ldrh	r3, [r1, #12]
 8008dfe:	0005      	movs	r5, r0
 8008e00:	000c      	movs	r4, r1
 8008e02:	4233      	tst	r3, r6
 8008e04:	d006      	beq.n	8008e14 <__smakebuf_r+0x1c>
 8008e06:	0023      	movs	r3, r4
 8008e08:	3347      	adds	r3, #71	; 0x47
 8008e0a:	6023      	str	r3, [r4, #0]
 8008e0c:	6123      	str	r3, [r4, #16]
 8008e0e:	2301      	movs	r3, #1
 8008e10:	6163      	str	r3, [r4, #20]
 8008e12:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8008e14:	466a      	mov	r2, sp
 8008e16:	ab01      	add	r3, sp, #4
 8008e18:	f7ff ffc6 	bl	8008da8 <__swhatbuf_r>
 8008e1c:	9900      	ldr	r1, [sp, #0]
 8008e1e:	0007      	movs	r7, r0
 8008e20:	0028      	movs	r0, r5
 8008e22:	f7ff f927 	bl	8008074 <_malloc_r>
 8008e26:	2800      	cmp	r0, #0
 8008e28:	d108      	bne.n	8008e3c <__smakebuf_r+0x44>
 8008e2a:	220c      	movs	r2, #12
 8008e2c:	5ea3      	ldrsh	r3, [r4, r2]
 8008e2e:	059a      	lsls	r2, r3, #22
 8008e30:	d4ef      	bmi.n	8008e12 <__smakebuf_r+0x1a>
 8008e32:	2203      	movs	r2, #3
 8008e34:	4393      	bics	r3, r2
 8008e36:	431e      	orrs	r6, r3
 8008e38:	81a6      	strh	r6, [r4, #12]
 8008e3a:	e7e4      	b.n	8008e06 <__smakebuf_r+0xe>
 8008e3c:	4b0f      	ldr	r3, [pc, #60]	; (8008e7c <__smakebuf_r+0x84>)
 8008e3e:	62ab      	str	r3, [r5, #40]	; 0x28
 8008e40:	2380      	movs	r3, #128	; 0x80
 8008e42:	89a2      	ldrh	r2, [r4, #12]
 8008e44:	6020      	str	r0, [r4, #0]
 8008e46:	4313      	orrs	r3, r2
 8008e48:	81a3      	strh	r3, [r4, #12]
 8008e4a:	9b00      	ldr	r3, [sp, #0]
 8008e4c:	6120      	str	r0, [r4, #16]
 8008e4e:	6163      	str	r3, [r4, #20]
 8008e50:	9b01      	ldr	r3, [sp, #4]
 8008e52:	2b00      	cmp	r3, #0
 8008e54:	d00d      	beq.n	8008e72 <__smakebuf_r+0x7a>
 8008e56:	0028      	movs	r0, r5
 8008e58:	230e      	movs	r3, #14
 8008e5a:	5ee1      	ldrsh	r1, [r4, r3]
 8008e5c:	f000 f8e6 	bl	800902c <_isatty_r>
 8008e60:	2800      	cmp	r0, #0
 8008e62:	d006      	beq.n	8008e72 <__smakebuf_r+0x7a>
 8008e64:	2203      	movs	r2, #3
 8008e66:	89a3      	ldrh	r3, [r4, #12]
 8008e68:	4393      	bics	r3, r2
 8008e6a:	001a      	movs	r2, r3
 8008e6c:	2301      	movs	r3, #1
 8008e6e:	4313      	orrs	r3, r2
 8008e70:	81a3      	strh	r3, [r4, #12]
 8008e72:	89a0      	ldrh	r0, [r4, #12]
 8008e74:	4307      	orrs	r7, r0
 8008e76:	81a7      	strh	r7, [r4, #12]
 8008e78:	e7cb      	b.n	8008e12 <__smakebuf_r+0x1a>
 8008e7a:	46c0      	nop			; (mov r8, r8)
 8008e7c:	08008be5 	.word	0x08008be5

08008e80 <_malloc_usable_size_r>:
 8008e80:	1f0b      	subs	r3, r1, #4
 8008e82:	681b      	ldr	r3, [r3, #0]
 8008e84:	1f18      	subs	r0, r3, #4
 8008e86:	2b00      	cmp	r3, #0
 8008e88:	da01      	bge.n	8008e8e <_malloc_usable_size_r+0xe>
 8008e8a:	580b      	ldr	r3, [r1, r0]
 8008e8c:	18c0      	adds	r0, r0, r3
 8008e8e:	4770      	bx	lr

08008e90 <_raise_r>:
 8008e90:	b570      	push	{r4, r5, r6, lr}
 8008e92:	0004      	movs	r4, r0
 8008e94:	000d      	movs	r5, r1
 8008e96:	291f      	cmp	r1, #31
 8008e98:	d904      	bls.n	8008ea4 <_raise_r+0x14>
 8008e9a:	2316      	movs	r3, #22
 8008e9c:	6003      	str	r3, [r0, #0]
 8008e9e:	2001      	movs	r0, #1
 8008ea0:	4240      	negs	r0, r0
 8008ea2:	bd70      	pop	{r4, r5, r6, pc}
 8008ea4:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	d004      	beq.n	8008eb4 <_raise_r+0x24>
 8008eaa:	008a      	lsls	r2, r1, #2
 8008eac:	189b      	adds	r3, r3, r2
 8008eae:	681a      	ldr	r2, [r3, #0]
 8008eb0:	2a00      	cmp	r2, #0
 8008eb2:	d108      	bne.n	8008ec6 <_raise_r+0x36>
 8008eb4:	0020      	movs	r0, r4
 8008eb6:	f000 f831 	bl	8008f1c <_getpid_r>
 8008eba:	002a      	movs	r2, r5
 8008ebc:	0001      	movs	r1, r0
 8008ebe:	0020      	movs	r0, r4
 8008ec0:	f000 f81a 	bl	8008ef8 <_kill_r>
 8008ec4:	e7ed      	b.n	8008ea2 <_raise_r+0x12>
 8008ec6:	2000      	movs	r0, #0
 8008ec8:	2a01      	cmp	r2, #1
 8008eca:	d0ea      	beq.n	8008ea2 <_raise_r+0x12>
 8008ecc:	1c51      	adds	r1, r2, #1
 8008ece:	d103      	bne.n	8008ed8 <_raise_r+0x48>
 8008ed0:	2316      	movs	r3, #22
 8008ed2:	3001      	adds	r0, #1
 8008ed4:	6023      	str	r3, [r4, #0]
 8008ed6:	e7e4      	b.n	8008ea2 <_raise_r+0x12>
 8008ed8:	2400      	movs	r4, #0
 8008eda:	0028      	movs	r0, r5
 8008edc:	601c      	str	r4, [r3, #0]
 8008ede:	4790      	blx	r2
 8008ee0:	0020      	movs	r0, r4
 8008ee2:	e7de      	b.n	8008ea2 <_raise_r+0x12>

08008ee4 <raise>:
 8008ee4:	b510      	push	{r4, lr}
 8008ee6:	4b03      	ldr	r3, [pc, #12]	; (8008ef4 <raise+0x10>)
 8008ee8:	0001      	movs	r1, r0
 8008eea:	6818      	ldr	r0, [r3, #0]
 8008eec:	f7ff ffd0 	bl	8008e90 <_raise_r>
 8008ef0:	bd10      	pop	{r4, pc}
 8008ef2:	46c0      	nop			; (mov r8, r8)
 8008ef4:	2000000c 	.word	0x2000000c

08008ef8 <_kill_r>:
 8008ef8:	2300      	movs	r3, #0
 8008efa:	b570      	push	{r4, r5, r6, lr}
 8008efc:	4d06      	ldr	r5, [pc, #24]	; (8008f18 <_kill_r+0x20>)
 8008efe:	0004      	movs	r4, r0
 8008f00:	0008      	movs	r0, r1
 8008f02:	0011      	movs	r1, r2
 8008f04:	602b      	str	r3, [r5, #0]
 8008f06:	f7f9 fc12 	bl	800272e <_kill>
 8008f0a:	1c43      	adds	r3, r0, #1
 8008f0c:	d103      	bne.n	8008f16 <_kill_r+0x1e>
 8008f0e:	682b      	ldr	r3, [r5, #0]
 8008f10:	2b00      	cmp	r3, #0
 8008f12:	d000      	beq.n	8008f16 <_kill_r+0x1e>
 8008f14:	6023      	str	r3, [r4, #0]
 8008f16:	bd70      	pop	{r4, r5, r6, pc}
 8008f18:	200002f0 	.word	0x200002f0

08008f1c <_getpid_r>:
 8008f1c:	b510      	push	{r4, lr}
 8008f1e:	f7f9 fc00 	bl	8002722 <_getpid>
 8008f22:	bd10      	pop	{r4, pc}

08008f24 <__sread>:
 8008f24:	b570      	push	{r4, r5, r6, lr}
 8008f26:	000c      	movs	r4, r1
 8008f28:	250e      	movs	r5, #14
 8008f2a:	5f49      	ldrsh	r1, [r1, r5]
 8008f2c:	f000 f8a4 	bl	8009078 <_read_r>
 8008f30:	2800      	cmp	r0, #0
 8008f32:	db03      	blt.n	8008f3c <__sread+0x18>
 8008f34:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008f36:	181b      	adds	r3, r3, r0
 8008f38:	6563      	str	r3, [r4, #84]	; 0x54
 8008f3a:	bd70      	pop	{r4, r5, r6, pc}
 8008f3c:	89a3      	ldrh	r3, [r4, #12]
 8008f3e:	4a02      	ldr	r2, [pc, #8]	; (8008f48 <__sread+0x24>)
 8008f40:	4013      	ands	r3, r2
 8008f42:	81a3      	strh	r3, [r4, #12]
 8008f44:	e7f9      	b.n	8008f3a <__sread+0x16>
 8008f46:	46c0      	nop			; (mov r8, r8)
 8008f48:	ffffefff 	.word	0xffffefff

08008f4c <__swrite>:
 8008f4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f4e:	001f      	movs	r7, r3
 8008f50:	898b      	ldrh	r3, [r1, #12]
 8008f52:	0005      	movs	r5, r0
 8008f54:	000c      	movs	r4, r1
 8008f56:	0016      	movs	r6, r2
 8008f58:	05db      	lsls	r3, r3, #23
 8008f5a:	d505      	bpl.n	8008f68 <__swrite+0x1c>
 8008f5c:	230e      	movs	r3, #14
 8008f5e:	5ec9      	ldrsh	r1, [r1, r3]
 8008f60:	2200      	movs	r2, #0
 8008f62:	2302      	movs	r3, #2
 8008f64:	f000 f874 	bl	8009050 <_lseek_r>
 8008f68:	89a3      	ldrh	r3, [r4, #12]
 8008f6a:	4a05      	ldr	r2, [pc, #20]	; (8008f80 <__swrite+0x34>)
 8008f6c:	0028      	movs	r0, r5
 8008f6e:	4013      	ands	r3, r2
 8008f70:	81a3      	strh	r3, [r4, #12]
 8008f72:	0032      	movs	r2, r6
 8008f74:	230e      	movs	r3, #14
 8008f76:	5ee1      	ldrsh	r1, [r4, r3]
 8008f78:	003b      	movs	r3, r7
 8008f7a:	f000 f81f 	bl	8008fbc <_write_r>
 8008f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008f80:	ffffefff 	.word	0xffffefff

08008f84 <__sseek>:
 8008f84:	b570      	push	{r4, r5, r6, lr}
 8008f86:	000c      	movs	r4, r1
 8008f88:	250e      	movs	r5, #14
 8008f8a:	5f49      	ldrsh	r1, [r1, r5]
 8008f8c:	f000 f860 	bl	8009050 <_lseek_r>
 8008f90:	89a3      	ldrh	r3, [r4, #12]
 8008f92:	1c42      	adds	r2, r0, #1
 8008f94:	d103      	bne.n	8008f9e <__sseek+0x1a>
 8008f96:	4a05      	ldr	r2, [pc, #20]	; (8008fac <__sseek+0x28>)
 8008f98:	4013      	ands	r3, r2
 8008f9a:	81a3      	strh	r3, [r4, #12]
 8008f9c:	bd70      	pop	{r4, r5, r6, pc}
 8008f9e:	2280      	movs	r2, #128	; 0x80
 8008fa0:	0152      	lsls	r2, r2, #5
 8008fa2:	4313      	orrs	r3, r2
 8008fa4:	81a3      	strh	r3, [r4, #12]
 8008fa6:	6560      	str	r0, [r4, #84]	; 0x54
 8008fa8:	e7f8      	b.n	8008f9c <__sseek+0x18>
 8008faa:	46c0      	nop			; (mov r8, r8)
 8008fac:	ffffefff 	.word	0xffffefff

08008fb0 <__sclose>:
 8008fb0:	b510      	push	{r4, lr}
 8008fb2:	230e      	movs	r3, #14
 8008fb4:	5ec9      	ldrsh	r1, [r1, r3]
 8008fb6:	f000 f815 	bl	8008fe4 <_close_r>
 8008fba:	bd10      	pop	{r4, pc}

08008fbc <_write_r>:
 8008fbc:	b570      	push	{r4, r5, r6, lr}
 8008fbe:	0004      	movs	r4, r0
 8008fc0:	0008      	movs	r0, r1
 8008fc2:	0011      	movs	r1, r2
 8008fc4:	001a      	movs	r2, r3
 8008fc6:	2300      	movs	r3, #0
 8008fc8:	4d05      	ldr	r5, [pc, #20]	; (8008fe0 <_write_r+0x24>)
 8008fca:	602b      	str	r3, [r5, #0]
 8008fcc:	f7f9 fbe8 	bl	80027a0 <_write>
 8008fd0:	1c43      	adds	r3, r0, #1
 8008fd2:	d103      	bne.n	8008fdc <_write_r+0x20>
 8008fd4:	682b      	ldr	r3, [r5, #0]
 8008fd6:	2b00      	cmp	r3, #0
 8008fd8:	d000      	beq.n	8008fdc <_write_r+0x20>
 8008fda:	6023      	str	r3, [r4, #0]
 8008fdc:	bd70      	pop	{r4, r5, r6, pc}
 8008fde:	46c0      	nop			; (mov r8, r8)
 8008fe0:	200002f0 	.word	0x200002f0

08008fe4 <_close_r>:
 8008fe4:	2300      	movs	r3, #0
 8008fe6:	b570      	push	{r4, r5, r6, lr}
 8008fe8:	4d06      	ldr	r5, [pc, #24]	; (8009004 <_close_r+0x20>)
 8008fea:	0004      	movs	r4, r0
 8008fec:	0008      	movs	r0, r1
 8008fee:	602b      	str	r3, [r5, #0]
 8008ff0:	f7f9 fbf2 	bl	80027d8 <_close>
 8008ff4:	1c43      	adds	r3, r0, #1
 8008ff6:	d103      	bne.n	8009000 <_close_r+0x1c>
 8008ff8:	682b      	ldr	r3, [r5, #0]
 8008ffa:	2b00      	cmp	r3, #0
 8008ffc:	d000      	beq.n	8009000 <_close_r+0x1c>
 8008ffe:	6023      	str	r3, [r4, #0]
 8009000:	bd70      	pop	{r4, r5, r6, pc}
 8009002:	46c0      	nop			; (mov r8, r8)
 8009004:	200002f0 	.word	0x200002f0

08009008 <_fstat_r>:
 8009008:	2300      	movs	r3, #0
 800900a:	b570      	push	{r4, r5, r6, lr}
 800900c:	4d06      	ldr	r5, [pc, #24]	; (8009028 <_fstat_r+0x20>)
 800900e:	0004      	movs	r4, r0
 8009010:	0008      	movs	r0, r1
 8009012:	0011      	movs	r1, r2
 8009014:	602b      	str	r3, [r5, #0]
 8009016:	f7f9 fbe9 	bl	80027ec <_fstat>
 800901a:	1c43      	adds	r3, r0, #1
 800901c:	d103      	bne.n	8009026 <_fstat_r+0x1e>
 800901e:	682b      	ldr	r3, [r5, #0]
 8009020:	2b00      	cmp	r3, #0
 8009022:	d000      	beq.n	8009026 <_fstat_r+0x1e>
 8009024:	6023      	str	r3, [r4, #0]
 8009026:	bd70      	pop	{r4, r5, r6, pc}
 8009028:	200002f0 	.word	0x200002f0

0800902c <_isatty_r>:
 800902c:	2300      	movs	r3, #0
 800902e:	b570      	push	{r4, r5, r6, lr}
 8009030:	4d06      	ldr	r5, [pc, #24]	; (800904c <_isatty_r+0x20>)
 8009032:	0004      	movs	r4, r0
 8009034:	0008      	movs	r0, r1
 8009036:	602b      	str	r3, [r5, #0]
 8009038:	f7f9 fbe6 	bl	8002808 <_isatty>
 800903c:	1c43      	adds	r3, r0, #1
 800903e:	d103      	bne.n	8009048 <_isatty_r+0x1c>
 8009040:	682b      	ldr	r3, [r5, #0]
 8009042:	2b00      	cmp	r3, #0
 8009044:	d000      	beq.n	8009048 <_isatty_r+0x1c>
 8009046:	6023      	str	r3, [r4, #0]
 8009048:	bd70      	pop	{r4, r5, r6, pc}
 800904a:	46c0      	nop			; (mov r8, r8)
 800904c:	200002f0 	.word	0x200002f0

08009050 <_lseek_r>:
 8009050:	b570      	push	{r4, r5, r6, lr}
 8009052:	0004      	movs	r4, r0
 8009054:	0008      	movs	r0, r1
 8009056:	0011      	movs	r1, r2
 8009058:	001a      	movs	r2, r3
 800905a:	2300      	movs	r3, #0
 800905c:	4d05      	ldr	r5, [pc, #20]	; (8009074 <_lseek_r+0x24>)
 800905e:	602b      	str	r3, [r5, #0]
 8009060:	f7f9 fbdb 	bl	800281a <_lseek>
 8009064:	1c43      	adds	r3, r0, #1
 8009066:	d103      	bne.n	8009070 <_lseek_r+0x20>
 8009068:	682b      	ldr	r3, [r5, #0]
 800906a:	2b00      	cmp	r3, #0
 800906c:	d000      	beq.n	8009070 <_lseek_r+0x20>
 800906e:	6023      	str	r3, [r4, #0]
 8009070:	bd70      	pop	{r4, r5, r6, pc}
 8009072:	46c0      	nop			; (mov r8, r8)
 8009074:	200002f0 	.word	0x200002f0

08009078 <_read_r>:
 8009078:	b570      	push	{r4, r5, r6, lr}
 800907a:	0004      	movs	r4, r0
 800907c:	0008      	movs	r0, r1
 800907e:	0011      	movs	r1, r2
 8009080:	001a      	movs	r2, r3
 8009082:	2300      	movs	r3, #0
 8009084:	4d05      	ldr	r5, [pc, #20]	; (800909c <_read_r+0x24>)
 8009086:	602b      	str	r3, [r5, #0]
 8009088:	f7f9 fb6d 	bl	8002766 <_read>
 800908c:	1c43      	adds	r3, r0, #1
 800908e:	d103      	bne.n	8009098 <_read_r+0x20>
 8009090:	682b      	ldr	r3, [r5, #0]
 8009092:	2b00      	cmp	r3, #0
 8009094:	d000      	beq.n	8009098 <_read_r+0x20>
 8009096:	6023      	str	r3, [r4, #0]
 8009098:	bd70      	pop	{r4, r5, r6, pc}
 800909a:	46c0      	nop			; (mov r8, r8)
 800909c:	200002f0 	.word	0x200002f0

080090a0 <_init>:
 80090a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090a2:	46c0      	nop			; (mov r8, r8)
 80090a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80090a6:	bc08      	pop	{r3}
 80090a8:	469e      	mov	lr, r3
 80090aa:	4770      	bx	lr

080090ac <_fini>:
 80090ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090ae:	46c0      	nop			; (mov r8, r8)
 80090b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80090b2:	bc08      	pop	{r3}
 80090b4:	469e      	mov	lr, r3
 80090b6:	4770      	bx	lr
